/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#include "znc/zncconfig.h"


#define SWIGPERL
#define SWIG_CASTRANK_MODE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



#ifdef __cplusplus
/* Needed on some windows machines---since MS plays funny games with the header files under C++ */
#include <math.h>
#include <stdlib.h>
extern "C" {
#endif
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

/* Add in functionality missing in older versions of Perl. Much of this is based on Devel-PPPort on cpan. */

/* Add PERL_REVISION, PERL_VERSION, PERL_SUBVERSION if missing */
#ifndef PERL_REVISION
#  if !defined(__PATCHLEVEL_H_INCLUDED__) && !(defined(PATCHLEVEL) && defined(SUBVERSION))
#    define PERL_PATCHLEVEL_H_IMPLICIT
#    include <patchlevel.h>
#  endif
#  if !(defined(PERL_VERSION) || (defined(SUBVERSION) && defined(PATCHLEVEL)))
#    include <could_not_find_Perl_patchlevel.h>
#  endif
#  ifndef PERL_REVISION
#    define PERL_REVISION       (5)
#    define PERL_VERSION        PATCHLEVEL
#    define PERL_SUBVERSION     SUBVERSION
#  endif
#endif

#if defined(WIN32) && defined(PERL_OBJECT) && !defined(PerlIO_exportFILE)
#define PerlIO_exportFILE(fh,fl) (FILE*)(fh)
#endif

#ifndef SvIOK_UV
# define SvIOK_UV(sv)       (SvIOK(sv) && (SvUVX(sv) == SvIVX(sv)))
#endif

#ifndef SvUOK
# define SvUOK(sv)           SvIOK_UV(sv)
#endif

#if ((PERL_VERSION < 4) || ((PERL_VERSION == 4) && (PERL_SUBVERSION <= 5)))
#  define PL_sv_undef               sv_undef
#  define PL_na	                    na
#  define PL_errgv                  errgv
#  define PL_sv_no                  sv_no
#  define PL_sv_yes                 sv_yes
#  define PL_markstack_ptr          markstack_ptr
#endif

#ifndef IVSIZE
#  ifdef LONGSIZE
#    define IVSIZE LONGSIZE
#  else
#    define IVSIZE 4 /* A bold guess, but the best we can make. */
#  endif
#endif

#ifndef INT2PTR
#  if (IVSIZE == PTRSIZE) && (UVSIZE == PTRSIZE)
#    define PTRV                  UV
#    define INT2PTR(any,d)        (any)(d)
#  else
#    if PTRSIZE == LONGSIZE
#      define PTRV                unsigned long
#    else
#      define PTRV                unsigned
#    endif
#    define INT2PTR(any,d)        (any)(PTRV)(d)
#  endif

#  define NUM2PTR(any,d)  (any)(PTRV)(d)
#  define PTR2IV(p)       INT2PTR(IV,p)
#  define PTR2UV(p)       INT2PTR(UV,p)
#  define PTR2NV(p)       NUM2PTR(NV,p)

#  if PTRSIZE == LONGSIZE
#    define PTR2ul(p)     (unsigned long)(p)
#  else
#    define PTR2ul(p)     INT2PTR(unsigned long,p)
#  endif
#endif /* !INT2PTR */

#ifndef SvPV_nolen
# define SvPV_nolen(x) SvPV(x,PL_na)
#endif

#ifndef get_sv
#  define get_sv perl_get_sv
#endif

#ifndef ERRSV
#  define ERRSV get_sv("@",FALSE)
#endif

#ifndef pTHX_
#define pTHX_
#endif   

#include <string.h>
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Perl_ErrorType(int code) {
  switch(code) {
  case SWIG_MemoryError:
    return "MemoryError";
  case SWIG_IOError:
    return "IOError";
  case SWIG_RuntimeError:
    return "RuntimeError";
  case SWIG_IndexError:
    return "IndexError";
  case SWIG_TypeError:
    return "TypeError";
  case SWIG_DivisionByZero:
    return "ZeroDivisionError";
  case SWIG_OverflowError:
    return "OverflowError";
  case SWIG_SyntaxError:
    return "SyntaxError";
  case SWIG_ValueError:
    return "ValueError";
  case SWIG_SystemError:
    return "SystemError";
  case SWIG_AttributeError:
    return "AttributeError";
  default:
    return "RuntimeError";
  }
}


/* -----------------------------------------------------------------------------
 * perlrun.swg
 *
 * This file contains the runtime support for Perl modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef PERL_OBJECT
#define SWIG_PERL_OBJECT_DECL CPerlObj *SWIGUNUSEDPARM(pPerl),
#define SWIG_PERL_OBJECT_CALL pPerl,
#else
#define SWIG_PERL_OBJECT_DECL
#define SWIG_PERL_OBJECT_CALL
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(obj, pp, type, flags)           SWIG_Perl_ConvertPtr(SWIG_PERL_OBJECT_CALL obj, pp, type, flags)
#define SWIG_ConvertPtrAndOwn(obj, pp, type, flags,own) SWIG_Perl_ConvertPtrAndOwn(SWIG_PERL_OBJECT_CALL obj, pp, type, flags, own)
#define SWIG_NewPointerObj(p, type, flags)              SWIG_Perl_NewPointerObj(SWIG_PERL_OBJECT_CALL p, type, flags)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, p, s, type)             SWIG_Perl_ConvertPacked(SWIG_PERL_OBJECT_CALL obj, p, s, type)
#define SWIG_NewPackedObj(p, s, type)	                SWIG_Perl_NewPackedObj(SWIG_PERL_OBJECT_CALL p, s, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Perl_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Perl_SetModule(pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Perl_ErrorType(code)               
#define SWIG_Error(code, msg)            		sv_setpvf(get_sv("@", GV_ADD), "%s %s", SWIG_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    

/* Perl-specific SWIG API */

#define SWIG_MakePtr(sv, ptr, type, flags)              SWIG_Perl_MakePtr(SWIG_PERL_OBJECT_CALL sv, ptr, type, flags)
#define SWIG_MakePackedObj(sv, p, s, type)	        SWIG_Perl_MakePackedObj(SWIG_PERL_OBJECT_CALL sv, p, s, type)
#define SWIG_SetError(str)                              SWIG_Error(SWIG_RuntimeError, str)


#define SWIG_PERL_DECL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_DECL arg1)
#define SWIG_PERL_CALL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_CALL arg1)
#define SWIG_PERL_DECL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_DECL arg1, arg2)
#define SWIG_PERL_CALL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_CALL arg1, arg2)

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_OWNER   SWIG_POINTER_OWN
#define SWIG_SHADOW  SWIG_OWNER << 1

#define SWIG_MAYBE_PERL_OBJECT SWIG_PERL_OBJECT_DECL

/* SWIG Perl macros */

/* Macro to declare an XS function */
#ifndef XSPROTO
#   define XSPROTO(name) void name(pTHX_ CV* cv)
#endif

/* Macro to call an XS function */
#ifdef PERL_OBJECT 
#  define SWIG_CALLXS(_name) _name(cv,pPerl) 
#else 
#  ifndef MULTIPLICITY 
#    define SWIG_CALLXS(_name) _name(cv) 
#  else 
#    define SWIG_CALLXS(_name) _name(PERL_GET_THX, cv) 
#  endif 
#endif 

#ifdef PERL_OBJECT
#define MAGIC_PPERL  CPerlObj *pPerl = (CPerlObj *) this;

#ifdef __cplusplus
extern "C" {
#endif
typedef int (CPerlObj::*SwigMagicFunc)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)
#define SWIGCLASS_STATIC

#else /* PERL_OBJECT */

#define MAGIC_PPERL
#define SWIGCLASS_STATIC static SWIGUNUSED

#ifndef MULTIPLICITY
#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)

#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFunc)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#else /* MULTIPLICITY */

#define SWIG_MAGIC(a,b) (struct interpreter *interp, SV *a, MAGIC *b)

#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFunc)(struct interpreter *, SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#endif /* MULTIPLICITY */
#endif /* PERL_OBJECT */

#  ifdef PERL_OBJECT
#    define SWIG_croak_null() SWIG_Perl_croak_null(pPerl)
static void SWIG_Perl_croak_null(CPerlObj *pPerl)
#  else
static void SWIG_croak_null()
#  endif
{
  SV *err = get_sv("@", GV_ADD);
#  if (PERL_VERSION < 6)
  croak("%_", err);
#  else
  if (sv_isobject(err))
    croak(0);
  else
    croak("%s", SvPV_nolen(err));
#  endif
}


/* 
   Define how strict is the cast between strings and integers/doubles
   when overloading between these types occurs.
   
   The default is making it as strict as possible by using SWIG_AddCast
   when needed.
   
   You can use -DSWIG_PERL_NO_STRICT_STR2NUM at compilation time to
   disable the SWIG_AddCast, making the casting between string and
   numbers less strict.

   In the end, we try to solve the overloading between strings and
   numerical types in the more natural way, but if you can avoid it,
   well, avoid it using %rename, for example.
*/
#ifndef SWIG_PERL_NO_STRICT_STR2NUM
# ifndef SWIG_PERL_STRICT_STR2NUM
#  define SWIG_PERL_STRICT_STR2NUM
# endif
#endif
#ifdef SWIG_PERL_STRICT_STR2NUM
/* string takes precedence */
#define SWIG_Str2NumCast(x) SWIG_AddCast(x)  
#else
/* number takes precedence */
#define SWIG_Str2NumCast(x) x
#endif



#include <stdlib.h>

SWIGRUNTIME const char *
SWIG_Perl_TypeProxyName(const swig_type_info *type) {
  if (!type) return NULL;
  if (type->clientdata != NULL) {
    return (const char*) type->clientdata;
  } 
  else {
    return type->name;
  }
}

/* Identical to SWIG_TypeCheck, except for strcmp comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeProxyCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(SWIG_Perl_TypeProxyName(iter->type), c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* Function for getting a pointer value */

SWIGRUNTIME int
SWIG_Perl_ConvertPtrAndOwn(SWIG_MAYBE_PERL_OBJECT SV *sv, void **ptr, swig_type_info *_t, int flags, int *own) {
  swig_cast_info *tc;
  void *voidptr = (void *)0;
  SV *tsv = 0;

  if (own)
    *own = 0;

  /* If magical, apply more magic */
  if (SvGMAGICAL(sv))
    mg_get(sv);

  /* Check to see if this is an object */
  if (sv_isobject(sv)) {
    IV tmp = 0;
    tsv = (SV*) SvRV(sv);
    if ((SvTYPE(tsv) == SVt_PVHV)) {
      MAGIC *mg;
      if (SvMAGICAL(tsv)) {
        mg = mg_find(tsv,'P');
        if (mg) {
          sv = mg->mg_obj;
          if (sv_isobject(sv)) {
	    tsv = (SV*)SvRV(sv);
            tmp = SvIV(tsv);
          }
        }
      } else {
        return SWIG_ERROR;
      }
    } else {
      tmp = SvIV(tsv);
    }
    voidptr = INT2PTR(void *,tmp);
  } else if (! SvOK(sv)) {            /* Check for undef */
    *(ptr) = (void *) 0;
    return SWIG_OK;
  } else if (SvTYPE(sv) == SVt_RV) {  /* Check for NULL pointer */
    if (!SvROK(sv)) {
      /* In Perl 5.12 and later, SVt_RV == SVt_IV, so sv could be a valid integer value.  */
      if (SvIOK(sv)) {
        return SWIG_ERROR;
      } else {
        /* NULL pointer (reference to undef). */
        *(ptr) = (void *) 0;
        return SWIG_OK;
      }
    } else {
      return SWIG_ERROR;
    }
  } else {                            /* Don't know what it is */
    return SWIG_ERROR;
  }
  if (_t) {
    /* Now see if the types match */
    char *_c = HvNAME(SvSTASH(SvRV(sv)));
    tc = SWIG_TypeProxyCheck(_c,_t);
#ifdef SWIG_DIRECTORS
    if (!tc && !sv_derived_from(sv,SWIG_Perl_TypeProxyName(_t))) {
#else
    if (!tc) {
#endif
      return SWIG_ERROR;
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,voidptr,&newmemory);
      if (newmemory == SWIG_CAST_NEW_MEMORY) {
        assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
        if (own)
          *own = *own | SWIG_CAST_NEW_MEMORY;
      }
    }
  } else {
    *ptr = voidptr;
  }

  /* 
   *  DISOWN implementation: we need a perl guru to check this one.
   */
  if (tsv && (flags & SWIG_POINTER_DISOWN)) {
    /* 
     *  almost copy paste code from below SWIG_POINTER_OWN setting
     */
    SV *obj = sv;
    HV *stash = SvSTASH(SvRV(obj));
    GV *gv = *(GV**)hv_fetch(stash, "OWNER", 5, TRUE);
    if (isGV(gv)) {
      HV *hv = GvHVn(gv);
      /*
       * To set ownership (see below), a newSViv(1) entry is added. 
       * Hence, to remove ownership, we delete the entry.
       */
      if (hv_exists_ent(hv, obj, 0)) {
	hv_delete_ent(hv, obj, 0, 0);
      }
    }
  }
  return SWIG_OK;
}

SWIGRUNTIME int
SWIG_Perl_ConvertPtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void **ptr, swig_type_info *_t, int flags) {
  return SWIG_Perl_ConvertPtrAndOwn(sv, ptr, _t, flags, 0);
}

SWIGRUNTIME void
SWIG_Perl_MakePtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, swig_type_info *t, int flags) {
  if (ptr && (flags & (SWIG_SHADOW | SWIG_POINTER_OWN))) {
    SV *self;
    SV *obj=newSV(0);
    HV *hash=newHV();
    HV *stash;
    sv_setref_pv(obj, SWIG_Perl_TypeProxyName(t), ptr);
    stash=SvSTASH(SvRV(obj));
    if (flags & SWIG_POINTER_OWN) {
      HV *hv;
      GV *gv = *(GV**)hv_fetch(stash, "OWNER", 5, TRUE);
      if (!isGV(gv))
        gv_init(gv, stash, "OWNER", 5, FALSE);
      hv=GvHVn(gv);
      hv_store_ent(hv, obj, newSViv(1), 0);
    }
    sv_magic((SV *)hash, (SV *)obj, 'P', Nullch, 0);
    SvREFCNT_dec(obj);
    self=newRV_noinc((SV *)hash);
    sv_setsv(sv, self);
    SvREFCNT_dec((SV *)self);
    sv_bless(sv, stash);
  }
  else {
    sv_setref_pv(sv, SWIG_Perl_TypeProxyName(t), ptr);
  }
}

SWIGRUNTIMEINLINE SV *
SWIG_Perl_NewPointerObj(SWIG_MAYBE_PERL_OBJECT void *ptr, swig_type_info *t, int flags) {
  SV *result = sv_newmortal();
  SWIG_MakePtr(result, ptr, t, flags);
  return result;
}

SWIGRUNTIME void
SWIG_Perl_MakePackedObj(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(SWIG_Perl_TypeProxyName(type))) > 1000) return;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,SWIG_Perl_TypeProxyName(type));
  sv_setpv(sv, result);
}

SWIGRUNTIME SV *
SWIG_Perl_NewPackedObj(SWIG_MAYBE_PERL_OBJECT void *ptr, int sz, swig_type_info *type) {
  SV *result = sv_newmortal();
  SWIG_Perl_MakePackedObj(result, ptr, sz, type);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Perl_ConvertPacked(SWIG_MAYBE_PERL_OBJECT SV *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c = 0;

  if ((!obj) || (!SvOK(obj))) return SWIG_ERROR;
  c = SvPV_nolen(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') return SWIG_ERROR;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) return SWIG_ERROR;
  }
  return SWIG_OK;
}


/* Macros for low-level exception handling */
#define SWIG_croak(x)    { SWIG_Error(SWIG_RuntimeError, x); SWIG_fail; }


typedef XSPROTO(SwigPerlWrapper);
typedef SwigPerlWrapper *SwigPerlWrapperPtr;

/* Structure for command table */
typedef struct {
  const char         *name;
  SwigPerlWrapperPtr  wrapper;
} swig_command_info;

/* Information for constant table */

#define SWIG_INT     1
#define SWIG_FLOAT   2
#define SWIG_STRING  3
#define SWIG_POINTER 4
#define SWIG_BINARY  5

/* Constant information structure */
typedef struct swig_constant_info {
    int              type;
    const char      *name;
    long             lvalue;
    double           dvalue;
    void            *pvalue;
    swig_type_info **ptype;
} swig_constant_info;


/* Structure for variable table */
typedef struct {
  const char   *name;
  SwigMagicFunc   set;
  SwigMagicFunc   get;
  swig_type_info  **type;
} swig_variable_info;

/* Magic variable code */
#ifndef PERL_OBJECT
# ifdef __cplusplus
#  define swig_create_magic(s,a,b,c) _swig_create_magic(s,const_cast<char*>(a),b,c)
# else
#  define swig_create_magic(s,a,b,c) _swig_create_magic(s,(char*)(a),b,c)
# endif
# ifndef MULTIPLICITY
SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(SV *, MAGIC *), int (*get)(SV *,MAGIC *)) 
# else
SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(struct interpreter*, SV *, MAGIC *), int (*get)(struct interpreter*, SV *,MAGIC *)) 
# endif
#else
#  define swig_create_magic(s,a,b,c) _swig_create_magic(pPerl,s,a,b,c)
SWIGRUNTIME void _swig_create_magic(CPerlObj *pPerl, SV *sv, const char *name, int (CPerlObj::*set)(SV *, MAGIC *), int (CPerlObj::*get)(SV *, MAGIC *)) 
#endif
{
  MAGIC *mg;
  sv_magic(sv,sv,'U',name,strlen(name));
  mg = mg_find(sv,'U');
  mg->mg_virtual = (MGVTBL *) malloc(sizeof(MGVTBL));
  mg->mg_virtual->svt_get = (SwigMagicFunc) get;
  mg->mg_virtual->svt_set = (SwigMagicFunc) set;
  mg->mg_virtual->svt_len = 0;
  mg->mg_virtual->svt_clear = 0;
  mg->mg_virtual->svt_free = 0;
}


SWIGRUNTIME swig_module_info *
SWIG_Perl_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  SV *pointer;

  /* first check if pointer already created */
  if (!type_pointer) {
    pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, FALSE | GV_ADDMULTI);
    if (pointer && SvOK(pointer)) {
      type_pointer = INT2PTR(swig_type_info **, SvIV(pointer));
    }
  }

  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Perl_SetModule(swig_module_info *module) {
  SV *pointer;

  /* create a new pointer */
  pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TRUE | GV_ADDMULTI);
  sv_setiv(pointer, PTR2IV(module));
}

#ifdef __cplusplus
}
#endif

/* Workaround perl5 global namespace pollution. Note that undefining library
 * functions like fopen will not solve the problem on all platforms as fopen
 * might be a macro on Windows but not necessarily on other operating systems. */
#ifdef do_open
  #undef do_open
#endif
#ifdef do_close
  #undef do_close
#endif
#ifdef do_exec
  #undef do_exec
#endif
#ifdef scalar
  #undef scalar
#endif
#ifdef list
  #undef list
#endif
#ifdef apply
  #undef apply
#endif
#ifdef convert
  #undef convert
#endif
#ifdef Error
  #undef Error
#endif
#ifdef form
  #undef form
#endif
#ifdef vform
  #undef vform
#endif
#ifdef LABEL
  #undef LABEL
#endif
#ifdef METHOD
  #undef METHOD
#endif
#ifdef Move
  #undef Move
#endif
#ifdef yylex
  #undef yylex
#endif
#ifdef yyparse
  #undef yyparse
#endif
#ifdef yyerror
  #undef yyerror
#endif
#ifdef invert
  #undef invert
#endif
#ifdef ref
  #undef ref
#endif
#ifdef read
  #undef read
#endif
#ifdef write
  #undef write
#endif
#ifdef eof
  #undef eof
#endif
#ifdef close
  #undef close
#endif
#ifdef rewind
  #undef rewind
#endif
#ifdef free
  #undef free
#endif
#ifdef malloc
  #undef malloc
#endif
#ifdef calloc
  #undef calloc
#endif
#ifdef Stat
  #undef Stat
#endif
#ifdef check
  #undef check
#endif
#ifdef seekdir
  #undef seekdir
#endif
#ifdef open
  #undef open
#endif
#ifdef readdir
  #undef readdir
#endif
#ifdef bind
  #undef bind
#endif
#ifdef access
  #undef access
#endif
#ifdef stat
  #undef stat
#endif

#ifdef bool
  /* Leave if macro is from C99 stdbool.h */
  #ifndef __bool_true_false_are_defined
    #undef bool
  #endif
#endif




#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_m_CModule__f_r_q_const__CString__void swig_types[0]
#define SWIGTYPE_p_CAuthBase swig_types[1]
#define SWIGTYPE_p_CBufLine swig_types[2]
#define SWIGTYPE_p_CBuffer swig_types[3]
#define SWIGTYPE_p_CChan swig_types[4]
#define SWIGTYPE_p_CClient swig_types[5]
#define SWIGTYPE_p_CClientAuth swig_types[6]
#define SWIGTYPE_p_CConfig swig_types[7]
#define SWIGTYPE_p_CConfigEntry swig_types[8]
#define SWIGTYPE_p_CConnectQueueTimer swig_types[9]
#define SWIGTYPE_p_CCron swig_types[10]
#define SWIGTYPE_p_CDebug swig_types[11]
#define SWIGTYPE_p_CDebugStream swig_types[12]
#define SWIGTYPE_p_CDir swig_types[13]
#define SWIGTYPE_p_CException swig_types[14]
#define SWIGTYPE_p_CExecSock swig_types[15]
#define SWIGTYPE_p_CFPTimer swig_types[16]
#define SWIGTYPE_p_CFile swig_types[17]
#define SWIGTYPE_p_CGetAddrInfo swig_types[18]
#define SWIGTYPE_p_CHTTPSock swig_types[19]
#define SWIGTYPE_p_CIRCNetwork swig_types[20]
#define SWIGTYPE_p_CIRCSock swig_types[21]
#define SWIGTYPE_p_CIncomingConnection swig_types[22]
#define SWIGTYPE_p_CListener swig_types[23]
#define SWIGTYPE_p_CModCommand swig_types[24]
#define SWIGTYPE_p_CModInfo swig_types[25]
#define SWIGTYPE_p_CModule swig_types[26]
#define SWIGTYPE_p_CModules swig_types[27]
#define SWIGTYPE_p_CNick swig_types[28]
#define SWIGTYPE_p_CPerlModule swig_types[29]
#define SWIGTYPE_p_CPerlSocket swig_types[30]
#define SWIGTYPE_p_CPerlTimer swig_types[31]
#define SWIGTYPE_p_CRealListener swig_types[32]
#define SWIGTYPE_p_CSCharBuffer swig_types[33]
#define SWIGTYPE_p_CSConnection swig_types[34]
#define SWIGTYPE_p_CSListener swig_types[35]
#define SWIGTYPE_p_CSMonitorFD swig_types[36]
#define SWIGTYPE_p_CSSSLConnection swig_types[37]
#define SWIGTYPE_p_CSSockAddr swig_types[38]
#define SWIGTYPE_p_CServer swig_types[39]
#define SWIGTYPE_p_CSmartPtrT_CAuthBase_t swig_types[40]
#define SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t swig_types[41]
#define SWIGTYPE_p_CSmartPtrT_CTemplateTagHandler_t swig_types[42]
#define SWIGTYPE_p_CSmartPtrT_CWebSession_t swig_types[43]
#define SWIGTYPE_p_CSmartPtrT_CWebSubPage_t swig_types[44]
#define SWIGTYPE_p_CSockCommon swig_types[45]
#define SWIGTYPE_p_CSockManager swig_types[46]
#define SWIGTYPE_p_CSocket swig_types[47]
#define SWIGTYPE_p_CSocketManager swig_types[48]
#define SWIGTYPE_p_CString swig_types[49]
#define SWIGTYPE_p_CString__EEscape swig_types[50]
#define SWIGTYPE_p_CTable swig_types[51]
#define SWIGTYPE_p_CTemplate swig_types[52]
#define SWIGTYPE_p_CTemplateLoopContext swig_types[53]
#define SWIGTYPE_p_CTemplateOptions swig_types[54]
#define SWIGTYPE_p_CTemplateTagHandler swig_types[55]
#define SWIGTYPE_p_CTimer swig_types[56]
#define SWIGTYPE_p_CUser swig_types[57]
#define SWIGTYPE_p_CUtils swig_types[58]
#define SWIGTYPE_p_CWebSession swig_types[59]
#define SWIGTYPE_p_CWebSessionMap swig_types[60]
#define SWIGTYPE_p_CWebSock swig_types[61]
#define SWIGTYPE_p_CWebSubPage swig_types[62]
#define SWIGTYPE_p_CZNC swig_types[63]
#define SWIGTYPE_p_CZNCSock swig_types[64]
#define SWIGTYPE_p_CZNCTagHandler swig_types[65]
#define SWIGTYPE_p_Csock swig_types[66]
#define SWIGTYPE_p_EAcceptType swig_types[67]
#define SWIGTYPE_p_EChanModeArgs swig_types[68]
#define SWIGTYPE_p_EModException swig_types[69]
#define SWIGTYPE_p_EModRet swig_types[70]
#define SWIGTYPE_p_EModes swig_types[71]
#define SWIGTYPE_p_EModuleType swig_types[72]
#define SWIGTYPE_p_EType swig_types[73]
#define SWIGTYPE_p_EUserPerms swig_types[74]
#define SWIGTYPE_p_EntryMap swig_types[75]
#define SWIGTYPE_p_EntryMapIterator swig_types[76]
#define SWIGTYPE_p_MCString swig_types[77]
#define SWIGTYPE_p_MCString__iterator swig_types[78]
#define SWIGTYPE_p_ModCmdFunc swig_types[79]
#define SWIGTYPE_p_ModDirList swig_types[80]
#define SWIGTYPE_p_SCString swig_types[81]
#define SWIGTYPE_p_String swig_types[82]
#define SWIGTYPE_p_SubConfig swig_types[83]
#define SWIGTYPE_p_SubConfigMap swig_types[84]
#define SWIGTYPE_p_SubConfigMapIterator swig_types[85]
#define SWIGTYPE_p_TSocketManagerT_CZNCSock_t swig_types[86]
#define SWIGTYPE_p_TrafficStatsMap swig_types[87]
#define SWIGTYPE_p_TrafficStatsPair swig_types[88]
#define SWIGTYPE_p_bool swig_types[89]
#define SWIGTYPE_p_char swig_types[90]
#define SWIGTYPE_p_difference_type swig_types[91]
#define SWIGTYPE_p_double swig_types[92]
#define SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule swig_types[93]
#define SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule swig_types[94]
#define SWIGTYPE_p_f_p_CModule_p_CFPTimer__void swig_types[95]
#define SWIGTYPE_p_f_r_std__ostream__r_std__ostream swig_types[96]
#define SWIGTYPE_p_fd_set swig_types[97]
#define SWIGTYPE_p_gid_t swig_types[98]
#define SWIGTYPE_p_in_addr swig_types[99]
#define SWIGTYPE_p_int swig_types[100]
#define SWIGTYPE_p_int32_t swig_types[101]
#define SWIGTYPE_p_int64_t swig_types[102]
#define SWIGTYPE_p_key_type swig_types[103]
#define SWIGTYPE_p_long swig_types[104]
#define SWIGTYPE_p_mapped_type swig_types[105]
#define SWIGTYPE_p_mode_t swig_types[106]
#define SWIGTYPE_p_size_type swig_types[107]
#define SWIGTYPE_p_sockaddr_in swig_types[108]
#define SWIGTYPE_p_sockaddr_storage swig_types[109]
#define SWIGTYPE_p_socklen_t swig_types[110]
#define SWIGTYPE_p_ssize_t swig_types[111]
#define SWIGTYPE_p_stat swig_types[112]
#define SWIGTYPE_p_std__dequeT_CBufLine_t swig_types[113]
#define SWIGTYPE_p_std__listT_CIRCNetwork_p_t swig_types[114]
#define SWIGTYPE_p_std__listT_CString_t swig_types[115]
#define SWIGTYPE_p_std__mapT_CString_CConfigEntry_t swig_types[116]
#define SWIGTYPE_p_std__mapT_CString_CNick_t swig_types[117]
#define SWIGTYPE_p_std__mapT_CString_CString_t swig_types[118]
#define SWIGTYPE_p_std__mapT_CString_CUser_p_t swig_types[119]
#define SWIGTYPE_p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator swig_types[120]
#define SWIGTYPE_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t swig_types[121]
#define SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t swig_types[122]
#define SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator swig_types[123]
#define SWIGTYPE_p_std__mapT_char_unsigned_int_t swig_types[124]
#define SWIGTYPE_p_std__mapT_int_short_t swig_types[125]
#define SWIGTYPE_p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t swig_types[126]
#define SWIGTYPE_p_std__mapT_unsigned_char_CString_t swig_types[127]
#define SWIGTYPE_p_std__ostream swig_types[128]
#define SWIGTYPE_p_std__pairT_CString_CString_t swig_types[129]
#define SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t swig_types[130]
#define SWIGTYPE_p_std__queueT_std__pairT_CString_CString_t_t swig_types[131]
#define SWIGTYPE_p_std__setT_CChan_p_t swig_types[132]
#define SWIGTYPE_p_std__setT_CModInfo_t swig_types[133]
#define SWIGTYPE_p_std__setT_CSocket_p_t__const_iterator swig_types[134]
#define SWIGTYPE_p_std__setT_CString_t swig_types[135]
#define SWIGTYPE_p_std__setT_CTimer_p_t__const_iterator swig_types[136]
#define SWIGTYPE_p_std__setT_unsigned_char_t swig_types[137]
#define SWIGTYPE_p_std__vectorT_CChan_p_t swig_types[138]
#define SWIGTYPE_p_std__vectorT_CClient_p_t swig_types[139]
#define SWIGTYPE_p_std__vectorT_CCron_p_t swig_types[140]
#define SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t swig_types[141]
#define SWIGTYPE_p_std__vectorT_CListener_p_t swig_types[142]
#define SWIGTYPE_p_std__vectorT_CServer_p_t swig_types[143]
#define SWIGTYPE_p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t swig_types[144]
#define SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t swig_types[145]
#define SWIGTYPE_p_std__vectorT_CString_t swig_types[146]
#define SWIGTYPE_p_std__vectorT_CTemplate_p_t swig_types[147]
#define SWIGTYPE_p_std__vectorT_Csock_p_t swig_types[148]
#define SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t swig_types[149]
#define SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t swig_types[150]
#define SWIGTYPE_p_time_t swig_types[151]
#define SWIGTYPE_p_timeval swig_types[152]
#define SWIGTYPE_p_uid_t swig_types[153]
#define SWIGTYPE_p_uint16_t swig_types[154]
#define SWIGTYPE_p_uint32_t swig_types[155]
#define SWIGTYPE_p_uint64_t swig_types[156]
#define SWIGTYPE_p_unsigned_int swig_types[157]
#define SWIGTYPE_p_unsigned_short swig_types[158]
#define SWIGTYPE_p_value_type swig_types[159]
#define SWIGTYPE_p_void swig_types[160]
static swig_type_info *swig_types[162];
static swig_module_info swig_module = {swig_types, 161, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    boot_ZNC

#define SWIG_name   "ZNCc::boot_ZNC"
#define SWIG_prefix "ZNCc::"

#define SWIGVERSION 0x030000 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#ifdef __cplusplus
extern "C"
#endif
#ifndef PERL_OBJECT
#ifndef MULTIPLICITY
SWIGEXPORT void SWIG_init (CV* cv);
#else
SWIGEXPORT void SWIG_init (pTHXo_ CV* cv);
#endif
#else
SWIGEXPORT void SWIG_init (CV *cv, CPerlObj *);
#endif


#ifdef Copy
# undef Copy
#endif
#ifdef Pause
# undef Pause
#endif
#ifdef seed
# undef seed
#endif
#include <utility>
#include "../include/znc/Utils.h"
#include "../include/znc/Config.h"
#include "../include/znc/Socket.h"
#include "../include/znc/Modules.h"
#include "../include/znc/Nick.h"
#include "../include/znc/Chan.h"
#include "../include/znc/User.h"
#include "../include/znc/IRCNetwork.h"
#include "../include/znc/Client.h"
#include "../include/znc/IRCSock.h"
#include "../include/znc/Listener.h"
#include "../include/znc/HTTPSock.h"
#include "../include/znc/Template.h"
#include "../include/znc/WebModules.h"
#include "../include/znc/znc.h"
#include "../include/znc/Server.h"
#include "../include/znc/ZNCString.h"
#include "../include/znc/FileUtils.h"
#include "../include/znc/ZNCDebug.h"
#include "../include/znc/ExecSock.h"
#include "../include/znc/Buffer.h"
#include "modperl/module.h"
#define stat struct stat


#include <stdexcept>


#include <string>


double SwigSvToNumber(SV* sv) {
    return SvIOK(sv) ? double(SvIVX(sv)) : SvNVX(sv);
}
std::string SwigSvToString(SV* sv) {
    STRLEN len;
    char *ptr = SvPV(sv, len);
    return std::string(ptr, len);
}
void SwigSvFromString(SV* sv, const std::string& s) {
    sv_setpvn(sv,s.data(),s.size());
}


#include <vector>


#include <algorithm>


#include <map>


#include <utility>


#include <list>


#include <deque>
#include <stdexcept>


#include <string>


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_long  SWIG_PERL_DECL_ARGS_1(unsigned long value)
{
  SV *sv;
  if (value <= UV_MAX)
    sv = newSVuv(value);
  else
    sv = newSVpvf("%lu", value);
  return sv_2mortal(sv);
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_int  SWIG_PERL_DECL_ARGS_1(unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERNINLINE SV *
SWIG_From_bool  SWIG_PERL_DECL_ARGS_1(bool value)
{
  return boolSV(value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SV *obj, char** cptr, size_t* psize, int *alloc)
{
  if (SvMAGICAL(obj)) {
     SV *tmp = sv_newmortal();
     SvSetSV(tmp, obj);
     obj = tmp;
  }
  if (SvPOK(obj)) {
    STRLEN len = 0;
    char *cstr = SvPV(obj, len); 
    size_t size = len + 1;
    if (cptr)  {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy((new char[size]), cstr, sizeof(char)*(size)));
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      }
    }
    if (psize) *psize = size;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      char* vptr = 0; 
      if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = vptr;
	if (psize) *psize = vptr ? (strlen(vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string SWIG_PERL_DECL_ARGS_2(SV * obj, CString **val)
{
    char* buf = 0 ; size_t size = 0;
    int found = 0;
    if (SvMAGICAL(obj)) {
        SV *tmp = sv_newmortal();
        SvSetSV(tmp, obj);
        obj = tmp;
    }
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
        descriptor = SWIG_TypeQuery("CString" " *");
        init = 1;
    }
    if (descriptor) {
        CString *vptr;
        int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
        if (SWIG_IsOK(res)) {
            if (val) *val = vptr;
            return res;
        }
    }
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
        char* vptr = 0;
        if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_descriptor, 0) == SWIG_OK) {
            buf = vptr;
            size = vptr ? (strlen(vptr) + 1) : 0;
            found = 1;
        }
    }
    if (!found) {
        STRLEN len = 0;
        buf = SvPV(obj, len);
        size = len + 1;
        found = 1;
    }
    if (found) {
        if (buf) {
            if (val) *val = new CString(buf, size - 1);
            return SWIG_NEWOBJ;
        } else {
            if (val) *val = 0;
            return SWIG_OLDOBJ;
        }
    }
    return SWIG_ERROR;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double SWIG_PERL_DECL_ARGS_2(SV *obj, double *val)
{
  if (SvNIOK(obj)) {
    if (val) *val = SvNV(obj);
    return SWIG_OK;
  } else if (SvIOK(obj)) {
    if (val) *val = (double) SvIV(obj);
    return SWIG_AddCast(SWIG_OK);
  } else {
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      double v;
      errno = 0;
      v = strtod(nptr, &endptr);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
  }
  return SWIG_TypeError;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_PERL_DECL_ARGS_2(SV *obj, unsigned long *val) 
{
  if (SvUOK(obj)) {
    UV v = SvUV(obj);
    if (v <= ULONG_MAX) {
      if (val) *val = v;
      return SWIG_OK;
    }
    return SWIG_OverflowError;
  } else if (SvIOK(obj)) {
    IV v = SvIV(obj);
    if (v >= 0 && v <= ULONG_MAX) {
      if (val) *val = v;
      return SWIG_OK;
    }
    return SWIG_OverflowError;
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      unsigned long v;
      errno = 0;
      v = strtoul(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

SWIGINTERN CIRCNetwork *std_vector_Sl_CIRCNetwork_Sm__Sg__pop(std::vector< CIRCNetwork * > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                CIRCNetwork *x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERN int
SWIG_AsVal_long SWIG_PERL_DECL_ARGS_2(SV *obj, long* val)
{
  if (SvUOK(obj)) {
    UV v = SvUV(obj);
    if (v <= LONG_MAX) {
      if (val) *val = v;
      return SWIG_OK;
    }
    return SWIG_OverflowError;
  } else if (SvIOK(obj)) {
    IV v = SvIV(obj);
    if (v >= LONG_MIN && v <= LONG_MAX) {
      if(val) *val = v;
      return SWIG_OK;
    }
    return SWIG_OverflowError;
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      long v;
      errno = 0;
      v = strtol(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_PERL_DECL_ARGS_2(SV * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}

SWIGINTERN CIRCNetwork *std_vector_Sl_CIRCNetwork_Sm__Sg__get(std::vector< CIRCNetwork * > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_CIRCNetwork_Sm__Sg__set(std::vector< CIRCNetwork * > *self,int i,CIRCNetwork *x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN CChan *std_vector_Sl_CChan_Sm__Sg__pop(std::vector< CChan * > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                CChan *x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN CChan *std_vector_Sl_CChan_Sm__Sg__get(std::vector< CChan * > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_CChan_Sm__Sg__set(std::vector< CChan * > *self,int i,CChan *x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN CString std_vector_Sl_CString_Sg__pop(std::vector< CString > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                CString x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERNINLINE SV *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  SV *obj = sv_newmortal();
  if (carray) {
    sv_setpvn(obj, carray, size);
  } else {
    sv_setsv(obj, &PL_sv_undef);
  }
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_From_std_string  SWIG_PERL_DECL_ARGS_1(const CString& s)
{
  if (s.size()) {
	return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
	return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}

SWIGINTERN CString &std_vector_Sl_CString_Sg__get(std::vector< CString > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_CString_Sg__set(std::vector< CString > *self,int i,CString const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN CString const &std_map_Sl_CString_Sc_CString_Sg__get(std::map< CString,CString > *self,CString const &key){
                std::map<CString,CString >::iterator i = self->find(key);
                if (i != self->end())
                    return i->second;
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN void std_map_Sl_CString_Sc_CString_Sg__set(std::map< CString,CString > *self,CString const &key,CString const &x){
                (*self)[key] = x;
            }
SWIGINTERN void std_map_Sl_CString_Sc_CString_Sg__del(std::map< CString,CString > *self,CString const &key){
                std::map<CString,CString >::iterator i = self->find(key);
                if (i != self->end())
                    self->erase(i);
                else
                    throw std::out_of_range("key not found");
            }
SWIGINTERN bool std_map_Sl_CString_Sc_CString_Sg__has_key(std::map< CString,CString > *self,CString const &key){
                std::map<CString,CString >::iterator i = self->find(key);
                return i != self->end();
            }
SWIGINTERN CListener *std_vector_Sl_CListener_Sm__Sg__pop(std::vector< CListener * > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                CListener *x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN CListener *std_vector_Sl_CListener_Sm__Sg__get(std::vector< CListener * > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_CListener_Sm__Sg__set(std::vector< CListener * > *self,int i,CListener *x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::deque< CBufLine >::const_reference std_deque_Sl_CBufLine_Sg__getitem(std::deque< CBufLine > *self,int i){
                int size = int(self->size());
                if (i<0) i += size;
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("deque index out of range");
           }
SWIGINTERN void std_deque_Sl_CBufLine_Sg__setitem(std::deque< CBufLine > *self,int i,CBufLine const &x){
                int size = int(self->size());
                if (i<0) i+= size;
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("deque index out of range");
           }
SWIGINTERN void std_deque_Sl_CBufLine_Sg__delitem(std::deque< CBufLine > *self,int i){
                int size = int(self->size());
                if (i<0) i+= size;
                if (i>=0 && i<size) {
                    self->erase(self->begin()+i);
                } else {
                    throw std::out_of_range("deque index out of range");
                }
           }
SWIGINTERN std::deque< CBufLine > std_deque_Sl_CBufLine_Sg__getslice(std::deque< CBufLine > *self,int i,int j){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                std::deque<CBufLine > tmp(j-i);
                std::copy(self->begin()+i,self->begin()+j,tmp.begin());
                return tmp;
            }
SWIGINTERN void std_deque_Sl_CBufLine_Sg__setslice(std::deque< CBufLine > *self,int i,int j,std::deque< CBufLine > const &v){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                if (int(v.size()) == j-i) {
                    std::copy(v.begin(),v.end(),self->begin()+i);
                } else {
                    self->erase(self->begin()+i,self->begin()+j);
                    if (i+1 <= size)
                        self->insert(self->begin()+i+1,v.begin(),v.end());
                    else
                        self->insert(self->end(),v.begin(),v.end());
                }
            }
SWIGINTERN void std_deque_Sl_CBufLine_Sg__delslice(std::deque< CBufLine > *self,int i,int j){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                self->erase(self->begin()+i,self->begin()+j);
            }
SWIGINTERN std::vector< CString > std_vector_Sl_VCString_Sg__pop(std::vector< VCString > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                std::vector< CString > x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN std::vector< CString > &std_vector_Sl_VCString_Sg__get(std::vector< VCString > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_VCString_Sg__set(std::vector< VCString > *self,int i,std::vector< CString > const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }

SWIGINTERNINLINE SV * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_PERL_DECL_ARGS_2(SV *obj, bool* val)
{
  if (obj == &PL_sv_yes) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == &PL_sv_no) { 
    if (val) *val = false;
    return SWIG_OK;
  } else {
    if (val) *val = SvTRUE(obj) ? true : false;
    return SWIG_AddCast(SWIG_OK);    
  }
}


SWIGINTERNINLINE SV *
SWIG_From_long  SWIG_PERL_DECL_ARGS_1(long value)
{
  SV *sv;
  if (value >= IV_MIN && value <= IV_MAX)
    sv = newSViv(value);
  else
    sv = newSVpvf("%ld", value);
  return sv_2mortal(sv);
}


#include <stdio.h>
#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
# ifndef snprintf
#  define snprintf _snprintf
# endif
#endif


SWIGINTERNINLINE SV *
SWIG_From_long_SS_long  SWIG_PERL_DECL_ARGS_1(long long value)
{
  SV *sv;
  if (value >= IV_MIN && value <= IV_MAX)
    sv = newSViv((IV)(value));
  else {
    //sv = newSVpvf("%lld", value); doesn't work in non 64bit Perl
    char temp[256];
    sprintf(temp, "%lld", value);
    sv = newSVpv(temp, 0);
  }
  return sv_2mortal(sv);
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_DECL_ARGS_1(unsigned long long value)
{
  SV *sv;
  if (value <= UV_MAX)
    sv = newSVuv((UV)(value));
  else {
    //sv = newSVpvf("%llu", value); doesn't work in non 64bit Perl
    char temp[256];
    sprintf(temp, "%llu", value);
    sv = newSVpv(temp, 0);
  }
  return sv_2mortal(sv);
}


SWIGINTERNINLINE SV *
SWIG_From_int  SWIG_PERL_DECL_ARGS_1(int value)
{    
  return SWIG_From_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERNINLINE SV *
SWIG_From_size_t  SWIG_PERL_DECL_ARGS_1(size_t value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(value));
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t SWIG_PERL_DECL_ARGS_2(SV * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}





SWIGINTERN int
SWIG_AsVal_short SWIG_PERL_DECL_ARGS_2(SV * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float SWIG_PERL_DECL_ARGS_2(SV * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_double  SWIG_PERL_DECL_ARGS_1(double value)
{
  return sv_2mortal(newSVnv(value));
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_short  SWIG_PERL_DECL_ARGS_1(unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsCharArray(SV * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char SWIG_PERL_DECL_ARGS_2(SV * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}

SWIGINTERN std::list< CString > CModule__GetNVKeys(CModule *self){
		std::list<CString> res;
		for (MCString::iterator i = self->BeginNV(); i != self->EndNV(); ++i) {
			res.push_back(i->first);
		}
		return res;
	}
SWIGINTERN bool CModule_ExistsNV(CModule *self,CString const &sName){
		return self->EndNV() != self->FindNV(sName);
	}
SWIGINTERN void CModules_push_back(CModules *self,CModule *p){
		self->push_back(p);
	}
SWIGINTERN bool CModules_removeModule(CModules *self,CModule *p){
		for (CModules::iterator i = self->begin(); self->end() != i; ++i) {
			if (*i == p) {
				self->erase(i);
				return true;
			}
		}
		return false;
	}

SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_char  SWIG_PERL_DECL_ARGS_1(unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERNINLINE SV *
SWIG_From_char  SWIG_PERL_DECL_ARGS_1(char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}

SWIGINTERN std::map< CString,CNick > CChan_GetNicks_(CChan *self){
		return self->GetNicks();
	}

#include <stdlib.h>
#ifdef _MSC_VER
# ifndef strtoull
#  define strtoull _strtoui64
# endif
# ifndef strtoll
#  define strtoll _strtoi64
# endif
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_DECL_ARGS_2(SV *obj, unsigned long long *val)
{
  if (SvUOK(obj)) {
    if (val) *val = SvUV(obj);
    return SWIG_OK;
  } else  if (SvIOK(obj)) {
    IV v = SvIV(obj);
    if (v >= 0 && v <= ULLONG_MAX) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      unsigned long long v;
      errno = 0;
      v = strtoull(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      const double mant_max = 1LL << DBL_MANT_DIG;
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
	if (val) *val = (unsigned long long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}

SWIGINTERN std::vector< CIRCNetwork * > CUser_GetNetworks_(CUser *self){
		return self->GetNetworks();
	}
SWIGINTERN std::vector< CChan * > CIRCNetwork_GetChans_(CIRCNetwork *self){
		return self->GetChans();
	}
SWIGINTERN void CTemplate_set(CTemplate *self,CString const &key,CString const &value){
		(*self)[key] = value;
	}

	class String : public CString {
		public:
			String() {}
			String(const CString& s)	: CString(s) {}
			String(double d, int prec=2): CString(d, prec) {}
			String(float f, int prec=2) : CString(f, prec) {}
			String(int i)			   : CString(i) {}
			String(unsigned int i)	  : CString(i) {}
			String(long int i)		  : CString(i) {}
			String(unsigned long int i) : CString(i) {}
			String(char c)			  : CString(c) {}
			String(unsigned char c)	 : CString(c) {}
			String(short int i)		 : CString(i) {}
			String(unsigned short int i): CString(i) {}
			String(bool b)			  : CString(b) {}
			CString GetPerlStr() {
				return *this;
			}
	};

SWIGINTERN std::pair< CString,CString > std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__pop(std::vector< std::pair< CString,CString > > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                std::pair< CString,CString > x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN std::pair< CString,CString > &std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__get(std::vector< std::pair< CString,CString > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__set(std::vector< std::pair< CString,CString > > *self,int i,std::pair< CString,CString > const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN CSmartPtr< CWebSubPage > std_vector_Sl_TWebSubPage_Sg__pop(std::vector< TWebSubPage > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                CSmartPtr< CWebSubPage > x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN CSmartPtr< CWebSubPage > &std_vector_Sl_TWebSubPage_Sg__get(std::vector< TWebSubPage > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_TWebSubPage_Sg__set(std::vector< TWebSubPage > *self,int i,CSmartPtr< CWebSubPage > const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }

	void _VPair_Add2Str(VPair* self, const CString& a, const CString& b) {
		self->push_back(std::make_pair(a, b));
	}


	TWebSubPage _CreateWebSubPage(const CString& sName, const CString& sTitle, const VPair& vParams, unsigned int uFlags) {
		return new CWebSubPage(sName, sTitle, vParams, uFlags);
	}


	void _CleanupStash(const CString& sModname) {
		hv_clear(gv_stashpv(sModname.c_str(), 0));
	}

#ifdef __cplusplus
extern "C" {
#endif

#ifdef PERL_OBJECT
#define MAGIC_CLASS _wrap_ZNC_var::
class _wrap_ZNC_var : public CPerlObj {
public:
#else
#define MAGIC_CLASS
#endif
SWIGCLASS_STATIC int swig_magic_readonly(pTHX_ SV *SWIGUNUSEDPARM(sv), MAGIC *SWIGUNUSEDPARM(mg)) {
    MAGIC_PPERL
    croak("Value is read-only.");
    return 0;
}
SWIGCLASS_STATIC int _wrap_g_HexDigits_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_FromCharPtr(g_HexDigits))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CS_BLOCKSIZE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&CS_BLOCKSIZE));
  return 1;
}




#ifdef PERL_OBJECT
};
#endif

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C" {
#endif
XS(_wrap_new_CString) {
  {
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CString();");
    }
    result = (CString *)new CString();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CString) {
  {
    CString *arg1 = (CString *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CString, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CString" "', argument " "1"" of type '" "CString *""'"); 
    }
    arg1 = reinterpret_cast< CString * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new__stringlist__SWIG_0) {
  {
    int argvi = 0;
    std::list< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new__stringlist();");
    }
    result = (std::list< CString > *)new std::list< CString >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new__stringlist__SWIG_1) {
  {
    std::list< CString > *arg1 = 0 ;
    std::list< CString > temp1 ;
    std::list< CString > *v1 ;
    int argvi = 0;
    std::list< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new__stringlist(std::list< CString > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__listT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new__stringlist. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new__stringlist. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new__stringlist. "
          "Expected an array of " "CString");
      }
    }
    result = (std::list< CString > *)new std::list< CString >((std::list< CString > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new__stringlist) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped list? */
            std::list<CString >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__listT_CString_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  CString* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_CString,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new__stringlist__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new__stringlist__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new__stringlist'");
  XSRETURN(0);
}


XS(_wrap__stringlist_size) {
  {
    std::list< CString > *arg1 = (std::list< CString > *) 0 ;
    std::list< CString > temp1 ;
    std::list< CString > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: _stringlist_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__listT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of _stringlist_size. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "_stringlist_size. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of _stringlist_size. "
          "Expected an array of " "CString");
      }
    }
    result = (unsigned int)((std::list< CString > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap__stringlist_empty) {
  {
    std::list< CString > *arg1 = (std::list< CString > *) 0 ;
    std::list< CString > temp1 ;
    std::list< CString > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: _stringlist_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__listT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of _stringlist_empty. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "_stringlist_empty. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of _stringlist_empty. "
          "Expected an array of " "CString");
      }
    }
    result = (bool)((std::list< CString > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap__stringlist_clear) {
  {
    std::list< CString > *arg1 = (std::list< CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: _stringlist_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__listT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_clear" "', argument " "1"" of type '" "std::list< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::list< CString > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap__stringlist_push) {
  {
    std::list< CString > *arg1 = (std::list< CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: _stringlist_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__listT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_stringlist_push" "', argument " "1"" of type '" "std::list< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::list< CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_stringlist_push" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_stringlist_push" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->push_back((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_delete__stringlist) {
  {
    std::list< CString > *arg1 = (std::list< CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete__stringlist(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__listT_CString_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete__stringlist" "', argument " "1"" of type '" "std::list< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::list< CString > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VIRCNetworks__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VIRCNetworks(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VIRCNetworks__SWIG_1) {
  {
    int argvi = 0;
    std::vector< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VIRCNetworks();");
    }
    result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VIRCNetworks__SWIG_2) {
  {
    unsigned int arg1 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    std::vector< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VIRCNetworks(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VIRCNetworks" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VIRCNetworks" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VIRCNetworks__SWIG_3) {
  {
    std::vector< CIRCNetwork * > *arg1 = 0 ;
    std::vector< CIRCNetwork * > temp1 ;
    std::vector< CIRCNetwork * > *v1 ;
    int argvi = 0;
    std::vector< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VIRCNetworks(std::vector< CIRCNetwork * > const &);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VIRCNetworks. "
          "Expected an array of " "CIRCNetwork");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CIRCNetwork,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CIRCNetwork * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VIRCNetworks. "
              "Expected an array of " "CIRCNetwork");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VIRCNetworks. "
          "Expected an array of " "CIRCNetwork");
      }
    }
    result = (std::vector< CIRCNetwork * > *)new std::vector< CIRCNetwork * >((std::vector< CIRCNetwork * > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VIRCNetworks) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CIRCNetwork *> *v;
            int res = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&v), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t,0);
            if (SWIG_IsOK(res)) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  void *v;
                  SV **tv = av_fetch(av, 0, 0);
                  int res = SWIG_ConvertPtr(*tv, &v, SWIGTYPE_p_CIRCNetwork,0);
                  if (SWIG_IsOK(res))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VIRCNetworks__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VIRCNetworks__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VIRCNetworks__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VIRCNetworks__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VIRCNetworks'");
  XSRETURN(0);
}


XS(_wrap_VIRCNetworks_size) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    std::vector< CIRCNetwork * > temp1 ;
    std::vector< CIRCNetwork * > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VIRCNetworks_size(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VIRCNetworks_size. "
          "Expected an array of " "CIRCNetwork");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CIRCNetwork,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CIRCNetwork * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VIRCNetworks_size. "
              "Expected an array of " "CIRCNetwork");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VIRCNetworks_size. "
          "Expected an array of " "CIRCNetwork");
      }
    }
    result = (unsigned int)((std::vector< CIRCNetwork * > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_empty) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    std::vector< CIRCNetwork * > temp1 ;
    std::vector< CIRCNetwork * > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VIRCNetworks_empty(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VIRCNetworks_empty. "
          "Expected an array of " "CIRCNetwork");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CIRCNetwork,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CIRCNetwork * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VIRCNetworks_empty. "
              "Expected an array of " "CIRCNetwork");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VIRCNetworks_empty. "
          "Expected an array of " "CIRCNetwork");
      }
    }
    result = (bool)((std::vector< CIRCNetwork * > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_clear) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VIRCNetworks_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_clear" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_push) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VIRCNetworks_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_push" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VIRCNetworks_push" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->push_back(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_pop) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VIRCNetworks_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_pop" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    try {
      result = (CIRCNetwork *)std_vector_Sl_CIRCNetwork_Sm__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_get) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VIRCNetworks_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_get" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (CIRCNetwork *)std_vector_Sl_CIRCNetwork_Sm__Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VIRCNetworks_set) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    int arg2 ;
    CIRCNetwork *arg3 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VIRCNetworks_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VIRCNetworks_set" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VIRCNetworks_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VIRCNetworks_set" "', argument " "3"" of type '" "CIRCNetwork *""'"); 
    }
    arg3 = reinterpret_cast< CIRCNetwork * >(argp3);
    try {
      std_vector_Sl_CIRCNetwork_Sm__Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VIRCNetworks) {
  {
    std::vector< CIRCNetwork * > *arg1 = (std::vector< CIRCNetwork * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VIRCNetworks(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VIRCNetworks" "', argument " "1"" of type '" "std::vector< CIRCNetwork * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CIRCNetwork * > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VChannels__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< CChan * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VChannels(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VChannels" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< CChan * > *)new std::vector< CChan * >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VChannels__SWIG_1) {
  {
    int argvi = 0;
    std::vector< CChan * > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VChannels();");
    }
    result = (std::vector< CChan * > *)new std::vector< CChan * >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VChannels__SWIG_2) {
  {
    unsigned int arg1 ;
    CChan *arg2 = (CChan *) 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    std::vector< CChan * > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VChannels(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VChannels" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VChannels" "', argument " "2"" of type '" "CChan *""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    result = (std::vector< CChan * > *)new std::vector< CChan * >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VChannels__SWIG_3) {
  {
    std::vector< CChan * > *arg1 = 0 ;
    std::vector< CChan * > temp1 ;
    std::vector< CChan * > *v1 ;
    int argvi = 0;
    std::vector< CChan * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VChannels(std::vector< CChan * > const &);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VChannels. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CChan * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VChannels. "
              "Expected an array of " "CChan");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VChannels. "
          "Expected an array of " "CChan");
      }
    }
    result = (std::vector< CChan * > *)new std::vector< CChan * >((std::vector< CChan * > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VChannels) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CChan *> *v;
            int res = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&v), SWIGTYPE_p_std__vectorT_CChan_p_t,0);
            if (SWIG_IsOK(res)) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  void *v;
                  SV **tv = av_fetch(av, 0, 0);
                  int res = SWIG_ConvertPtr(*tv, &v, SWIGTYPE_p_CChan,0);
                  if (SWIG_IsOK(res))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VChannels__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VChannels__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VChannels__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VChannels__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VChannels'");
  XSRETURN(0);
}


XS(_wrap_VChannels_size) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    std::vector< CChan * > temp1 ;
    std::vector< CChan * > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VChannels_size(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VChannels_size. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CChan * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VChannels_size. "
              "Expected an array of " "CChan");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VChannels_size. "
          "Expected an array of " "CChan");
      }
    }
    result = (unsigned int)((std::vector< CChan * > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_empty) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    std::vector< CChan * > temp1 ;
    std::vector< CChan * > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VChannels_empty(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VChannels_empty. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CChan * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VChannels_empty. "
              "Expected an array of " "CChan");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VChannels_empty. "
          "Expected an array of " "CChan");
      }
    }
    result = (bool)((std::vector< CChan * > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_clear) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VChannels_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_clear" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_push) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    CChan *arg2 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VChannels_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_push" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VChannels_push" "', argument " "2"" of type '" "CChan *""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    (arg1)->push_back(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_pop) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CChan *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VChannels_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_pop" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    try {
      result = (CChan *)std_vector_Sl_CChan_Sm__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_get) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CChan *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VChannels_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_get" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (CChan *)std_vector_Sl_CChan_Sm__Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VChannels_set) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    int arg2 ;
    CChan *arg3 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VChannels_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VChannels_set" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VChannels_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VChannels_set" "', argument " "3"" of type '" "CChan *""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    try {
      std_vector_Sl_CChan_Sm__Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VChannels) {
  {
    std::vector< CChan * > *arg1 = (std::vector< CChan * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VChannels(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CChan_p_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VChannels" "', argument " "1"" of type '" "std::vector< CChan * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CChan * > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VCString__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VCString(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VCString" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< CString > *)new std::vector< CString >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VCString__SWIG_1) {
  {
    int argvi = 0;
    std::vector< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VCString();");
    }
    result = (std::vector< CString > *)new std::vector< CString >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VCString__SWIG_2) {
  {
    unsigned int arg1 ;
    CString *arg2 = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::vector< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VCString(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VCString" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VCString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VCString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (std::vector< CString > *)new std::vector< CString >(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_VCString__SWIG_3) {
  {
    std::vector< CString > *arg1 = 0 ;
    std::vector< CString > temp1 ;
    std::vector< CString > *v1 ;
    int argvi = 0;
    std::vector< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VCString(std::vector< CString > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VCString. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VCString. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VCString. "
          "Expected an array of " "CString");
      }
    }
    result = (std::vector< CString > *)new std::vector< CString >((std::vector< CString > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VCString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CString >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_CString_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  CString* obj;
                  SV **tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_CString,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VCString__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VCString__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VCString__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VCString__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VCString'");
  XSRETURN(0);
}


XS(_wrap_VCString_size) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    std::vector< CString > temp1 ;
    std::vector< CString > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VCString_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VCString_size. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VCString_size. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VCString_size. "
          "Expected an array of " "CString");
      }
    }
    result = (unsigned int)((std::vector< CString > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_empty) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    std::vector< CString > temp1 ;
    std::vector< CString > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VCString_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VCString_empty. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VCString_empty. "
              "Expected an array of " "CString");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VCString_empty. "
          "Expected an array of " "CString");
      }
    }
    result = (bool)((std::vector< CString > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_clear) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VCString_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VCString_clear" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_push) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VCString_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VCString_push" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VCString_push" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VCString_push" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->push_back((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_pop) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VCString_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VCString_pop" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    try {
      result = std_vector_Sl_CString_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_get) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VCString_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VCString_get" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VCString_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (CString *) &std_vector_Sl_CString_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VCString_set) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VCString_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VCString_set" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VCString_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VCString_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VCString_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      std_vector_Sl_CString_Sg__set(arg1,arg2,(CString const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VCString) {
  {
    std::vector< CString > *arg1 = (std::vector< CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VCString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CString_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VCString" "', argument " "1"" of type '" "std::vector< CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CString > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_PerlMCString__SWIG_0) {
  {
    int argvi = 0;
    std::map< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_PerlMCString();");
    }
    result = (std::map< CString,CString > *)new std::map< CString,CString >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_PerlMCString__SWIG_1) {
  {
    std::map< CString,CString > *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_PerlMCString(std::map< CString,CString > const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_CString_CString_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PerlMCString" "', argument " "1"" of type '" "std::map< CString,CString > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PerlMCString" "', argument " "1"" of type '" "std::map< CString,CString > const &""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    result = (std::map< CString,CString > *)new std::map< CString,CString >((std::map< CString,CString > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_PerlMCString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_CString_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_PerlMCString__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_PerlMCString__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_PerlMCString'");
  XSRETURN(0);
}


XS(_wrap_PerlMCString_size) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: PerlMCString_size(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_size" "', argument " "1"" of type '" "std::map< CString,CString > const *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    result = (unsigned int)((std::map< CString,CString > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_empty) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: PerlMCString_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_empty" "', argument " "1"" of type '" "std::map< CString,CString > const *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    result = (bool)((std::map< CString,CString > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_clear) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: PerlMCString_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_clear" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_get) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: PerlMCString_get(self,key);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_get" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PerlMCString_get" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PerlMCString_get" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (CString *) &std_map_Sl_CString_Sc_CString_Sg__get(arg1,(CString const &)*arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_set) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: PerlMCString_set(self,key,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_set" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PerlMCString_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PerlMCString_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PerlMCString_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PerlMCString_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    std_map_Sl_CString_Sc_CString_Sg__set(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_del) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: PerlMCString_del(self,key);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_del" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PerlMCString_del" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PerlMCString_del" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      std_map_Sl_CString_Sc_CString_Sg__del(arg1,(CString const &)*arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_PerlMCString_has_key) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: PerlMCString_has_key(self,key);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PerlMCString_has_key" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PerlMCString_has_key" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PerlMCString_has_key" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)std_map_Sl_CString_Sc_CString_Sg__has_key(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_PerlMCString) {
  {
    std::map< CString,CString > *arg1 = (std::map< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_PerlMCString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__mapT_CString_CString_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PerlMCString" "', argument " "1"" of type '" "std::map< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::map< CString,CString > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_MCString) {
  {
    int argvi = 0;
    MCString *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_MCString();");
    }
    result = (MCString *)new MCString();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_MCString) {
  {
    MCString *arg1 = (MCString *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_MCString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_MCString, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MCString" "', argument " "1"" of type '" "MCString *""'"); 
    }
    arg1 = reinterpret_cast< MCString * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VListeners__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< CListener * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VListeners(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VListeners" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< CListener * > *)new std::vector< CListener * >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CListener_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VListeners__SWIG_1) {
  {
    int argvi = 0;
    std::vector< CListener * > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VListeners();");
    }
    result = (std::vector< CListener * > *)new std::vector< CListener * >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CListener_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VListeners__SWIG_2) {
  {
    unsigned int arg1 ;
    CListener *arg2 = (CListener *) 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    std::vector< CListener * > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VListeners(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VListeners" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VListeners" "', argument " "2"" of type '" "CListener *""'"); 
    }
    arg2 = reinterpret_cast< CListener * >(argp2);
    result = (std::vector< CListener * > *)new std::vector< CListener * >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CListener_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VListeners__SWIG_3) {
  {
    std::vector< CListener * > *arg1 = 0 ;
    std::vector< CListener * > temp1 ;
    std::vector< CListener * > *v1 ;
    int argvi = 0;
    std::vector< CListener * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VListeners(std::vector< CListener * > const &);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CListener_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VListeners. "
          "Expected an array of " "CListener");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CListener,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CListener * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VListeners. "
              "Expected an array of " "CListener");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VListeners. "
          "Expected an array of " "CListener");
      }
    }
    result = (std::vector< CListener * > *)new std::vector< CListener * >((std::vector< CListener * > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CListener_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VListeners) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CListener *> *v;
            int res = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&v), SWIGTYPE_p_std__vectorT_CListener_p_t,0);
            if (SWIG_IsOK(res)) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  void *v;
                  SV **tv = av_fetch(av, 0, 0);
                  int res = SWIG_ConvertPtr(*tv, &v, SWIGTYPE_p_CListener,0);
                  if (SWIG_IsOK(res))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CListener, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VListeners__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VListeners__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VListeners__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VListeners__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VListeners'");
  XSRETURN(0);
}


XS(_wrap_VListeners_size) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    std::vector< CListener * > temp1 ;
    std::vector< CListener * > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VListeners_size(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CListener_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VListeners_size. "
          "Expected an array of " "CListener");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CListener,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CListener * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VListeners_size. "
              "Expected an array of " "CListener");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VListeners_size. "
          "Expected an array of " "CListener");
      }
    }
    result = (unsigned int)((std::vector< CListener * > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_empty) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    std::vector< CListener * > temp1 ;
    std::vector< CListener * > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VListeners_empty(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorT_CListener_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VListeners_empty. "
          "Expected an array of " "CListener");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_CListener,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< CListener * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VListeners_empty. "
              "Expected an array of " "CListener");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VListeners_empty. "
          "Expected an array of " "CListener");
      }
    }
    result = (bool)((std::vector< CListener * > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_clear) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VListeners_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VListeners_clear" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_push) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    CListener *arg2 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VListeners_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VListeners_push" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VListeners_push" "', argument " "2"" of type '" "CListener *""'"); 
    }
    arg2 = reinterpret_cast< CListener * >(argp2);
    (arg1)->push_back(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_pop) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CListener *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VListeners_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VListeners_pop" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    try {
      result = (CListener *)std_vector_Sl_CListener_Sm__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_get) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CListener *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VListeners_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VListeners_get" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VListeners_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (CListener *)std_vector_Sl_CListener_Sm__Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VListeners_set) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    int arg2 ;
    CListener *arg3 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VListeners_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VListeners_set" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VListeners_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VListeners_set" "', argument " "3"" of type '" "CListener *""'"); 
    }
    arg3 = reinterpret_cast< CListener * >(argp3);
    try {
      std_vector_Sl_CListener_Sm__Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VListeners) {
  {
    std::vector< CListener * > *arg1 = (std::vector< CListener * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VListeners(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CListener_p_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VListeners" "', argument " "1"" of type '" "std::vector< CListener * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< CListener * > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_empty) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_empty" "', argument " "1"" of type '" "std::deque< CBufLine > const *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (bool)((std::deque< CBufLine > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BufLines__SWIG_0) {
  {
    int argvi = 0;
    std::deque< CBufLine > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_BufLines();");
    }
    result = (std::deque< CBufLine > *)new std::deque< CBufLine >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_BufLines__SWIG_1) {
  {
    unsigned int arg1 ;
    CBufLine *arg2 = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::deque< CBufLine > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_BufLines(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BufLines" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CBufLine,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BufLines" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BufLines" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    arg2 = reinterpret_cast< CBufLine * >(argp2);
    result = (std::deque< CBufLine > *)new std::deque< CBufLine >(arg1,(CBufLine const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BufLines__SWIG_2) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::deque< CBufLine > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_BufLines(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BufLines" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::deque< CBufLine > *)new std::deque< CBufLine >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BufLines__SWIG_3) {
  {
    std::deque< CBufLine > *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::deque< CBufLine > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_BufLines(std::deque< CBufLine > const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__dequeT_CBufLine_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BufLines" "', argument " "1"" of type '" "std::deque< CBufLine > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BufLines" "', argument " "1"" of type '" "std::deque< CBufLine > const &""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (std::deque< CBufLine > *)new std::deque< CBufLine >((std::deque< CBufLine > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BufLines) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__dequeT_CBufLine_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CBufLine, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_BufLines__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_BufLines__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_BufLines__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_BufLines__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BufLines'");
  XSRETURN(0);
}


XS(_wrap_delete_BufLines) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_BufLines(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BufLines" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_assign) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    unsigned int arg2 ;
    CBufLine *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: BufLines_assign(self,n,value);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_assign" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_assign" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CBufLine,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BufLines_assign" "', argument " "3"" of type '" "CBufLine const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_assign" "', argument " "3"" of type '" "CBufLine const &""'"); 
    }
    arg3 = reinterpret_cast< CBufLine * >(argp3);
    (arg1)->assign(arg2,(CBufLine const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_swap) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    std::deque< CBufLine > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_swap(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_swap" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__dequeT_CBufLine_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufLines_swap" "', argument " "2"" of type '" "std::deque< CBufLine > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_swap" "', argument " "2"" of type '" "std::deque< CBufLine > &""'"); 
    }
    arg2 = reinterpret_cast< std::deque< CBufLine > * >(argp2);
    (arg1)->swap(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_size) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_size(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_size" "', argument " "1"" of type '" "std::deque< CBufLine > const *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (unsigned int)((std::deque< CBufLine > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_max_size) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_max_size(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_max_size" "', argument " "1"" of type '" "std::deque< CBufLine > const *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (unsigned int)((std::deque< CBufLine > const *)arg1)->max_size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_resize__SWIG_0) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    unsigned int arg2 ;
    CBufLine arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: BufLines_resize(self,n,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_resize" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_resize" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CBufLine,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BufLines_resize" "', argument " "3"" of type '" "CBufLine""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_resize" "', argument " "3"" of type '" "CBufLine""'");
      } else {
        arg3 = *(reinterpret_cast< CBufLine * >(argp3));
      }
    }
    (arg1)->resize(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_resize__SWIG_1) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_resize(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_resize" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_resize" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->resize(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_resize) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__dequeT_CBufLine_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__dequeT_CBufLine_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CBufLine, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_BufLines_resize__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_BufLines_resize__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'BufLines_resize'");
  XSRETURN(0);
}


XS(_wrap_BufLines_front) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::deque< CBufLine >::value_type *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_front(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_front" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (std::deque< CBufLine >::value_type *) &(arg1)->front();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_back) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::deque< CBufLine >::value_type *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_back(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_back" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    result = (std::deque< CBufLine >::value_type *) &(arg1)->back();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_push_front) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    CBufLine *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_push_front(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_push_front" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CBufLine,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufLines_push_front" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_push_front" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    arg2 = reinterpret_cast< CBufLine * >(argp2);
    (arg1)->push_front((CBufLine const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_push_back) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    CBufLine *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_push_back(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_push_back" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CBufLine,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufLines_push_back" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_push_back" "', argument " "2"" of type '" "CBufLine const &""'"); 
    }
    arg2 = reinterpret_cast< CBufLine * >(argp2);
    (arg1)->push_back((CBufLine const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_pop_front) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_pop_front(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_pop_front" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    (arg1)->pop_front();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_pop_back) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_pop_back(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_pop_back" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    (arg1)->pop_back();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_clear) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: BufLines_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_clear" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_getitem) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::deque< CBufLine >::value_type *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_getitem(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_getitem" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_getitem" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (std::deque< CBufLine >::value_type *) &std_deque_Sl_CBufLine_Sg__getitem(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_setitem) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    CBufLine *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: BufLines_setitem(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_setitem" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_setitem" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CBufLine,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BufLines_setitem" "', argument " "3"" of type '" "CBufLine const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_setitem" "', argument " "3"" of type '" "CBufLine const &""'"); 
    }
    arg3 = reinterpret_cast< CBufLine * >(argp3);
    try {
      std_deque_Sl_CBufLine_Sg__setitem(arg1,arg2,(CBufLine const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_delitem) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: BufLines_delitem(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_delitem" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_delitem" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      std_deque_Sl_CBufLine_Sg__delitem(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_getslice) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::deque< CBufLine > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: BufLines_getslice(self,i,j);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_getslice" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_getslice" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BufLines_getslice" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = std_deque_Sl_CBufLine_Sg__getslice(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new std::deque< CBufLine >(static_cast< const std::deque< CBufLine >& >(result))), SWIGTYPE_p_std__dequeT_CBufLine_t, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_setslice) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    int arg3 ;
    std::deque< CBufLine > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: BufLines_setslice(self,i,j,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_setslice" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_setslice" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BufLines_setslice" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_std__dequeT_CBufLine_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BufLines_setslice" "', argument " "4"" of type '" "std::deque< CBufLine > const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufLines_setslice" "', argument " "4"" of type '" "std::deque< CBufLine > const &""'"); 
    }
    arg4 = reinterpret_cast< std::deque< CBufLine > * >(argp4);
    std_deque_Sl_CBufLine_Sg__setslice(arg1,arg2,arg3,(std::deque< CBufLine > const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_BufLines_delslice) {
  {
    std::deque< CBufLine > *arg1 = (std::deque< CBufLine > *) 0 ;
    int arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: BufLines_delslice(self,i,j);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__dequeT_CBufLine_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufLines_delslice" "', argument " "1"" of type '" "std::deque< CBufLine > *""'"); 
    }
    arg1 = reinterpret_cast< std::deque< CBufLine > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufLines_delslice" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BufLines_delslice" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    std_deque_Sl_CBufLine_Sg__delslice(arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VVString__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VVString(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VVString" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< VCString > *)new std::vector< VCString >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VVString__SWIG_1) {
  {
    int argvi = 0;
    std::vector< VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VVString();");
    }
    result = (std::vector< VCString > *)new std::vector< VCString >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VVString__SWIG_2) {
  {
    unsigned int arg1 ;
    std::vector< CString > *arg2 = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    std::vector< CString > temp2 ;
    std::vector< CString > *v2 ;
    int argvi = 0;
    std::vector< VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VVString(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VVString" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg2 = v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of new_VVString. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp2.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 2 of "
              "new_VVString. "
              "Expected an array of " "CString");
          }
        }
        arg2 = &temp2;
      } else {
        SWIG_croak("Type error in argument 2 of new_VVString. "
          "Expected an array of " "CString");
      }
    }
    result = (std::vector< VCString > *)new std::vector< VCString >(arg1,(std::vector< CString > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VVString__SWIG_3) {
  {
    std::vector< std::vector< CString > > *arg1 = 0 ;
    std::vector< std::vector< CString > > temp1 ;
    std::vector< std::vector< CString > > *v1 ;
    int argvi = 0;
    std::vector< VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VVString(std::vector< std::vector< CString > > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VVString. "
          "Expected an array of " "std::vector< CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector< CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorT_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VVString. "
              "Expected an array of " "std::vector< CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VVString. "
          "Expected an array of " "std::vector< CString >");
      }
    }
    result = (std::vector< VCString > *)new std::vector< VCString >((std::vector< std::vector< CString > > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VVString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<std::vector< CString > >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  std::vector< CString >* obj;
                  SV **tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_std__vectorT_CString_t,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CString >* v;
            if (SWIG_ConvertPtr(ST(1),(void **) &v, 
                SWIGTYPE_p_std__vectorT_CString_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(1))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(1));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  CString* obj;
                  SV **tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_CString,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VVString__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VVString__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VVString__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VVString__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VVString'");
  XSRETURN(0);
}


XS(_wrap_VVString_size) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    std::vector< std::vector< CString > > temp1 ;
    std::vector< std::vector< CString > > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VVString_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VVString_size. "
          "Expected an array of " "std::vector< CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector< CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorT_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VVString_size. "
              "Expected an array of " "std::vector< CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VVString_size. "
          "Expected an array of " "std::vector< CString >");
      }
    }
    result = (unsigned int)((std::vector< VCString > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_empty) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    std::vector< std::vector< CString > > temp1 ;
    std::vector< std::vector< CString > > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VVString_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VVString_empty. "
          "Expected an array of " "std::vector< CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector< CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorT_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VVString_empty. "
              "Expected an array of " "std::vector< CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VVString_empty. "
          "Expected an array of " "std::vector< CString >");
      }
    }
    result = (bool)((std::vector< VCString > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_clear) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VVString_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VVString_clear" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_push) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    std::vector< CString > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    std::vector< CString > temp2 ;
    std::vector< CString > *v2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VVString_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VVString_push" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg2 = v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of VVString_push. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp2.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 2 of "
              "VVString_push. "
              "Expected an array of " "CString");
          }
        }
        arg2 = &temp2;
      } else {
        SWIG_croak("Type error in argument 2 of VVString_push. "
          "Expected an array of " "CString");
      }
    }
    (arg1)->push_back((std::vector< CString > const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_pop) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CString > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VVString_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VVString_pop" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    try {
      result = std_vector_Sl_VCString_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        CString* ptr = new CString(result[i]);
        svs[i] = sv_newmortal();
        SWIG_MakePtr(svs[i], (void*) ptr, 
          SWIGTYPE_p_CString, SWIG_SHADOW|0);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_get) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::vector< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VVString_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VVString_get" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VVString_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (std::vector< CString > *) &std_vector_Sl_VCString_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VVString_set) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    int arg2 ;
    std::vector< CString > *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    std::vector< CString > temp3 ;
    std::vector< CString > *v3 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VVString_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VVString_set" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VVString_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      if (SWIG_ConvertPtr(ST(2),(void **) &v3, 
          SWIGTYPE_p_std__vectorT_CString_t,1) != -1) {
        arg3 = v3;
      } else if (SvROK(ST(2))) {
        AV *av = (AV *)SvRV(ST(2));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 3 of VVString_set. "
          "Expected an array of " "CString");
        SV **tv;
        I32 len = av_len(av) + 1;
        CString* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CString,0) != -1) {
            temp3.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 3 of "
              "VVString_set. "
              "Expected an array of " "CString");
          }
        }
        arg3 = &temp3;
      } else {
        SWIG_croak("Type error in argument 3 of VVString_set. "
          "Expected an array of " "CString");
      }
    }
    try {
      std_vector_Sl_VCString_Sg__set(arg1,arg2,(std::vector< CString > const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VVString) {
  {
    std::vector< VCString > *arg1 = (std::vector< VCString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VVString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VVString" "', argument " "1"" of type '" "std::vector< VCString > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< VCString > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_SetFdCloseOnExec) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: SetFdCloseOnExec(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SetFdCloseOnExec" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    SetFdCloseOnExec(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CUtils) {
  {
    int argvi = 0;
    CUtils *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CUtils();");
    }
    result = (CUtils *)new CUtils();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUtils, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CUtils) {
  {
    CUtils *arg1 = (CUtils *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CUtils(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUtils, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CUtils" "', argument " "1"" of type '" "CUtils *""'"); 
    }
    arg1 = reinterpret_cast< CUtils * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetIP) {
  {
    unsigned long arg1 ;
    unsigned long val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_GetIP(addr);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_GetIP" "', argument " "1"" of type '" "unsigned long""'");
    } 
    arg1 = static_cast< unsigned long >(val1);
    result = CUtils::GetIP(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetLongIP) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_GetLongIP(sIP);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetLongIP" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetLongIP" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (unsigned long)CUtils::GetLongIP((CString const &)*arg1);
    ST(argvi) = SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintError) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_PrintError(sMessage);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintError" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintError" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    CUtils::PrintError((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintMessage__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_PrintMessage(sMessage,bStrong);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUtils_PrintMessage" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    CUtils::PrintMessage((CString const &)*arg1,arg2);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintMessage__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_PrintMessage(sMessage);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintMessage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    CUtils::PrintMessage((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintMessage) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_PrintMessage__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_PrintMessage__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUtils_PrintMessage'");
  XSRETURN(0);
}


XS(_wrap_CUtils_PrintPrompt) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_PrintPrompt(sMessage);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintPrompt" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintPrompt" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    CUtils::PrintPrompt((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintAction) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_PrintAction(sMessage);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_PrintAction" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintAction" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    CUtils::PrintAction((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintStatus__SWIG_0) {
  {
    bool arg1 ;
    CString *arg2 = 0 ;
    bool val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_PrintStatus(bSuccess,sMessage);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_PrintStatus" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_PrintStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_PrintStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    CUtils::PrintStatus(arg1,(CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintStatus__SWIG_1) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_PrintStatus(bSuccess);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CUtils_PrintStatus" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    CUtils::PrintStatus(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_PrintStatus) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_PrintStatus__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_PrintStatus__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUtils_PrintStatus'");
  XSRETURN(0);
}


XS(_wrap_CUtils_GetSaltedHashPass) {
  {
    CString *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_GetSaltedHashPass(sSalt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetSaltedHashPass" "', argument " "1"" of type '" "CString &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetSaltedHashPass" "', argument " "1"" of type '" "CString &""'"); 
    }
    arg1 = reinterpret_cast< CString * >(argp1);
    result = CUtils::GetSaltedHashPass(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetSalt) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CUtils_GetSalt();");
    }
    result = CUtils::GetSalt();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_SaltedMD5Hash) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_SaltedMD5Hash(sPass,sSalt);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_SaltedMD5Hash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedMD5Hash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_SaltedMD5Hash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedMD5Hash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CUtils::SaltedMD5Hash((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_SaltedSHA256Hash) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_SaltedSHA256Hash(sPass,sSalt);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_SaltedSHA256Hash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedSHA256Hash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_SaltedSHA256Hash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_SaltedSHA256Hash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CUtils::SaltedSHA256Hash((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetPass) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_GetPass(sPrompt);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetPass" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetPass" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CUtils::GetPass((CString const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetInput__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUtils_GetInput(sPrompt,sRet,sDefault,sHint);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUtils_GetInput" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetInput__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUtils_GetInput(sPrompt,sRet,sDefault);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetInput__SWIG_2) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_GetInput(sPrompt,sRet);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetInput" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)CUtils::GetInput((CString const &)*arg1,*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetInput) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetInput__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetInput__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetInput__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUtils_GetInput'");
  XSRETURN(0);
}


XS(_wrap_CUtils_GetBoolInput__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_GetBoolInput(sPrompt,bDefault);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUtils_GetBoolInput" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CUtils::GetBoolInput((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetBoolInput__SWIG_1) {
  {
    CString *arg1 = 0 ;
    bool *arg2 = (bool *) 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_GetBoolInput(sPrompt,pbDefault);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_bool, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetBoolInput" "', argument " "2"" of type '" "bool *""'"); 
    }
    arg2 = reinterpret_cast< bool * >(argp2);
    result = (bool)CUtils::GetBoolInput((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetBoolInput__SWIG_2) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUtils_GetBoolInput(sPrompt);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetBoolInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CUtils::GetBoolInput((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetBoolInput) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetBoolInput__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetBoolInput__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetBoolInput__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUtils_GetBoolInput'");
  XSRETURN(0);
}


XS(_wrap_CUtils_GetNumInput__SWIG_0) {
  {
    CString *arg1 = 0 ;
    unsigned int *arg2 = 0 ;
    unsigned int arg3 ;
    unsigned int arg4 ;
    unsigned int arg5 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    unsigned int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CUtils_GetNumInput(sPrompt,uRet,uMin,uMax,uDefault);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    arg2 = reinterpret_cast< unsigned int * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUtils_GetNumInput" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    ecode5 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CUtils_GetNumInput" "', argument " "5"" of type '" "unsigned int""'");
    } 
    arg5 = static_cast< unsigned int >(val5);
    result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetNumInput__SWIG_1) {
  {
    CString *arg1 = 0 ;
    unsigned int *arg2 = 0 ;
    unsigned int arg3 ;
    unsigned int arg4 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUtils_GetNumInput(sPrompt,uRet,uMin,uMax);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    arg2 = reinterpret_cast< unsigned int * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUtils_GetNumInput" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetNumInput__SWIG_2) {
  {
    CString *arg1 = 0 ;
    unsigned int *arg2 = 0 ;
    unsigned int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUtils_GetNumInput(sPrompt,uRet,uMin);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    arg2 = reinterpret_cast< unsigned int * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUtils_GetNumInput" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetNumInput__SWIG_3) {
  {
    CString *arg1 = 0 ;
    unsigned int *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_GetNumInput(sPrompt,uRet);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_GetNumInput" "', argument " "2"" of type '" "unsigned int &""'"); 
    }
    arg2 = reinterpret_cast< unsigned int * >(argp2);
    result = (bool)CUtils::GetNumInput((CString const &)*arg1,*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetNumInput) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetNumInput__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetNumInput__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetNumInput__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUtils_GetNumInput__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUtils_GetNumInput'");
  XSRETURN(0);
}


XS(_wrap_CUtils_GetMillTime) {
  {
    int argvi = 0;
    unsigned long long result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CUtils_GetMillTime();");
    }
    result = (unsigned long long)CUtils::GetMillTime();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_CTime) {
  {
    time_t arg1 ;
    CString *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUtils_CTime(t,sTZ);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_CTime" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_CTime" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_CTime" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_CTime" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CUtils::CTime(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_FormatTime) {
  {
    time_t arg1 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUtils_FormatTime(t,sFormat,sTZ);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUtils_FormatTime" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUtils_FormatTime" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUtils_FormatTime" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUtils_FormatTime" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = CUtils::FormatTime(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUtils_GetTimezones) {
  {
    int argvi = 0;
    SCString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CUtils_GetTimezones();");
    }
    result = CUtils::GetTimezones();
    ST(argvi) = SWIG_NewPointerObj((new SCString(static_cast< const SCString& >(result))), SWIGTYPE_p_SCString, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CException) {
  {
    CException::EType arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CException *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CException(e);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CException" "', argument " "1"" of type '" "CException::EType""'");
    } 
    arg1 = static_cast< CException::EType >(val1);
    result = (CException *)new CException(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CException) {
  {
    CException *arg1 = (CException *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CException(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CException, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CException" "', argument " "1"" of type '" "CException *""'"); 
    }
    arg1 = reinterpret_cast< CException * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CException_GetType) {
  {
    CException *arg1 = (CException *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CException::EType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CException_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CException, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CException_GetType" "', argument " "1"" of type '" "CException const *""'"); 
    }
    arg1 = reinterpret_cast< CException * >(argp1);
    result = (CException::EType)((CException const *)arg1)->GetType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTable) {
  {
    int argvi = 0;
    CTable *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CTable();");
    }
    result = (CTable *)new CTable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CTable) {
  {
    CTable *arg1 = (CTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTable" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_AddColumn) {
  {
    CTable *arg1 = (CTable *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTable_AddColumn(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_AddColumn" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_AddColumn" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_AddColumn" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->AddColumn((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_AddRow) {
  {
    CTable *arg1 = (CTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< std::vector< CString > >::size_type result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTable_AddRow(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_AddRow" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    result = (arg1)->AddRow();
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_SetCell__SWIG_0) {
  {
    CTable *arg1 = (CTable *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< std::vector< CString > >::size_type arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    size_t val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CTable_SetCell(self,sColumn,sValue,uRowIdx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_SetCell" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CTable_SetCell" "', argument " "4"" of type '" "std::vector< std::vector< CString > >::size_type""'");
    } 
    arg4 = static_cast< std::vector< std::vector< CString > >::size_type >(val4);
    result = (bool)(arg1)->SetCell((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_SetCell__SWIG_1) {
  {
    CTable *arg1 = (CTable *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTable_SetCell(self,sColumn,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_SetCell" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_SetCell" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->SetCell((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_SetCell) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTable_SetCell__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTable_SetCell__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTable_SetCell'");
  XSRETURN(0);
}


XS(_wrap_CTable_GetLine) {
  {
    CTable *arg1 = (CTable *) 0 ;
    unsigned int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTable_GetLine(self,uIdx,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_GetLine" "', argument " "1"" of type '" "CTable const *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTable_GetLine" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTable_GetLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTable_GetLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)((CTable const *)arg1)->GetLine(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_GetColumnWidth) {
  {
    CTable *arg1 = (CTable *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString::size_type result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTable_GetColumnWidth(self,uIdx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_GetColumnWidth" "', argument " "1"" of type '" "CTable const *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTable_GetColumnWidth" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = ((CTable const *)arg1)->GetColumnWidth(arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTable_Clear) {
  {
    CTable *arg1 = (CTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTable_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTable_Clear" "', argument " "1"" of type '" "CTable *""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    (arg1)->Clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CConfigEntry__SWIG_0) {
  {
    int argvi = 0;
    CConfigEntry *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CConfigEntry();");
    }
    result = (CConfigEntry *)new CConfigEntry();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CConfigEntry__SWIG_1) {
  {
    CConfig *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfigEntry *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CConfigEntry(Config);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CConfig,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfig const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfig const &""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = (CConfigEntry *)new CConfigEntry((CConfig const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CConfigEntry__SWIG_2) {
  {
    CConfigEntry *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfigEntry *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CConfigEntry(other);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CConfigEntry,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry const &""'"); 
    }
    arg1 = reinterpret_cast< CConfigEntry * >(argp1);
    result = (CConfigEntry *)new CConfigEntry((CConfigEntry const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfigEntry, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CConfigEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfigEntry, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CConfigEntry__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CConfigEntry__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CConfigEntry__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CConfigEntry'");
  XSRETURN(0);
}


XS(_wrap_delete_CConfigEntry) {
  {
    CConfigEntry *arg1 = (CConfigEntry *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CConfigEntry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfigEntry, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CConfigEntry" "', argument " "1"" of type '" "CConfigEntry *""'"); 
    }
    arg1 = reinterpret_cast< CConfigEntry * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfigEntry_m_pSubConfig_set) {
  {
    CConfigEntry *arg1 = (CConfigEntry *) 0 ;
    CConfig *arg2 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CConfigEntry_m_pSubConfig_set(self,m_pSubConfig);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfigEntry, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfigEntry_m_pSubConfig_set" "', argument " "1"" of type '" "CConfigEntry *""'"); 
    }
    arg1 = reinterpret_cast< CConfigEntry * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CConfig, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfigEntry_m_pSubConfig_set" "', argument " "2"" of type '" "CConfig *""'"); 
    }
    arg2 = reinterpret_cast< CConfig * >(argp2);
    if (arg1) (arg1)->m_pSubConfig = arg2;
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfigEntry_m_pSubConfig_get) {
  {
    CConfigEntry *arg1 = (CConfigEntry *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfig *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfigEntry_m_pSubConfig_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfigEntry, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfigEntry_m_pSubConfig_get" "', argument " "1"" of type '" "CConfigEntry *""'"); 
    }
    arg1 = reinterpret_cast< CConfigEntry * >(argp1);
    result = (CConfig *) ((arg1)->m_pSubConfig);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfig, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_BeginEntries) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,std::vector< CString > >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfig_BeginEntries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_BeginEntries" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = ((CConfig const *)arg1)->BeginEntries();
    ST(argvi) = SWIG_NewPointerObj((new CConfig::EntryMapIterator(static_cast< const CConfig::EntryMapIterator& >(result))), SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_EndEntries) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,std::vector< CString > >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfig_EndEntries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_EndEntries" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = ((CConfig const *)arg1)->EndEntries();
    ST(argvi) = SWIG_NewPointerObj((new CConfig::EntryMapIterator(static_cast< const CConfig::EntryMapIterator& >(result))), SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_BeginSubConfigs) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,std::map< CString,CConfigEntry > >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfig_BeginSubConfigs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_BeginSubConfigs" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = ((CConfig const *)arg1)->BeginSubConfigs();
    ST(argvi) = SWIG_NewPointerObj((new CConfig::SubConfigMapIterator(static_cast< const CConfig::SubConfigMapIterator& >(result))), SWIGTYPE_p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_EndSubConfigs) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,std::map< CString,CConfigEntry > >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfig_EndSubConfigs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_EndSubConfigs" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = ((CConfig const *)arg1)->EndSubConfigs();
    ST(argvi) = SWIG_NewPointerObj((new CConfig::SubConfigMapIterator(static_cast< const CConfig::SubConfigMapIterator& >(result))), SWIGTYPE_p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_AddKeyValuePair) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_AddKeyValuePair(self,sName,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_AddKeyValuePair" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_AddKeyValuePair" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddKeyValuePair" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_AddKeyValuePair" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddKeyValuePair" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddKeyValuePair((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_AddSubConfig) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CConfig arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_AddSubConfig(self,sTag,sName,Config);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_AddSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_AddSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_AddSubConfig" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CConfig,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CConfig_AddSubConfig" "', argument " "4"" of type '" "CConfig""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_AddSubConfig" "', argument " "4"" of type '" "CConfig""'");
      } else {
        arg4 = *(reinterpret_cast< CConfig * >(argp4));
      }
    }
    result = (bool)(arg1)->AddSubConfig((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindStringVector__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    VCString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindStringVector(self,sName,vsList,bErase);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringVector" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
    }
    arg3 = reinterpret_cast< VCString * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindStringVector" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->FindStringVector((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindStringVector__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    VCString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindStringVector(self,sName,vsList);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringVector" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringVector" "', argument " "3"" of type '" "VCString &""'"); 
    }
    arg3 = reinterpret_cast< VCString * >(argp3);
    result = (bool)(arg1)->FindStringVector((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindStringVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindStringVector__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindStringVector__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindStringVector'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindStringEntry__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindStringEntry(self,sName,sRes,sDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringEntry" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CConfig_FindStringEntry" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->FindStringEntry((CString const &)*arg2,*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindStringEntry__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindStringEntry(self,sName,sRes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindStringEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindStringEntry" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindStringEntry" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->FindStringEntry((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindStringEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindStringEntry__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindStringEntry__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindStringEntry'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindBoolEntry__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    bool *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindBoolEntry(self,sName,bRes,bDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindBoolEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
    }
    arg3 = reinterpret_cast< bool * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindBoolEntry" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->FindBoolEntry((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindBoolEntry__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    bool *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindBoolEntry(self,sName,bRes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindBoolEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindBoolEntry" "', argument " "3"" of type '" "bool &""'"); 
    }
    arg3 = reinterpret_cast< bool * >(argp3);
    result = (bool)(arg1)->FindBoolEntry((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindBoolEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_bool, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindBoolEntry__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindBoolEntry__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindBoolEntry'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindUIntEntry__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    unsigned int *arg3 = 0 ;
    unsigned int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindUIntEntry(self,sName,uRes,uDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUIntEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    arg3 = reinterpret_cast< unsigned int * >(argp3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindUIntEntry" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)(arg1)->FindUIntEntry((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindUIntEntry__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    unsigned int *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindUIntEntry(self,sName,uRes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUIntEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUIntEntry" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    arg3 = reinterpret_cast< unsigned int * >(argp3);
    result = (bool)(arg1)->FindUIntEntry((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindUIntEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindUIntEntry__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindUIntEntry__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindUIntEntry'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindUShortEntry__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    unsigned short *arg3 = 0 ;
    unsigned short arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    unsigned short val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindUShortEntry(self,sName,uRes,uDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUShortEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUShortEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUShortEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_unsigned_short,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUShortEntry" "', argument " "3"" of type '" "unsigned short &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUShortEntry" "', argument " "3"" of type '" "unsigned short &""'"); 
    }
    arg3 = reinterpret_cast< unsigned short * >(argp3);
    ecode4 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindUShortEntry" "', argument " "4"" of type '" "unsigned short""'");
    } 
    arg4 = static_cast< unsigned short >(val4);
    result = (bool)(arg1)->FindUShortEntry((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindUShortEntry__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    unsigned short *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindUShortEntry(self,sName,uRes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindUShortEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindUShortEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUShortEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_unsigned_short,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindUShortEntry" "', argument " "3"" of type '" "unsigned short &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindUShortEntry" "', argument " "3"" of type '" "unsigned short &""'"); 
    }
    arg3 = reinterpret_cast< unsigned short * >(argp3);
    result = (bool)(arg1)->FindUShortEntry((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindUShortEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_unsigned_short, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_unsigned_short, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindUShortEntry__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindUShortEntry__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindUShortEntry'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindDoubleEntry__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    double *arg3 = 0 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindDoubleEntry(self,sName,fRes,fDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindDoubleEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_double,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
    }
    arg3 = reinterpret_cast< double * >(argp3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindDoubleEntry" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    result = (bool)(arg1)->FindDoubleEntry((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindDoubleEntry__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    double *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindDoubleEntry(self,sName,fRes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindDoubleEntry" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_double,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindDoubleEntry" "', argument " "3"" of type '" "double &""'"); 
    }
    arg3 = reinterpret_cast< double * >(argp3);
    result = (bool)(arg1)->FindDoubleEntry((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindDoubleEntry) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindDoubleEntry__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindDoubleEntry__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindDoubleEntry'");
  XSRETURN(0);
}


XS(_wrap_CConfig_FindSubConfig__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CConfig::SubConfig *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CConfig_FindSubConfig(self,sName,Config,bErase);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__mapT_CString_CConfigEntry_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
    }
    arg3 = reinterpret_cast< CConfig::SubConfig * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CConfig_FindSubConfig" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->FindSubConfig((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindSubConfig__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CString *arg2 = 0 ;
    CConfig::SubConfig *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_FindSubConfig(self,sName,Config);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_FindSubConfig" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__mapT_CString_CConfigEntry_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_FindSubConfig" "', argument " "3"" of type '" "CConfig::SubConfig &""'"); 
    }
    arg3 = reinterpret_cast< CConfig::SubConfig * >(argp3);
    result = (bool)(arg1)->FindSubConfig((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_FindSubConfig) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__mapT_CString_CConfigEntry_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__mapT_CString_CConfigEntry_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindSubConfig__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_FindSubConfig__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_FindSubConfig'");
  XSRETURN(0);
}


XS(_wrap_CConfig_empty) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CConfig_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_empty" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    result = (bool)((CConfig const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_Parse) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CFile *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_Parse(self,file,sErrorMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Parse" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CFile,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Parse" "', argument " "2"" of type '" "CFile &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Parse" "', argument " "2"" of type '" "CFile &""'"); 
    }
    arg2 = reinterpret_cast< CFile * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CConfig_Parse" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Parse" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->Parse(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_Write__SWIG_0) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CFile *arg2 = 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CConfig_Write(self,file,iIndentation);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Write" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CFile,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
    }
    arg2 = reinterpret_cast< CFile * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CConfig_Write" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    (arg1)->Write(*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_Write__SWIG_1) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    CFile *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CConfig_Write(self,file);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CConfig_Write" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CFile,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CConfig_Write" "', argument " "2"" of type '" "CFile &""'"); 
    }
    arg2 = reinterpret_cast< CFile * >(argp2);
    (arg1)->Write(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CConfig_Write) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_Write__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CConfig_Write__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CConfig_Write'");
  XSRETURN(0);
}


XS(_wrap_new_CConfig) {
  {
    int argvi = 0;
    CConfig *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CConfig();");
    }
    result = (CConfig *)new CConfig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CConfig, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CConfig) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CConfig" "', argument " "1"" of type '" "CConfig *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSCharBuffer) {
  {
    size_t arg1 ;
    size_t val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CSCharBuffer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CSCharBuffer(iSize);");
    }
    ecode1 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CSCharBuffer" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
    result = (CSCharBuffer *)new CSCharBuffer(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSCharBuffer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSCharBuffer) {
  {
    CSCharBuffer *arg1 = (CSCharBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSCharBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSCharBuffer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSCharBuffer" "', argument " "1"" of type '" "CSCharBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CSCharBuffer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSCharBuffer___call__) {
  {
    CSCharBuffer *arg1 = (CSCharBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    char *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSCharBuffer___call__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSCharBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSCharBuffer___call__" "', argument " "1"" of type '" "CSCharBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CSCharBuffer * >(argp1);
    result = (char *)(arg1)->operator ()();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSSockAddr) {
  {
    int argvi = 0;
    CSSockAddr *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CSSockAddr();");
    }
    result = (CSSockAddr *)new CSSockAddr();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSockAddr, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSSockAddr) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSSockAddr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSSockAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_SinFamily) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_SinFamily(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SinFamily" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    (arg1)->SinFamily();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_SinPort) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSSockAddr_SinPort(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SinPort" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSSockAddr_SinPort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSSockAddr_SinPort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    (arg1)->SinPort(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_SetIPv6) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSSockAddr_SetIPv6(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SetIPv6" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSSockAddr_SetIPv6" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIPv6(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_GetIPv6) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_GetIPv6(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetIPv6" "', argument " "1"" of type '" "CSSockAddr const *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    result = (bool)((CSSockAddr const *)arg1)->GetIPv6();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_GetSockAddrLen) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    socklen_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_GetSockAddrLen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetSockAddrLen" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    result = (arg1)->GetSockAddrLen();
    ST(argvi) = SWIG_NewPointerObj((new socklen_t(static_cast< const socklen_t& >(result))), SWIGTYPE_p_socklen_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_GetSockAddr) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    sockaddr_in *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_GetSockAddr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetSockAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    result = (sockaddr_in *)(arg1)->GetSockAddr();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sockaddr_in, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_GetAddr) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    in_addr *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_GetAddr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetAddr" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    result = (in_addr *)(arg1)->GetAddr();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_in_addr, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_SetAFRequire) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    CSSockAddr::EAFRequire arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSSockAddr_SetAFRequire(self,iWhich);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_SetAFRequire" "', argument " "1"" of type '" "CSSockAddr *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSSockAddr_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
    } 
    arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
    (arg1)->SetAFRequire(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSSockAddr_GetAFRequire) {
  {
    CSSockAddr *arg1 = (CSSockAddr *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSSockAddr::EAFRequire result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSSockAddr_GetAFRequire(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSockAddr, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSSockAddr_GetAFRequire" "', argument " "1"" of type '" "CSSockAddr const *""'"); 
    }
    arg1 = reinterpret_cast< CSSockAddr * >(argp1);
    result = (CSSockAddr::EAFRequire)((CSSockAddr const *)arg1)->GetAFRequire();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CGetAddrInfo) {
  {
    CString *arg1 = 0 ;
    Csock *arg2 = (Csock *) 0 ;
    CSSockAddr *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CGetAddrInfo *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CGetAddrInfo(sHostname,pSock,csSockAddr);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CGetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CGetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CGetAddrInfo" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CSSockAddr,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CGetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CGetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    arg3 = reinterpret_cast< CSSockAddr * >(argp3);
    result = (CGetAddrInfo *)new CGetAddrInfo((CString const &)*arg1,arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CGetAddrInfo, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CGetAddrInfo) {
  {
    CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CGetAddrInfo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CGetAddrInfo, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CGetAddrInfo" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
    }
    arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CGetAddrInfo_Init) {
  {
    CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CGetAddrInfo_Init(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Init" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
    }
    arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
    (arg1)->Init();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CGetAddrInfo_Process) {
  {
    CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CGetAddrInfo_Process(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Process" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
    }
    arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
    result = (int)(arg1)->Process();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CGetAddrInfo_Finish) {
  {
    CGetAddrInfo *arg1 = (CGetAddrInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CGetAddrInfo_Finish(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CGetAddrInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CGetAddrInfo_Finish" "', argument " "1"" of type '" "CGetAddrInfo *""'"); 
    }
    arg1 = reinterpret_cast< CGetAddrInfo * >(argp1);
    result = (int)(arg1)->Finish();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_GetAddrInfo) {
  {
    CString *arg1 = 0 ;
    Csock *arg2 = (Csock *) 0 ;
    CSSockAddr *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: GetAddrInfo(sHostname,pSock,csSockAddr);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetAddrInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetAddrInfo" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CSSockAddr,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    arg3 = reinterpret_cast< CSSockAddr * >(argp3);
    result = (int)GetAddrInfo((CString const &)*arg1,arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_GetCsockClassIdx) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetCsockClassIdx();");
    }
    result = (int)GetCsockClassIdx();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_InitCsocket) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: InitCsocket();");
    }
    result = (bool)InitCsocket();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ShutdownCsocket) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: ShutdownCsocket();");
    }
    ShutdownCsocket();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_GetSockError) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetSockError();");
    }
    result = (int)GetSockError();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_TFD_ZERO) {
  {
    fd_set *arg1 = (fd_set *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: TFD_ZERO(set);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_fd_set, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TFD_ZERO" "', argument " "1"" of type '" "fd_set *""'"); 
    }
    arg1 = reinterpret_cast< fd_set * >(argp1);
    TFD_ZERO(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_TFD_SET) {
  {
    cs_sock_t arg1 ;
    fd_set *arg2 = (fd_set *) 0 ;
    int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: TFD_SET(iSock,set);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_SET" "', argument " "1"" of type '" "cs_sock_t""'");
    } 
    arg1 = static_cast< cs_sock_t >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_SET" "', argument " "2"" of type '" "fd_set *""'"); 
    }
    arg2 = reinterpret_cast< fd_set * >(argp2);
    TFD_SET(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_TFD_ISSET) {
  {
    cs_sock_t arg1 ;
    fd_set *arg2 = (fd_set *) 0 ;
    int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: TFD_ISSET(iSock,set);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_ISSET" "', argument " "1"" of type '" "cs_sock_t""'");
    } 
    arg1 = static_cast< cs_sock_t >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_ISSET" "', argument " "2"" of type '" "fd_set *""'"); 
    }
    arg2 = reinterpret_cast< fd_set * >(argp2);
    result = (bool)TFD_ISSET(arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_TFD_CLR) {
  {
    cs_sock_t arg1 ;
    fd_set *arg2 = (fd_set *) 0 ;
    int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: TFD_CLR(iSock,set);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "TFD_CLR" "', argument " "1"" of type '" "cs_sock_t""'");
    } 
    arg1 = static_cast< cs_sock_t >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_fd_set, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TFD_CLR" "', argument " "2"" of type '" "fd_set *""'"); 
    }
    arg2 = reinterpret_cast< fd_set * >(argp2);
    TFD_CLR(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___Perror) {
  {
    CString *arg1 = 0 ;
    char *arg2 = (char *) 0 ;
    uint32_t arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: __Perror(s,pszFile,iLineNo);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__Perror" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__Perror" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__Perror" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "__Perror" "', argument " "3"" of type '" "uint32_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__Perror" "', argument " "3"" of type '" "uint32_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint32_t * >(argp3));
      }
    }
    __Perror((CString const &)*arg1,(char const *)arg2,arg3);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_millitime) {
  {
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: millitime();");
    }
    result = millitime();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CCron) {
  {
    int argvi = 0;
    CCron *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CCron();");
    }
    result = (CCron *)new CCron();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CCron, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CCron) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CCron(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CCron" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_run) {
  {
    CCron *arg1 = (CCron *) 0 ;
    timeval *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CCron_run(self,tNow);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_run" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_timeval,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_run" "', argument " "2"" of type '" "timeval &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_run" "', argument " "2"" of type '" "timeval &""'"); 
    }
    arg2 = reinterpret_cast< timeval * >(argp2);
    (arg1)->run(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_StartMaxCycles__SWIG_0) {
  {
    CCron *arg1 = (CCron *) 0 ;
    double arg2 ;
    uint32_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CCron_StartMaxCycles(self,dTimeSequence,iMaxCycles);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_StartMaxCycles" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "uint32_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "uint32_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint32_t * >(argp3));
      }
    }
    (arg1)->StartMaxCycles(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_StartMaxCycles__SWIG_1) {
  {
    CCron *arg1 = (CCron *) 0 ;
    timeval *arg2 = 0 ;
    uint32_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CCron_StartMaxCycles(self,tTimeSequence,iMaxCycles);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_StartMaxCycles" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_timeval,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_StartMaxCycles" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    arg2 = reinterpret_cast< timeval * >(argp2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "uint32_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_StartMaxCycles" "', argument " "3"" of type '" "uint32_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint32_t * >(argp3));
      }
    }
    (arg1)->StartMaxCycles((timeval const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_StartMaxCycles) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CCron, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_timeval, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CCron, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CCron_StartMaxCycles__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CCron_StartMaxCycles__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CCron_StartMaxCycles'");
  XSRETURN(0);
}


XS(_wrap_CCron_Start__SWIG_0) {
  {
    CCron *arg1 = (CCron *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CCron_Start(self,dTimeSequence);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Start" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CCron_Start" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->Start(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_Start__SWIG_1) {
  {
    CCron *arg1 = (CCron *) 0 ;
    timeval *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CCron_Start(self,TimeSequence);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Start" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_timeval,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_Start" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_Start" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    arg2 = reinterpret_cast< timeval * >(argp2);
    (arg1)->Start((timeval const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_Start) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CCron, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_timeval, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CCron, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CCron_Start__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CCron_Start__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CCron_Start'");
  XSRETURN(0);
}


XS(_wrap_CCron_Stop) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_Stop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Stop" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    (arg1)->Stop();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_Pause) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_Pause(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_Pause" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    (arg1)->Pause();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_UnPause) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_UnPause(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_UnPause" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    (arg1)->UnPause();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_GetInterval) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    timeval result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_GetInterval(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetInterval" "', argument " "1"" of type '" "CCron const *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = ((CCron const *)arg1)->GetInterval();
    ST(argvi) = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_GetMaxCycles) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_GetMaxCycles(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetMaxCycles" "', argument " "1"" of type '" "CCron const *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = ((CCron const *)arg1)->GetMaxCycles();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_GetCyclesLeft) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_GetCyclesLeft(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetCyclesLeft" "', argument " "1"" of type '" "CCron const *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = ((CCron const *)arg1)->GetCyclesLeft();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_isValid) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_isValid(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_isValid" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = (bool)(arg1)->isValid();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_GetName) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetName" "', argument " "1"" of type '" "CCron const *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = (CString *) &((CCron const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_SetName) {
  {
    CCron *arg1 = (CCron *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CCron_SetName(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_SetName" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CCron_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CCron_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_GetNextRun) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    timeval result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_GetNextRun(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_GetNextRun" "', argument " "1"" of type '" "CCron const *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    result = ((CCron const *)arg1)->GetNextRun();
    ST(argvi) = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CCron_RunJob) {
  {
    CCron *arg1 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CCron_RunJob(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CCron_RunJob" "', argument " "1"" of type '" "CCron *""'"); 
    }
    arg1 = reinterpret_cast< CCron * >(argp1);
    (arg1)->RunJob();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSMonitorFD) {
  {
    int argvi = 0;
    CSMonitorFD *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CSMonitorFD();");
    }
    result = (CSMonitorFD *)new CSMonitorFD();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSMonitorFD, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSMonitorFD) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSMonitorFD(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSMonitorFD" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_GatherFDsForSelect) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    std::map< int,short > *arg2 = 0 ;
    long *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSMonitorFD_GatherFDsForSelect(self,miiReadyFds,iTimeoutMS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "2"" of type '" "std::map< int,short > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "2"" of type '" "std::map< int,short > &""'"); 
    }
    arg2 = reinterpret_cast< std::map< int,short > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_long,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "3"" of type '" "long &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_GatherFDsForSelect" "', argument " "3"" of type '" "long &""'"); 
    }
    arg3 = reinterpret_cast< long * >(argp3);
    result = (bool)(arg1)->GatherFDsForSelect(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_FDsThatTriggered) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    std::map< int,short > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSMonitorFD_FDsThatTriggered(self,miiReadyFds);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_FDsThatTriggered" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    arg2 = reinterpret_cast< std::map< int,short > * >(argp2);
    result = (bool)(arg1)->FDsThatTriggered((std::map< int,short > const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_CheckFDs) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    std::map< int,short > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSMonitorFD_CheckFDs(self,miiReadyFds);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_CheckFDs" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSMonitorFD_CheckFDs" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSMonitorFD_CheckFDs" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    arg2 = reinterpret_cast< std::map< int,short > * >(argp2);
    result = (bool)(arg1)->CheckFDs((std::map< int,short > const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_Add) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    int arg2 ;
    short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSMonitorFD_Add(self,iFD,iMonitorEvents);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_Add" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSMonitorFD_Add" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSMonitorFD_Add" "', argument " "3"" of type '" "short""'");
    } 
    arg3 = static_cast< short >(val3);
    (arg1)->Add(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_Remove) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSMonitorFD_Remove(self,iFD);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_Remove" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSMonitorFD_Remove" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->Remove(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_DisableMonitor) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSMonitorFD_DisableMonitor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_DisableMonitor" "', argument " "1"" of type '" "CSMonitorFD *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    (arg1)->DisableMonitor();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSMonitorFD_IsEnabled) {
  {
    CSMonitorFD *arg1 = (CSMonitorFD *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSMonitorFD_IsEnabled(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSMonitorFD_IsEnabled" "', argument " "1"" of type '" "CSMonitorFD const *""'"); 
    }
    arg1 = reinterpret_cast< CSMonitorFD * >(argp1);
    result = (bool)((CSMonitorFD const *)arg1)->IsEnabled();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSockCommon) {
  {
    int argvi = 0;
    CSockCommon *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CSockCommon();");
    }
    result = (CSockCommon *)new CSockCommon();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockCommon, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSockCommon) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSockCommon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSockCommon" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_CleanupCrons) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSockCommon_CleanupCrons(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CleanupCrons" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    (arg1)->CleanupCrons();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_CleanupFDMonitors) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSockCommon_CleanupFDMonitors(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CleanupFDMonitors" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    (arg1)->CleanupFDMonitors();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_GetCrons) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CCron * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSockCommon_GetCrons(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_GetCrons" "', argument " "1"" of type '" "CSockCommon const *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    result = (std::vector< CCron * > *) &((CSockCommon const *)arg1)->GetCrons();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CCron_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_Cron) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSockCommon_Cron(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_Cron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    (arg1)->Cron();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_AddCron) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CCron *arg2 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_AddCron(self,pcCron);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_AddCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_AddCron" "', argument " "2"" of type '" "CCron *""'"); 
    }
    arg2 = reinterpret_cast< CCron * >(argp2);
    (arg1)->AddCron(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_DelCron__SWIG_0) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockCommon_DelCron(self,sName,bDeleteAll,bCaseSensitive);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockCommon_DelCron" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockCommon_DelCron" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    (arg1)->DelCron((CString const &)*arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_DelCron__SWIG_1) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSockCommon_DelCron(self,sName,bDeleteAll);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockCommon_DelCron" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->DelCron((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_DelCron__SWIG_2) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_DelCron(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->DelCron((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_DelCron__SWIG_3) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    uint32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_DelCron(self,iPos);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCron" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_DelCron" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    (arg1)->DelCron(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_DelCron) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockCommon, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockCommon, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockCommon, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockCommon, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockCommon_DelCron__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockCommon_DelCron__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockCommon_DelCron__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockCommon_DelCron__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockCommon_DelCron'");
  XSRETURN(0);
}


XS(_wrap_CSockCommon_DelCronByAddr) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CCron *arg2 = (CCron *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_DelCronByAddr(self,pcCron);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_DelCronByAddr" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CCron, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_DelCronByAddr" "', argument " "2"" of type '" "CCron *""'"); 
    }
    arg2 = reinterpret_cast< CCron * >(argp2);
    (arg1)->DelCronByAddr(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_CheckFDs) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    std::map< int,short > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_CheckFDs(self,miiReadyFds);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_CheckFDs" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_CheckFDs" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_CheckFDs" "', argument " "2"" of type '" "std::map< int,short > const &""'"); 
    }
    arg2 = reinterpret_cast< std::map< int,short > * >(argp2);
    (arg1)->CheckFDs((std::map< int,short > const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_AssignFDs) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    std::map< int,short > *arg2 = 0 ;
    timeval *arg3 = (timeval *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSockCommon_AssignFDs(self,miiReadyFds,tvtimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_AssignFDs" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_AssignFDs" "', argument " "2"" of type '" "std::map< int,short > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockCommon_AssignFDs" "', argument " "2"" of type '" "std::map< int,short > &""'"); 
    }
    arg2 = reinterpret_cast< std::map< int,short > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_timeval, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockCommon_AssignFDs" "', argument " "3"" of type '" "timeval *""'"); 
    }
    arg3 = reinterpret_cast< timeval * >(argp3);
    (arg1)->AssignFDs(*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockCommon_MonitorFD) {
  {
    CSockCommon *arg1 = (CSockCommon *) 0 ;
    CSMonitorFD *arg2 = (CSMonitorFD *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockCommon_MonitorFD(self,pMonitorFD);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockCommon, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockCommon_MonitorFD" "', argument " "1"" of type '" "CSockCommon *""'"); 
    }
    arg1 = reinterpret_cast< CSockCommon * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CSMonitorFD, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockCommon_MonitorFD" "', argument " "2"" of type '" "CSMonitorFD *""'"); 
    }
    arg2 = reinterpret_cast< CSMonitorFD * >(argp2);
    (arg1)->MonitorFD(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Csock__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_Csock(iTimeout);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Csock" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = (Csock *)new Csock(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Csock__SWIG_1) {
  {
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_Csock();");
    }
    result = (Csock *)new Csock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_Csock__SWIG_2) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_Csock(sHostname,uPort,itimeout);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Csock" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Csock" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (Csock *)new Csock((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Csock__SWIG_3) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_Csock(sHostname,uPort);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Csock" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Csock" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (Csock *)new Csock((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_Csock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_Csock__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_Csock__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_Csock__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_Csock__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_Csock'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetSockObj) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_GetSockObj(self,sHostname,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSockObj" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_GetSockObj" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetSockObj" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_Csock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_Csock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Csock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Dereference) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Dereference(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Dereference" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->Dereference();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Copy) {
  {
    Csock *arg1 = (Csock *) 0 ;
    Csock *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_Copy(self,cCopy);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Copy" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Csock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Copy" "', argument " "2"" of type '" "Csock const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Copy" "', argument " "2"" of type '" "Csock const &""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    (arg1)->Copy((Csock const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Csock *) &(arg1)->operator <<((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    std::ostream &(*arg2)(std::ostream &) = (std::ostream &(*)(std::ostream &)) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,io);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_r_std__ostream__r_std__ostream);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "std::ostream &(*)(std::ostream &)""'"); 
      }
    }
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_2) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_int32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "int32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "int32_t""'");
      } else {
        arg2 = *(reinterpret_cast< int32_t * >(argp2));
      }
    }
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_3) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_4) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int64_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_int64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "int64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "int64_t""'");
      } else {
        arg2 = *(reinterpret_cast< int64_t * >(argp2));
      }
    }
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_5) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint64_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock___lshift__" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_6) {
  {
    Csock *arg1 = (Csock *) 0 ;
    float arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    float val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "float""'");
    } 
    arg2 = static_cast< float >(val2);
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift____SWIG_7) {
  {
    Csock *arg1 = (Csock *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock___lshift__(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock___lshift__" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock___lshift__" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (Csock *) &(arg1)->operator <<(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock___lshift__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *ptr = 0;
        int res = SWIG_ConvertFunctionPtr(ST(1), &ptr, SWIGTYPE_p_f_r_std__ostream__r_std__ostream);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_int32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_int64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_4); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_5); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_6); return;
    case 7:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_7); return;
    case 8:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock___lshift____SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock___lshift__'");
  XSRETURN(0);
}


XS(_wrap_Csock_Connect) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Connect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Connect" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->Connect();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    uint32_t arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: Csock_Listen(self,iPort,iMaxConns,sBindHost,iTimeout,bDetach);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Csock_Listen" "', argument " "5"" of type '" "uint32_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "5"" of type '" "uint32_t""'");
      } else {
        arg5 = *(reinterpret_cast< uint32_t * >(argp5));
      }
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Csock_Listen" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    uint32_t arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Csock_Listen(self,iPort,iMaxConns,sBindHost,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Csock_Listen" "', argument " "5"" of type '" "uint32_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "5"" of type '" "uint32_t""'");
      } else {
        arg5 = *(reinterpret_cast< uint32_t * >(argp5));
      }
    }
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen__SWIG_2) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Csock_Listen(self,iPort,iMaxConns,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen__SWIG_3) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_Listen(self,iPort,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)(arg1)->Listen(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen__SWIG_4) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_Listen(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listen" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (bool)(arg1)->Listen(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listen) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Listen__SWIG_4); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Listen__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Listen__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Listen__SWIG_1); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Listen__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_Listen'");
  XSRETURN(0);
}


XS(_wrap_Csock_Accept) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    uint16_t *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    cs_sock_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_Accept(self,sHost,iRPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Accept" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Accept" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Accept" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_Accept" "', argument " "3"" of type '" "uint16_t &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Accept" "', argument " "3"" of type '" "uint16_t &""'"); 
    }
    arg3 = reinterpret_cast< uint16_t * >(argp3);
    result = (cs_sock_t)(arg1)->Accept(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_AcceptSSL) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_AcceptSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_AcceptSSL" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->AcceptSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SSLClientSetup) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_SSLClientSetup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SSLClientSetup" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->SSLClientSetup();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SSLServerSetup) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_SSLServerSetup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SSLServerSetup" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->SSLServerSetup();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectSSL) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ConnectSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectSSL" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->ConnectSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_StartTLS) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_StartTLS(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_StartTLS" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->StartTLS();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Write__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_Write(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Write" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Write" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Write" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = (bool)(arg1)->Write((char const *)arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Write__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_Write(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Write" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Write" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Write" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Write((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Write) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Write__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Write__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_Write'");
  XSRETURN(0);
}


XS(_wrap_Csock_Read) {
  {
    Csock *arg1 = (Csock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    cs_ssize_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_Read(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Read" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Read" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_Read" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = (arg1)->Read(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new cs_ssize_t(static_cast< const cs_ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetLocalIP) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetLocalIP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLocalIP" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetLocalIP();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetRemoteIP) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetRemoteIP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRemoteIP" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetRemoteIP();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_IsConnected) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_IsConnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsConnected" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)((Csock const *)arg1)->IsConnected();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetIsConnected) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetIsConnected(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetIsConnected" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetIsConnected" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIsConnected(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetRSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    cs_sock_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetRSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (cs_sock_t *) &(arg1)->GetRSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetRSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    cs_sock_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetRSock(self,iSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetRSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetRSock" "', argument " "2"" of type '" "cs_sock_t""'");
    } 
    arg2 = static_cast< cs_sock_t >(val2);
    (arg1)->SetRSock(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetWSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    cs_sock_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetWSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetWSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (cs_sock_t *) &(arg1)->GetWSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetWSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    cs_sock_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetWSock(self,iSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetWSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetWSock" "', argument " "2"" of type '" "cs_sock_t""'");
    } 
    arg2 = static_cast< cs_sock_t >(val2);
    (arg1)->SetWSock(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    cs_sock_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetSock(self,iSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSock" "', argument " "2"" of type '" "cs_sock_t""'");
    } 
    arg2 = static_cast< cs_sock_t >(val2);
    (arg1)->SetSock(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetSock) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    cs_sock_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSock" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (cs_sock_t *) &(arg1)->GetSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CallSockError__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_CallSockError(self,iErrno,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CallSockError" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_CallSockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_CallSockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_CallSockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->CallSockError(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CallSockError__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_CallSockError(self,iErrno);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CallSockError" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_CallSockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->CallSockError(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CallSockError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_CallSockError__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_CallSockError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_CallSockError'");
  XSRETURN(0);
}


XS(_wrap_Csock_ResetTimer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ResetTimer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetTimer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ResetTimer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_PauseRead) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_PauseRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PauseRead" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->PauseRead();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_UnPauseRead) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_UnPauseRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_UnPauseRead" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->UnPauseRead();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_IsReadPaused) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_IsReadPaused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsReadPaused" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->IsReadPaused();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetTimeout__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    uint32_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_SetTimeout(self,iTimeout,iTimeoutType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetTimeout" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_SetTimeout" "', argument " "3"" of type '" "uint32_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetTimeout" "', argument " "3"" of type '" "uint32_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint32_t * >(argp3));
      }
    }
    (arg1)->SetTimeout(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetTimeout__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetTimeout(self,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetTimeout" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetTimeout(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetTimeout) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_SetTimeout__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_SetTimeout__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_SetTimeout'");
  XSRETURN(0);
}


XS(_wrap_Csock_SetTimeoutType) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetTimeoutType(self,iTimeoutType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetTimeoutType" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetTimeoutType" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetTimeoutType" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    (arg1)->SetTimeoutType(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetTimeout) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeout" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (int)((Csock const *)arg1)->GetTimeout();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetTimeoutType) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetTimeoutType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeoutType" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = ((Csock const *)arg1)->GetTimeoutType();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CheckTimeout) {
  {
    Csock *arg1 = (Csock *) 0 ;
    time_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_CheckTimeout(self,iNow);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_CheckTimeout" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_CheckTimeout" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    result = (bool)(arg1)->CheckTimeout(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_PushBuff__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Csock_PushBuff(self,data,len,bStartAtZero);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PushBuff" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_PushBuff" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_PushBuff" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Csock_PushBuff" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    (arg1)->PushBuff((char const *)arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_PushBuff__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_PushBuff(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_PushBuff" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_PushBuff" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_PushBuff" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    (arg1)->PushBuff((char const *)arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_PushBuff) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_PushBuff__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_PushBuff__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_PushBuff'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetInternalReadBuffer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetInternalReadBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetInternalReadBuffer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &(arg1)->GetInternalReadBuffer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetInternalWriteBuffer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetInternalWriteBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetInternalWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &(arg1)->GetInternalWriteBuffer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetMaxBufferThreshold) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetMaxBufferThreshold(self,iThreshold);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetMaxBufferThreshold" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetMaxBufferThreshold" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetMaxBufferThreshold" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    (arg1)->SetMaxBufferThreshold(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetMaxBufferThreshold) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetMaxBufferThreshold(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetMaxBufferThreshold" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = ((Csock const *)arg1)->GetMaxBufferThreshold();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetType) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetType" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (int)((Csock const *)arg1)->GetType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetType) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetType(self,iType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetType" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetType" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetType(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetSockName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetSockName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSockName" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &((Csock const *)arg1)->GetSockName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetSockName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetSockName(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSockName" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetSockName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetHostName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetHostName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetHostName" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &((Csock const *)arg1)->GetHostName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetHostName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetHostName(self,sHostname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetHostName" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetHostName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetHostName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetHostName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetStartTime) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetStartTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetStartTime" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = ((Csock const *)arg1)->GetStartTime();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ResetStartTime) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ResetStartTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetStartTime" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ResetStartTime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetBytesRead) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetBytesRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBytesRead" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = ((Csock const *)arg1)->GetBytesRead();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ResetBytesRead) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ResetBytesRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetBytesRead" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ResetBytesRead();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetBytesWritten) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetBytesWritten(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBytesWritten" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = ((Csock const *)arg1)->GetBytesWritten();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ResetBytesWritten) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ResetBytesWritten(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ResetBytesWritten" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ResetBytesWritten();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAvgRead__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint64_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_GetAvgRead(self,iSample);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgRead" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetAvgRead" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAvgRead" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    result = (double)(arg1)->GetAvgRead(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAvgRead__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetAvgRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgRead" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (double)(arg1)->GetAvgRead();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAvgRead) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetAvgRead__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetAvgRead__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_GetAvgRead'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetAvgWrite__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint64_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_GetAvgWrite(self,iSample);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgWrite" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetAvgWrite" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAvgWrite" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    result = (double)(arg1)->GetAvgWrite(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAvgWrite__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetAvgWrite(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAvgWrite" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (double)(arg1)->GetAvgWrite();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAvgWrite) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetAvgWrite__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetAvgWrite__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_GetAvgWrite'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetRemotePort) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint16_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetRemotePort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRemotePort" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetRemotePort();
    ST(argvi) = SWIG_NewPointerObj((new uint16_t(static_cast< const uint16_t& >(result))), SWIGTYPE_p_uint16_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetLocalPort) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint16_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetLocalPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLocalPort" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetLocalPort();
    ST(argvi) = SWIG_NewPointerObj((new uint16_t(static_cast< const uint16_t& >(result))), SWIGTYPE_p_uint16_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetPort) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint16_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetPort" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetPort();
    ST(argvi) = SWIG_NewPointerObj((new uint16_t(static_cast< const uint16_t& >(result))), SWIGTYPE_p_uint16_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetPort) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetPort(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetPort" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetPort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetPort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    (arg1)->SetPort(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Close__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    Csock::ECloseType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_Close(self,eCloseType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Close" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_Close" "', argument " "2"" of type '" "Csock::ECloseType""'");
    } 
    arg2 = static_cast< Csock::ECloseType >(val2);
    (arg1)->Close(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Close__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Close(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Close" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->Close();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Close) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Close__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_Close__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_Close'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetCloseType) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Csock::ECloseType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetCloseType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetCloseType" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (Csock::ECloseType)(arg1)->GetCloseType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_IsClosed) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_IsClosed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_IsClosed" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->IsClosed();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_NonBlockingIO) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_NonBlockingIO(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_NonBlockingIO" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->NonBlockingIO();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetSSL) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetSSL" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->GetSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetSSL) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetSSL(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSSL" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSSL" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetSSL(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetWriteBuffer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetWriteBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &(arg1)->GetWriteBuffer();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ClearWriteBuffer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ClearWriteBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ClearWriteBuffer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ClearWriteBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SslIsEstablished) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_SslIsEstablished(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SslIsEstablished" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->SslIsEstablished();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectInetd__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_ConnectInetd(self,bIsSSL,sHostname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectInetd" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_ConnectInetd" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectInetd" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->ConnectInetd(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectInetd__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_ConnectInetd(self,bIsSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectInetd" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(arg1)->ConnectInetd(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectInetd__SWIG_2) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ConnectInetd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectInetd" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->ConnectInetd();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectInetd) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectInetd__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectInetd__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectInetd__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_ConnectInetd'");
  XSRETURN(0);
}


XS(_wrap_Csock_ConnectFD__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    Csock::ETConn arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: Csock_ConnectFD(self,iReadFD,iWriteFD,sName,bIsSSL,eDirection);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_ConnectFD" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Csock_ConnectFD" "', argument " "6"" of type '" "Csock::ETConn""'");
    } 
    arg6 = static_cast< Csock::ETConn >(val6);
    result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectFD__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Csock_ConnectFD(self,iReadFD,iWriteFD,sName,bIsSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Csock_ConnectFD" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectFD__SWIG_2) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Csock_ConnectFD(self,iReadFD,iWriteFD,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectFD" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_ConnectFD" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ConnectFD" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectFD" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->ConnectFD(arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectFD) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectFD__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectFD__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_ConnectFD__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_ConnectFD'");
  XSRETURN(0);
}


XS(_wrap_Csock_SetParentSockName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetParentSockName(self,sParentName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetParentSockName" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetParentSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetParentSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetParentSockName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetParentSockName) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetParentSockName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetParentSockName" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &(arg1)->GetParentSockName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetRate) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint32_t arg2 ;
    uint64_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_SetRate(self,iBytes,iMilliseconds);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetRate" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetRate" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetRate" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_SetRate" "', argument " "3"" of type '" "uint64_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetRate" "', argument " "3"" of type '" "uint64_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint64_t * >(argp3));
      }
    }
    (arg1)->SetRate(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetRateBytes) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetRateBytes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRateBytes" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetRateBytes();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetRateTime) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetRateTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetRateTime" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetRateTime();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Connected) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Connected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Connected" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->Connected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Disconnected) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Disconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Disconnected" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->Disconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Timeout) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_Timeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Timeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->Timeout();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ReadData) {
  {
    Csock *arg1 = (Csock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_ReadData(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadData" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ReadData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Csock_ReadData" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    (arg1)->ReadData((char const *)arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ReadLine) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_ReadLine(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadLine" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_EnableReadLine) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_EnableReadLine(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_EnableReadLine" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->EnableReadLine();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_DisableReadLine) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_DisableReadLine(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_DisableReadLine" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->DisableReadLine();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_HasReadLine) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_HasReadLine(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_HasReadLine" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)((Csock const *)arg1)->HasReadLine();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ReachedMaxBuffer) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ReachedMaxBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReachedMaxBuffer" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ReachedMaxBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SockError) {
  {
    Csock *arg1 = (Csock *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_SockError(self,iErrno,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SockError" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->SockError(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectionFrom) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_ConnectionFrom(self,sHost,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectionFrom" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_ConnectionFrom" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConnectionFrom" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_Listening) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_Listening(self,sBindIP,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_Listening" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_Listening" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listening" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_Listening" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_Listening" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    (arg1)->Listening((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConnectionRefused) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ConnectionRefused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConnectionRefused" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ConnectionRefused();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ReadPaused) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_ReadPaused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ReadPaused" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->ReadPaused();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    time_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_GetTimeSinceLastDataTransaction(self,iNow);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    result = (arg1)->GetTimeSinceLastDataTransaction(arg2);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetTimeSinceLastDataTransaction(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetTimeSinceLastDataTransaction" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetTimeSinceLastDataTransaction();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetTimeSinceLastDataTransaction) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetTimeSinceLastDataTransaction__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_GetTimeSinceLastDataTransaction'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetLastCheckTimeout) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetLastCheckTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetLastCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetLastCheckTimeout();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetNextCheckTimeout__SWIG_0) {
  {
    Csock *arg1 = (Csock *) 0 ;
    time_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_GetNextCheckTimeout(self,iNow);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetNextCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetNextCheckTimeout" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetNextCheckTimeout" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    result = (arg1)->GetNextCheckTimeout(arg2);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetNextCheckTimeout__SWIG_1) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetNextCheckTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetNextCheckTimeout" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (arg1)->GetNextCheckTimeout();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetNextCheckTimeout) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetNextCheckTimeout__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_Csock_GetNextCheckTimeout__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Csock_GetNextCheckTimeout'");
  XSRETURN(0);
}


XS(_wrap_Csock_GetPending) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetPending(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetPending" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (int)(arg1)->GetPending();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetConState) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Csock::ECONState result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetConState(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetConState" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (Csock::ECONState)((Csock const *)arg1)->GetConState();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetConState) {
  {
    Csock *arg1 = (Csock *) 0 ;
    Csock::ECONState arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetConState(self,eState);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetConState" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetConState" "', argument " "2"" of type '" "Csock::ECONState""'");
    } 
    arg2 = static_cast< Csock::ECONState >(val2);
    (arg1)->SetConState(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CreateSocksFD) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_CreateSocksFD(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CreateSocksFD" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->CreateSocksFD();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_CloseSocksFD) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_CloseSocksFD(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_CloseSocksFD" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    (arg1)->CloseSocksFD();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetBindHost) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetBindHost" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (CString *) &((Csock const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetBindHost) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetBindHost(self,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetBindHost" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_DNSLookup) {
  {
    Csock *arg1 = (Csock *) 0 ;
    Csock::EDNSLType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_DNSLookup(self,eDNSLType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_DNSLookup" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_DNSLookup" "', argument " "2"" of type '" "Csock::EDNSLType""'");
    } 
    arg2 = static_cast< Csock::EDNSLType >(val2);
    result = (int)(arg1)->DNSLookup(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetupVHost) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_SetupVHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetupVHost" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)(arg1)->SetupVHost();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetIPv6) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetIPv6(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetIPv6" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (bool)((Csock const *)arg1)->GetIPv6();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetIPv6) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetIPv6(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetIPv6" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetIPv6" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIPv6(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetAFRequire) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CSSockAddr::EAFRequire arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetAFRequire(self,iAFRequire);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetAFRequire" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
    } 
    arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
    (arg1)->SetAFRequire(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_AllowWrite) {
  {
    Csock *arg1 = (Csock *) 0 ;
    uint64_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_AllowWrite(self,iNOW);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_AllowWrite" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_AllowWrite" "', argument " "2"" of type '" "uint64_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_AllowWrite" "', argument " "2"" of type '" "uint64_t &""'"); 
    }
    arg2 = reinterpret_cast< uint64_t * >(argp2);
    result = (bool)((Csock const *)arg1)->AllowWrite(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_SetSkipConnect) {
  {
    Csock *arg1 = (Csock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Csock_SetSkipConnect(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_SetSkipConnect" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Csock_SetSkipConnect" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetSkipConnect(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetAddrInfo) {
  {
    Csock *arg1 = (Csock *) 0 ;
    CString *arg2 = 0 ;
    CSSockAddr *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Csock_GetAddrInfo(self,sHostname,csSockAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetAddrInfo" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_GetAddrInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAddrInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CSSockAddr,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_GetAddrInfo" "', argument " "3"" of type '" "CSSockAddr &""'"); 
    }
    arg3 = reinterpret_cast< CSSockAddr * >(argp3);
    result = (int)(arg1)->GetAddrInfo((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_ConvertAddress) {
  {
    Csock *arg1 = (Csock *) 0 ;
    sockaddr_storage *arg2 = (sockaddr_storage *) 0 ;
    socklen_t arg3 ;
    CString *arg4 = 0 ;
    uint16_t *arg5 = (uint16_t *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Csock_ConvertAddress(self,pAddr,iAddrLen,sIP,piPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_ConvertAddress" "', argument " "1"" of type '" "Csock *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Csock_ConvertAddress" "', argument " "2"" of type '" "sockaddr_storage const *""'"); 
    }
    arg2 = reinterpret_cast< sockaddr_storage * >(argp2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_socklen_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Csock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'");
      } else {
        arg3 = *(reinterpret_cast< socklen_t * >(argp3));
      }
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Csock_ConvertAddress" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Csock_ConvertAddress" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_uint16_t, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Csock_ConvertAddress" "', argument " "5"" of type '" "uint16_t *""'"); 
    }
    arg5 = reinterpret_cast< uint16_t * >(argp5);
    result = (int)(arg1)->ConvertAddress((sockaddr_storage const *)arg2,arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Csock_GetMaxConns) {
  {
    Csock *arg1 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Csock_GetMaxConns(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Csock_GetMaxConns" "', argument " "1"" of type '" "Csock const *""'"); 
    }
    arg1 = reinterpret_cast< Csock * >(argp1);
    result = (int)((Csock const *)arg1)->GetMaxConns();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSConnection__SWIG_0) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CSConnection *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CSConnection(sHostname,iPort,iTimeout);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSConnection" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSConnection" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (CSConnection *)new CSConnection((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSConnection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSConnection__SWIG_1) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    CSConnection *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CSConnection(sHostname,iPort);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSConnection" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSConnection" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (CSConnection *)new CSConnection((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSConnection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSConnection) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSConnection__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSConnection__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CSConnection'");
  XSRETURN(0);
}


XS(_wrap_delete_CSConnection) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSConnection(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSConnection" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetHostname) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetHostname(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetHostname" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (CString *) &((CSConnection const *)arg1)->GetHostname();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetSockName) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetSockName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetSockName" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (CString *) &((CSConnection const *)arg1)->GetSockName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetBindHost) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetBindHost" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (CString *) &((CSConnection const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetPort) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint16_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetPort" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = ((CSConnection const *)arg1)->GetPort();
    ST(argvi) = SWIG_NewPointerObj((new uint16_t(static_cast< const uint16_t& >(result))), SWIGTYPE_p_uint16_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetTimeout) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetTimeout" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (int)((CSConnection const *)arg1)->GetTimeout();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetIsSSL) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetIsSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetIsSSL" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (bool)((CSConnection const *)arg1)->GetIsSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_GetAFRequire) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSSockAddr::EAFRequire result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSConnection_GetAFRequire(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_GetAFRequire" "', argument " "1"" of type '" "CSConnection const *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    result = (CSSockAddr::EAFRequire)((CSConnection const *)arg1)->GetAFRequire();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetHostname) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetHostname(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetHostname" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetHostname" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetHostname" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetHostname((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetSockName) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetSockName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetSockName" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetSockName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetBindHost) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetBindHost(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetBindHost" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetPort) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetPort(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetPort" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSConnection_SetPort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSConnection_SetPort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    (arg1)->SetPort(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetTimeout) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetTimeout(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetTimeout" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetTimeout" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetTimeout(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetIsSSL) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetIsSSL(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetIsSSL" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetIsSSL" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIsSSL(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSConnection_SetAFRequire) {
  {
    CSConnection *arg1 = (CSConnection *) 0 ;
    CSSockAddr::EAFRequire arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSConnection_SetAFRequire(self,iAFRequire);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSConnection_SetAFRequire" "', argument " "1"" of type '" "CSConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSConnection * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSConnection_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
    } 
    arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
    (arg1)->SetAFRequire(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSSSLConnection__SWIG_0) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CSSSLConnection *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CSSSLConnection(sHostname,iPort,iTimeout);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSSSLConnection" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (CSSSLConnection *)new CSSSLConnection((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSSLConnection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSSSLConnection__SWIG_1) {
  {
    CString *arg1 = 0 ;
    uint16_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    CSSSLConnection *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CSSSLConnection(sHostname,iPort);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSSSLConnection" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (CSSSLConnection *)new CSSSLConnection((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSSSLConnection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSSSLConnection) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSSSLConnection__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSSSLConnection__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CSSSLConnection'");
  XSRETURN(0);
}


XS(_wrap_delete_CSSSLConnection) {
  {
    CSSSLConnection *arg1 = (CSSSLConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSSSLConnection(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSSSLConnection, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSSSLConnection" "', argument " "1"" of type '" "CSSSLConnection *""'"); 
    }
    arg1 = reinterpret_cast< CSSSLConnection * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSListener__SWIG_0) {
  {
    uint16_t arg1 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CSListener *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CSListener(iPort,sBindHost,bDetach);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'");
      } else {
        arg1 = *(reinterpret_cast< uint16_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSListener" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (CSListener *)new CSListener(arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSListener__SWIG_1) {
  {
    uint16_t arg1 ;
    CString *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CSListener *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CSListener(iPort,sBindHost);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'");
      } else {
        arg1 = *(reinterpret_cast< uint16_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CSListener *)new CSListener(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSListener__SWIG_2) {
  {
    uint16_t arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CSListener *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CSListener(iPort);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSListener" "', argument " "1"" of type '" "uint16_t""'");
      } else {
        arg1 = *(reinterpret_cast< uint16_t * >(argp1));
      }
    }
    result = (CSListener *)new CSListener(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSListener, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSListener) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSListener__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSListener__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSListener__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CSListener'");
  XSRETURN(0);
}


XS(_wrap_delete_CSListener) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSListener(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSListener" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetDetach) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetDetach(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetDetach" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetDetach" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetDetach(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetDetach) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetDetach(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetDetach" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (bool)((CSListener const *)arg1)->GetDetach();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetPort) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint16_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetPort" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = ((CSListener const *)arg1)->GetPort();
    ST(argvi) = SWIG_NewPointerObj((new uint16_t(static_cast< const uint16_t& >(result))), SWIGTYPE_p_uint16_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetSockName) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetSockName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetSockName" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (CString *) &((CSListener const *)arg1)->GetSockName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetBindHost) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetBindHost" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (CString *) &((CSListener const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetIsSSL) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetIsSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetIsSSL" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (bool)((CSListener const *)arg1)->GetIsSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetMaxConns) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetMaxConns(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetMaxConns" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (int)((CSListener const *)arg1)->GetMaxConns();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetTimeout) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint32_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetTimeout" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = ((CSListener const *)arg1)->GetTimeout();
    ST(argvi) = SWIG_NewPointerObj((new uint32_t(static_cast< const uint32_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_GetAFRequire) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSSockAddr::EAFRequire result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSListener_GetAFRequire(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_GetAFRequire" "', argument " "1"" of type '" "CSListener const *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    result = (CSSockAddr::EAFRequire)((CSListener const *)arg1)->GetAFRequire();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetPort) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetPort(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetPort" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetPort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetPort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    (arg1)->SetPort(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetSockName) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetSockName(self,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetSockName" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetSockName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetSockName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetBindHost) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetBindHost(self,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetBindHost" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetIsSSL) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetIsSSL(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetIsSSL" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetIsSSL" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIsSSL(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetMaxConns) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetMaxConns(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetMaxConns" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetMaxConns" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetMaxConns(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetTimeout) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    uint32_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetTimeout(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetTimeout" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSListener_SetTimeout" "', argument " "2"" of type '" "uint32_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSListener_SetTimeout" "', argument " "2"" of type '" "uint32_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint32_t * >(argp2));
      }
    }
    (arg1)->SetTimeout(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSListener_SetAFRequire) {
  {
    CSListener *arg1 = (CSListener *) 0 ;
    CSSockAddr::EAFRequire arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSListener_SetAFRequire(self,iAFRequire);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSListener_SetAFRequire" "', argument " "1"" of type '" "CSListener *""'"); 
    }
    arg1 = reinterpret_cast< CSListener * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSListener_SetAFRequire" "', argument " "2"" of type '" "CSSockAddr::EAFRequire""'");
    } 
    arg2 = static_cast< CSSockAddr::EAFRequire >(val2);
    (arg1)->SetAFRequire(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSocketManager) {
  {
    int argvi = 0;
    CSocketManager *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CSocketManager();");
    }
    result = (CSocketManager *)new CSocketManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocketManager, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSocketManager) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSocketManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSocketManager" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_clear) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_clear" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Cleanup) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_Cleanup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Cleanup" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    (arg1)->Cleanup();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetSockObj__SWIG_0) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocketManager_GetSockObj(self,sHostname,uPort,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSockObj" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_GetSockObj" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetSockObj__SWIG_1) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_GetSockObj(self,sHostname,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSockObj" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetSockObj) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_GetSockObj__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_GetSockObj__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocketManager_GetSockObj'");
  XSRETURN(0);
}


XS(_wrap_CSocketManager_Connect__SWIG_0) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CSConnection *arg2 = 0 ;
    Csock *arg3 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_Connect(self,cCon,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Connect" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSConnection,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
    }
    arg2 = reinterpret_cast< CSConnection * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Connect" "', argument " "3"" of type '" "Csock *""'"); 
    }
    arg3 = reinterpret_cast< Csock * >(argp3);
    (arg1)->Connect((CSConnection const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Connect__SWIG_1) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CSConnection *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_Connect(self,cCon);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Connect" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSConnection,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Connect" "', argument " "2"" of type '" "CSConnection const &""'"); 
    }
    arg2 = reinterpret_cast< CSConnection * >(argp2);
    (arg1)->Connect((CSConnection const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Connect) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSConnection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSConnection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_Connect__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_Connect__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocketManager_Connect'");
  XSRETURN(0);
}


XS(_wrap_CSocketManager_Listen__SWIG_0) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CSListener *arg2 = 0 ;
    Csock *arg3 = (Csock *) 0 ;
    uint16_t *arg4 = (uint16_t *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocketManager_Listen(self,cListen,pcSock,piRandPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSListener,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    arg2 = reinterpret_cast< CSListener * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Listen" "', argument " "3"" of type '" "Csock *""'"); 
    }
    arg3 = reinterpret_cast< Csock * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_uint16_t, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocketManager_Listen" "', argument " "4"" of type '" "uint16_t *""'"); 
    }
    arg4 = reinterpret_cast< uint16_t * >(argp4);
    result = (bool)(arg1)->Listen((CSListener const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Listen__SWIG_1) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CSListener *arg2 = 0 ;
    Csock *arg3 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_Listen(self,cListen,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSListener,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    arg2 = reinterpret_cast< CSListener * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_Listen" "', argument " "3"" of type '" "Csock *""'"); 
    }
    arg3 = reinterpret_cast< Csock * >(argp3);
    result = (bool)(arg1)->Listen((CSListener const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Listen__SWIG_2) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CSListener *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_Listen(self,cListen);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Listen" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSListener,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_Listen" "', argument " "2"" of type '" "CSListener const &""'"); 
    }
    arg2 = reinterpret_cast< CSListener * >(argp2);
    result = (bool)(arg1)->Listen((CSListener const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Listen) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSListener, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSListener, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSListener, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Csock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_Listen__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_Listen__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_Listen__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocketManager_Listen'");
  XSRETURN(0);
}


XS(_wrap_CSocketManager_HasFDs) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_HasFDs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_HasFDs" "', argument " "1"" of type '" "CSocketManager const *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    result = (bool)((CSocketManager const *)arg1)->HasFDs();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_Loop) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_Loop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_Loop" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    (arg1)->Loop();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_DynamicSelectLoop__SWIG_0) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    uint64_t arg2 ;
    uint64_t arg3 ;
    time_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocketManager_DynamicSelectLoop(self,iLowerBounds,iUpperBounds,iMaxResolution);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "uint64_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "uint64_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint64_t * >(argp3));
      }
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "4"" of type '" "time_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "4"" of type '" "time_t""'");
      } else {
        arg4 = *(reinterpret_cast< time_t * >(argp4));
      }
    }
    (arg1)->DynamicSelectLoop(arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_DynamicSelectLoop__SWIG_1) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    uint64_t arg2 ;
    uint64_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_DynamicSelectLoop(self,iLowerBounds,iUpperBounds);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "uint64_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_DynamicSelectLoop" "', argument " "3"" of type '" "uint64_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint64_t * >(argp3));
      }
    }
    (arg1)->DynamicSelectLoop(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_DynamicSelectLoop) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocketManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint64_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_DynamicSelectLoop__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocketManager_DynamicSelectLoop__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocketManager_DynamicSelectLoop'");
  XSRETURN(0);
}


XS(_wrap_CSocketManager_AddSock) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    Csock *arg2 = (Csock *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_AddSock(self,pcSock,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_AddSock" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_AddSock" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_AddSock" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_AddSock" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddSock(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSockByRemotePort) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSockByRemotePort(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByRemotePort" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSockByRemotePort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSockByRemotePort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (Csock *)(arg1)->FindSockByRemotePort(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSockByLocalPort) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSockByLocalPort(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByLocalPort" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSockByLocalPort" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSockByLocalPort" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (Csock *)(arg1)->FindSockByLocalPort(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSockByName) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSockByName(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByName" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSockByName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSockByName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Csock *)(arg1)->FindSockByName((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSockByFD) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    cs_sock_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSockByFD(self,iFD);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSockByFD" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FindSockByFD" "', argument " "2"" of type '" "cs_sock_t""'");
    } 
    arg2 = static_cast< cs_sock_t >(val2);
    result = (Csock *)(arg1)->FindSockByFD(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSocksByName) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::vector< Csock * > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSocksByName(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSocksByName" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSocksByName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSocksByName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->FindSocksByName((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector< Csock * >(static_cast< const std::vector< Csock * >& >(result))), SWIGTYPE_p_std__vectorT_Csock_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FindSocksByRemoteHost) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::vector< Csock * > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_FindSocksByRemoteHost(self,sHostname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FindSocksByRemoteHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->FindSocksByRemoteHost((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector< Csock * >(static_cast< const std::vector< Csock * >& >(result))), SWIGTYPE_p_std__vectorT_Csock_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetErrno) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_GetErrno(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetErrno" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    result = (int)(arg1)->GetErrno();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetSelectTimeout) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_GetSelectTimeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetSelectTimeout" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    result = (arg1)->GetSelectTimeout();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_SetSelectTimeout) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    uint64_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_SetSelectTimeout(self,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SetSelectTimeout" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint64_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SetSelectTimeout" "', argument " "2"" of type '" "uint64_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_SetSelectTimeout" "', argument " "2"" of type '" "uint64_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint64_t * >(argp2));
      }
    }
    (arg1)->SetSelectTimeout(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_DelSockByAddr) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    Csock *arg2 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_DelSockByAddr(self,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DelSockByAddr" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_DelSockByAddr" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    (arg1)->DelSockByAddr(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_DelSock) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    size_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocketManager_DelSock(self,iPos);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_DelSock" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_DelSock" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
    (arg1)->DelSock(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_SwapSockByIdx) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    Csock *arg2 = (Csock *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_SwapSockByIdx(self,pNewSock,iOrginalSockIdx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocketManager_SwapSockByIdx" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = (bool)(arg1)->SwapSockByIdx(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_SwapSockByAddr) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    Csock *arg2 = (Csock *) 0 ;
    Csock *arg3 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocketManager_SwapSockByAddr(self,pNewSock,pOrigSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "2"" of type '" "Csock *""'"); 
    }
    arg2 = reinterpret_cast< Csock * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_SwapSockByAddr" "', argument " "3"" of type '" "Csock *""'"); 
    }
    arg3 = reinterpret_cast< Csock * >(argp3);
    result = (bool)(arg1)->SwapSockByAddr(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetBytesRead) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_GetBytesRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetBytesRead" "', argument " "1"" of type '" "CSocketManager const *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    result = ((CSocketManager const *)arg1)->GetBytesRead();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_GetBytesWritten) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uint64_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocketManager_GetBytesWritten(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_GetBytesWritten" "', argument " "1"" of type '" "CSocketManager const *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    result = ((CSocketManager const *)arg1)->GetBytesWritten();
    ST(argvi) = SWIG_NewPointerObj((new uint64_t(static_cast< const uint64_t& >(result))), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FDSetCheck) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    int arg2 ;
    std::map< int,short > *arg3 = 0 ;
    CSocketManager::ECheckType arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocketManager_FDSetCheck(self,iFd,miiReadyFds,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FDSetCheck" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FDSetCheck" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_FDSetCheck" "', argument " "3"" of type '" "std::map< int,short > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FDSetCheck" "', argument " "3"" of type '" "std::map< int,short > &""'"); 
    }
    arg3 = reinterpret_cast< std::map< int,short > * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_FDSetCheck" "', argument " "4"" of type '" "CSocketManager::ECheckType""'");
    } 
    arg4 = static_cast< CSocketManager::ECheckType >(val4);
    (arg1)->FDSetCheck(arg2,*arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocketManager_FDHasCheck) {
  {
    CSocketManager *arg1 = (CSocketManager *) 0 ;
    int arg2 ;
    std::map< int,short > *arg3 = 0 ;
    CSocketManager::ECheckType arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocketManager_FDHasCheck(self,iFd,miiReadyFds,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocketManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocketManager_FDHasCheck" "', argument " "1"" of type '" "CSocketManager *""'"); 
    }
    arg1 = reinterpret_cast< CSocketManager * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocketManager_FDHasCheck" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__mapT_int_short_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocketManager_FDHasCheck" "', argument " "3"" of type '" "std::map< int,short > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocketManager_FDHasCheck" "', argument " "3"" of type '" "std::map< int,short > &""'"); 
    }
    arg3 = reinterpret_cast< std::map< int,short > * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocketManager_FDHasCheck" "', argument " "4"" of type '" "CSocketManager::ECheckType""'");
    } 
    arg4 = static_cast< CSocketManager::ECheckType >(val4);
    result = (bool)(arg1)->FDHasCheck(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ZNCSocketManager) {
  {
    int argvi = 0;
    TSocketManager< CZNCSock > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ZNCSocketManager();");
    }
    result = (TSocketManager< CZNCSock > *)new TSocketManager< CZNCSock >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TSocketManagerT_CZNCSock_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ZNCSocketManager) {
  {
    TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ZNCSocketManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ZNCSocketManager" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
    }
    arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ZNCSocketManager_GetSockObj__SWIG_0) {
  {
    TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ZNCSocketManager_GetSockObj(self,sHostname,uPort,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
    }
    arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (CZNCSock *)(arg1)->GetSockObj((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_ZNCSocketManager_GetSockObj__SWIG_1) {
  {
    TSocketManager< CZNCSock > *arg1 = (TSocketManager< CZNCSock > *) 0 ;
    CString *arg2 = 0 ;
    uint16_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ZNCSocketManager_GetSockObj(self,sHostname,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "1"" of type '" "TSocketManager< CZNCSock > *""'"); 
    }
    arg1 = reinterpret_cast< TSocketManager< CZNCSock > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ZNCSocketManager_GetSockObj" "', argument " "3"" of type '" "uint16_t""'");
      } else {
        arg3 = *(reinterpret_cast< uint16_t * >(argp3));
      }
    }
    result = (CZNCSock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_ZNCSocketManager_GetSockObj) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_TSocketManagerT_CZNCSock_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_ZNCSocketManager_GetSockObj__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_ZNCSocketManager_GetSockObj__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ZNCSocketManager_GetSockObj'");
  XSRETURN(0);
}


XS(_wrap_new_CZNCSock__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CZNCSock(timeout);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = (CZNCSock *)new CZNCSock(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNCSock__SWIG_1) {
  {
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CZNCSock();");
    }
    result = (CZNCSock *)new CZNCSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNCSock__SWIG_2) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CZNCSock(sHost,port,timeout);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CZNCSock" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CZNCSock" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (CZNCSock *)new CZNCSock((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNCSock__SWIG_3) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CZNCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CZNCSock(sHost,port);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CZNCSock" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    result = (CZNCSock *)new CZNCSock((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNCSock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CZNCSock__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CZNCSock__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CZNCSock__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CZNCSock__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CZNCSock'");
  XSRETURN(0);
}


XS(_wrap_delete_CZNCSock) {
  {
    CZNCSock *arg1 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CZNCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNCSock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNCSock" "', argument " "1"" of type '" "CZNCSock *""'"); 
    }
    arg1 = reinterpret_cast< CZNCSock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNCSock_ConvertAddress) {
  {
    CZNCSock *arg1 = (CZNCSock *) 0 ;
    sockaddr_storage *arg2 = (sockaddr_storage *) 0 ;
    socklen_t arg3 ;
    CString *arg4 = 0 ;
    unsigned short *arg5 = (unsigned short *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CZNCSock_ConvertAddress(self,pAddr,iAddrLen,sIP,piPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNCSock_ConvertAddress" "', argument " "1"" of type '" "CZNCSock *""'"); 
    }
    arg1 = reinterpret_cast< CZNCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_sockaddr_storage, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNCSock_ConvertAddress" "', argument " "2"" of type '" "sockaddr_storage const *""'"); 
    }
    arg2 = reinterpret_cast< sockaddr_storage * >(argp2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_socklen_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNCSock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCSock_ConvertAddress" "', argument " "3"" of type '" "socklen_t""'");
      } else {
        arg3 = *(reinterpret_cast< socklen_t * >(argp3));
      }
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNCSock_ConvertAddress" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCSock_ConvertAddress" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_unsigned_short, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CZNCSock_ConvertAddress" "', argument " "5"" of type '" "unsigned short *""'"); 
    }
    arg5 = reinterpret_cast< unsigned short * >(argp5);
    result = (int)(arg1)->ConvertAddress((sockaddr_storage const *)arg2,arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSockManager) {
  {
    int argvi = 0;
    CSockManager *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CSockManager();");
    }
    result = (CSockManager *)new CSockManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CSockManager) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSockManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSockManager" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_0) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    int arg6 ;
    CZNCSock *arg7 = (CZNCSock *) 0 ;
    unsigned int arg8 ;
    EAddrType arg9 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    void *argp7 = 0 ;
    int res7 = 0 ;
    unsigned int val8 ;
    int ecode8 = 0 ;
    int val9 ;
    int ecode9 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 9) || (items > 9)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost,bSSL,iMaxConns,pcSock,iTimeout,eAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    res7 = SWIG_ConvertPtr(ST(6), &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
    }
    arg7 = reinterpret_cast< CZNCSock * >(argp7);
    ecode8 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(7), &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenHost" "', argument " "8"" of type '" "unsigned int""'");
    } 
    arg8 = static_cast< unsigned int >(val8);
    ecode9 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(8), &val9);
    if (!SWIG_IsOK(ecode9)) {
      SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "CSockManager_ListenHost" "', argument " "9"" of type '" "EAddrType""'");
    } 
    arg9 = static_cast< EAddrType >(val9);
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7,arg8,arg9);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_1) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    int arg6 ;
    CZNCSock *arg7 = (CZNCSock *) 0 ;
    unsigned int arg8 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    void *argp7 = 0 ;
    int res7 = 0 ;
    unsigned int val8 ;
    int ecode8 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 8) || (items > 8)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost,bSSL,iMaxConns,pcSock,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    res7 = SWIG_ConvertPtr(ST(6), &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
    }
    arg7 = reinterpret_cast< CZNCSock * >(argp7);
    ecode8 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(7), &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenHost" "', argument " "8"" of type '" "unsigned int""'");
    } 
    arg8 = static_cast< unsigned int >(val8);
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7,arg8);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_2) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    int arg6 ;
    CZNCSock *arg7 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    void *argp7 = 0 ;
    int res7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost,bSSL,iMaxConns,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    res7 = SWIG_ConvertPtr(ST(6), &argp7,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_ListenHost" "', argument " "7"" of type '" "CZNCSock *""'"); 
    }
    arg7 = reinterpret_cast< CZNCSock * >(argp7);
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6,arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_3) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    int arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost,bSSL,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenHost" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_4) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenHost" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost__SWIG_5) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockManager_ListenHost(self,iPort,sSockName,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenHost" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenHost" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenHost" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->ListenHost(arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenHost) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(6), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 8) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(6), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(7), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 9) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(6), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(7), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(8), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_5); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_4); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_2); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenHost__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockManager_ListenHost'");
  XSRETURN(0);
}


XS(_wrap_CSockManager_ListenAll__SWIG_0) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    unsigned int arg7 ;
    EAddrType arg8 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    unsigned int val7 ;
    int ecode7 = 0 ;
    int val8 ;
    int ecode8 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 8) || (items > 8)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName,bSSL,iMaxConns,pcSock,iTimeout,eAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAll" "', argument " "7"" of type '" "unsigned int""'");
    } 
    arg7 = static_cast< unsigned int >(val7);
    ecode8 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(7), &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenAll" "', argument " "8"" of type '" "EAddrType""'");
    } 
    arg8 = static_cast< EAddrType >(val8);
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll__SWIG_1) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    unsigned int arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    unsigned int val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName,bSSL,iMaxConns,pcSock,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAll" "', argument " "7"" of type '" "unsigned int""'");
    } 
    arg7 = static_cast< unsigned int >(val7);
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll__SWIG_2) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName,bSSL,iMaxConns,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenAll" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll__SWIG_3) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName,bSSL,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenAll" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll__SWIG_4) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAll" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll__SWIG_5) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSockManager_ListenAll(self,iPort,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAll" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSockManager_ListenAll" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAll" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->ListenAll(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAll) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 8) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(7), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_5); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_4); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_2); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAll__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockManager_ListenAll'");
  XSRETURN(0);
}


XS(_wrap_CSockManager_ListenRand__SWIG_0) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    unsigned int arg7 ;
    EAddrType arg8 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    unsigned int val7 ;
    int ecode7 = 0 ;
    int val8 ;
    int ecode8 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 8) || (items > 8)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost,bSSL,iMaxConns,pcSock,iTimeout,eAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenRand" "', argument " "7"" of type '" "unsigned int""'");
    } 
    arg7 = static_cast< unsigned int >(val7);
    ecode8 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(7), &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "CSockManager_ListenRand" "', argument " "8"" of type '" "EAddrType""'");
    } 
    arg8 = static_cast< EAddrType >(val8);
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand__SWIG_1) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    unsigned int arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    unsigned int val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost,bSSL,iMaxConns,pcSock,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenRand" "', argument " "7"" of type '" "unsigned int""'");
    } 
    arg7 = static_cast< unsigned int >(val7);
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,arg7);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand__SWIG_2) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    CZNCSock *arg6 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost,bSSL,iMaxConns,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CSockManager_ListenRand" "', argument " "6"" of type '" "CZNCSock *""'"); 
    }
    arg6 = reinterpret_cast< CZNCSock * >(argp6);
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand__SWIG_3) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost,bSSL,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_ListenRand" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand__SWIG_4) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenRand" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand__SWIG_5) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSockManager_ListenRand(self,sSockName,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenRand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (unsigned short)(arg1)->ListenRand((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenRand) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 8) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(7), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_5); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_4); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_2); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenRand__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockManager_ListenRand'");
  XSRETURN(0);
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_0) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int arg4 ;
    CZNCSock *arg5 = (CZNCSock *) 0 ;
    unsigned int arg6 ;
    EAddrType arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    unsigned int val6 ;
    int ecode6 = 0 ;
    int val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName,bSSL,iMaxConns,pcSock,iTimeout,eAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
    }
    arg5 = reinterpret_cast< CZNCSock * >(argp5);
    ecode6 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenAllRand" "', argument " "6"" of type '" "unsigned int""'");
    } 
    arg6 = static_cast< unsigned int >(val6);
    ecode7 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CSockManager_ListenAllRand" "', argument " "7"" of type '" "EAddrType""'");
    } 
    arg7 = static_cast< EAddrType >(val7);
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_1) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int arg4 ;
    CZNCSock *arg5 = (CZNCSock *) 0 ;
    unsigned int arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    unsigned int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName,bSSL,iMaxConns,pcSock,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
    }
    arg5 = reinterpret_cast< CZNCSock * >(argp5);
    ecode6 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_ListenAllRand" "', argument " "6"" of type '" "unsigned int""'");
    } 
    arg6 = static_cast< unsigned int >(val6);
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_2) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int arg4 ;
    CZNCSock *arg5 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName,bSSL,iMaxConns,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSockManager_ListenAllRand" "', argument " "5"" of type '" "CZNCSock *""'"); 
    }
    arg5 = reinterpret_cast< CZNCSock * >(argp5);
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_3) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName,bSSL,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSockManager_ListenAllRand" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_4) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_ListenAllRand" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand__SWIG_5) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockManager_ListenAllRand(self,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_ListenAllRand" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_ListenAllRand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (unsigned short)(arg1)->ListenAllRand((CString const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_ListenAllRand) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_5); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_4); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_2); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_ListenAllRand__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockManager_ListenAllRand'");
  XSRETURN(0);
}


XS(_wrap_CSockManager_Connect__SWIG_0) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    int arg5 ;
    bool arg6 ;
    CString *arg7 = 0 ;
    CZNCSock *arg8 = (CZNCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int res7 = SWIG_OLDOBJ ;
    void *argp8 = 0 ;
    int res8 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 8) || (items > 8)) {
      SWIG_croak("Usage: CSockManager_Connect(self,sHostname,iPort,sSockName,iTimeout,bSSL,sBindHost,pcSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    {
      CString *ptr = (CString *)0;
      res7 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(6), &ptr);
      if (!SWIG_IsOK(res7)) {
        SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
      }
      arg7 = ptr;
    }
    res8 = SWIG_ConvertPtr(ST(7), &argp8,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CSockManager_Connect" "', argument " "8"" of type '" "CZNCSock *""'"); 
    }
    arg8 = reinterpret_cast< CZNCSock * >(argp8);
    (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6,(CString const &)*arg7,arg8);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    if (SWIG_IsNewObj(res7)) free((char*)arg7);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    if (SWIG_IsNewObj(res7)) free((char*)arg7);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_Connect__SWIG_1) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    int arg5 ;
    bool arg6 ;
    CString *arg7 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int res7 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CSockManager_Connect(self,sHostname,iPort,sSockName,iTimeout,bSSL,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    {
      CString *ptr = (CString *)0;
      res7 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(6), &ptr);
      if (!SWIG_IsOK(res7)) {
        SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "7"" of type '" "CString const &""'"); 
      }
      arg7 = ptr;
    }
    (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6,(CString const &)*arg7);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    if (SWIG_IsNewObj(res7)) free((char*)arg7);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    if (SWIG_IsNewObj(res7)) free((char*)arg7);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_Connect__SWIG_2) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    int arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSockManager_Connect(self,sHostname,iPort,sSockName,iTimeout,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSockManager_Connect" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5,arg6);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_Connect__SWIG_3) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSockManager_Connect(self,sHostname,iPort,sSockName,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSockManager_Connect" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_Connect__SWIG_4) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSockManager_Connect(self,sHostname,iPort,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_Connect" "', argument " "1"" of type '" "CSockManager *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSockManager_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_Connect" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->Connect((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CSockManager_Connect) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(6), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 8) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSockManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(6), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(7), &vptr, SWIGTYPE_p_CZNCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_Connect__SWIG_4); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_Connect__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_Connect__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_Connect__SWIG_1); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSockManager_Connect__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSockManager_Connect'");
  XSRETURN(0);
}


XS(_wrap_CSockManager_GetAnonConnectionCount) {
  {
    CSockManager *arg1 = (CSockManager *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSockManager_GetAnonConnectionCount(self,sIP);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSockManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "1"" of type '" "CSockManager const *""'"); 
    }
    arg1 = reinterpret_cast< CSockManager * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSockManager_GetAnonConnectionCount" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (unsigned int)((CSockManager const *)arg1)->GetAnonConnectionCount((CString const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSocket__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CSocket(pModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CSocket *)new CSocket(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSocket__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    CSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CSocket(pModule,sHostname,uPort,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSocket" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CSocket" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (CSocket *)new CSocket(arg1,(CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSocket__SWIG_2) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CSocket(pModule,sHostname,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CSocket" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (CSocket *)new CSocket(arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CSocket) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSocket__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSocket__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CSocket__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CSocket'");
  XSRETURN(0);
}


XS(_wrap_delete_CSocket) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CSocket(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CSocket" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Connect__SWIG_0_0) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocket_Connect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    result = (bool)(arg1)->Connect();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_0_0) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    uint32_t arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CSocket_Listen(self,iPort,iMaxConns,sBindHost,iTimeout,bDetach);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSocket_Listen" "', argument " "5"" of type '" "uint32_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "5"" of type '" "uint32_t""'");
      } else {
        arg5 = *(reinterpret_cast< uint32_t * >(argp5));
      }
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CSocket_Listen" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_0_1) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    uint32_t arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSocket_Listen(self,iPort,iMaxConns,sBindHost,iTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_uint32_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CSocket_Listen" "', argument " "5"" of type '" "uint32_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "5"" of type '" "uint32_t""'");
      } else {
        arg5 = *(reinterpret_cast< uint32_t * >(argp5));
      }
    }
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_0_2) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocket_Listen(self,iPort,iMaxConns,sBindHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->Listen(arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_0_3) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    uint16_t arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocket_Listen(self,iPort,iMaxConns);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)(arg1)->Listen(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_0_4) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    uint16_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CSocket_Listen(self,iPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_uint16_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Listen" "', argument " "2"" of type '" "uint16_t""'");
      } else {
        arg2 = *(reinterpret_cast< uint16_t * >(argp2));
      }
    }
    result = (bool)(arg1)->Listen(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_ReachedMaxBuffer) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocket_ReachedMaxBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_ReachedMaxBuffer" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    (arg1)->ReachedMaxBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_SockError) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocket_SockError(self,iErrno,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_SockError" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_SockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CSocket_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->SockError(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_ConnectionFrom) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocket_ConnectionFrom(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_ConnectionFrom" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_ConnectionFrom" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Connect__SWIG_1) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    bool arg4 ;
    unsigned int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    unsigned int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CSocket_Connect(self,sHostname,uPort,bSSL,uTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Connect" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CSocket_Connect" "', argument " "5"" of type '" "unsigned int""'");
    } 
    arg5 = static_cast< unsigned int >(val5);
    result = (bool)(arg1)->Connect((CString const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Connect__SWIG_2) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocket_Connect(self,sHostname,uPort,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Connect" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->Connect((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Connect__SWIG_3) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocket_Connect(self,sHostname,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Connect" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CSocket_Connect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Connect" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (bool)(arg1)->Connect((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Connect) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Connect__SWIG_0_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Connect__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Connect__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Connect__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocket_Connect'");
  XSRETURN(0);
}


XS(_wrap_CSocket_Listen__SWIG_1) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    unsigned short arg2 ;
    bool arg3 ;
    unsigned int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CSocket_Listen(self,uPort,bSSL,uTimeout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CSocket_Listen" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)(arg1)->Listen(arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen__SWIG_2) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    unsigned short arg2 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CSocket_Listen(self,uPort,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_Listen" "', argument " "1"" of type '" "CSocket *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CSocket_Listen" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CSocket_Listen" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->Listen(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CSocket_Listen) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_uint16_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_uint32_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_0_4); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_0_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_0_2); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_0_1); return;
    case 7:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CSocket_Listen__SWIG_0_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CSocket_Listen'");
  XSRETURN(0);
}


XS(_wrap_CSocket_GetModule) {
  {
    CSocket *arg1 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CSocket_GetModule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CSocket_GetModule" "', argument " "1"" of type '" "CSocket const *""'"); 
    }
    arg1 = reinterpret_cast< CSocket * >(argp1);
    result = (CModule *)((CSocket const *)arg1)->GetModule();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CFile__SWIG_0) {
  {
    int argvi = 0;
    CFile *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CFile();");
    }
    result = (CFile *)new CFile();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFile, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CFile__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CFile *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CFile(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CFile" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFile" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CFile *)new CFile((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFile, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CFile__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CFile__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CFile'");
  XSRETURN(0);
}


XS(_wrap_delete_CFile) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CFile(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CFile" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_SetFileName) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_SetFileName(self,sLongName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_SetFileName" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_SetFileName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_SetFileName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetFileName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsReg__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsReg(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsReg" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsReg((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsReg__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsReg(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsReg((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsDir__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsDir(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsDir" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsDir((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsDir__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsDir(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsDir((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsChr__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsChr(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsChr" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsChr((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsChr__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsChr(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsChr((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsBlk__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsBlk(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsBlk" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsBlk((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsBlk__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsBlk(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsBlk((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsFifo__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsFifo(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsFifo" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsFifo((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsFifo__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsFifo(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsFifo((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsLnk__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsLnk(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsLnk" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsLnk((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsLnk__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsLnk(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsLnk((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsSock__SWIG_0) {
  {
    CString *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsSock(sLongName,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsSock" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)CFile::IsSock((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsSock__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsSock(sLongName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::IsSock((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsReg__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsReg(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsReg" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsReg(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsReg__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsReg(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsReg" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsReg();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsReg) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsReg__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsReg__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsReg__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsReg__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsReg'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsDir__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsDir(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsDir" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsDir(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsDir__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsDir" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsDir();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsDir) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsDir__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsDir__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsDir__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsDir__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsDir'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsChr__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsChr(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsChr" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsChr(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsChr__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsChr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsChr" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsChr();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsChr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsChr__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsChr__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsChr__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsChr__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsChr'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsBlk__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsBlk(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsBlk" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsBlk(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsBlk__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsBlk(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsBlk" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsBlk();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsBlk) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsBlk__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsBlk__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsBlk__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsBlk__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsBlk'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsFifo__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsFifo(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsFifo" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsFifo(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsFifo__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsFifo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsFifo" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsFifo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsFifo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsFifo__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsFifo__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsFifo__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsFifo__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsFifo'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsLnk__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsLnk(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsLnk" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsLnk(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsLnk__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsLnk(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsLnk" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsLnk();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsLnk) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsLnk__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsLnk__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsLnk__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsLnk__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsLnk'");
  XSRETURN(0);
}


XS(_wrap_CFile_IsSock__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_IsSock(self,bUseLstat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_IsSock" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)((CFile const *)arg1)->IsSock(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsSock__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsSock" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsSock();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsSock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsSock__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsSock__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsSock__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_IsSock__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_IsSock'");
  XSRETURN(0);
}


XS(_wrap_CFile_FType__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CFile::EFileTypes arg2 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_FType(sFileName,eType,bUseLstat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_FType" "', argument " "2"" of type '" "CFile::EFileTypes""'");
    } 
    arg2 = static_cast< CFile::EFileTypes >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_FType" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)CFile::FType((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_FType__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CFile::EFileTypes arg2 ;
    int res1 = SWIG_OLDOBJ ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_FType(sFileName,eType);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_FType" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_FType" "', argument " "2"" of type '" "CFile::EFileTypes""'");
    } 
    arg2 = static_cast< CFile::EFileTypes >(val2);
    result = (bool)CFile::FType((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_FType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_FType__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_FType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_FType'");
  XSRETURN(0);
}


XS(_wrap_CFile_Exists__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Exists(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Exists" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->Exists();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetSize__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    off_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetSize();
    ST(argvi) = SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetATime__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetATime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetATime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetMTime__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetMTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetCTime__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetCTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetCTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetUID__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    uid_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetUID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetUID();
    ST(argvi) = SWIG_NewPointerObj((new uid_t(static_cast< const uid_t& >(result))), SWIGTYPE_p_uid_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetGID__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    gid_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetGID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetGID();
    ST(argvi) = SWIG_NewPointerObj((new gid_t(static_cast< const gid_t& >(result))), SWIGTYPE_p_gid_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Exists__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Exists(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Exists" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Exists" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::Exists((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Exists) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Exists__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Exists__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Exists'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetSize__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    off_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetSize(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetSize" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetSize((CString const &)*arg1);
    ST(argvi) = SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetSize) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetSize__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetSize__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetSize'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetATime__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetATime(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetATime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetATime((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetATime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetATime__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetATime__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetATime'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetMTime__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetMTime(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetMTime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetMTime((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetMTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetMTime__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetMTime__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetMTime'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetCTime__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetCTime(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetCTime" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetCTime((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetCTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetCTime__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetCTime__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetCTime'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetUID__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    uid_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetUID(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetUID" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetUID((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new uid_t(static_cast< const uid_t& >(result))), SWIGTYPE_p_uid_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetUID) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetUID__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetUID__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetUID'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetGID__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    gid_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetGID(sFile);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetGID" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CFile::GetGID((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new gid_t(static_cast< const gid_t& >(result))), SWIGTYPE_p_gid_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetGID) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetGID__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_GetGID__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_GetGID'");
  XSRETURN(0);
}


XS(_wrap_CFile_GetInfo) {
  {
    CString *arg1 = 0 ;
    stat *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_GetInfo(sFile,st);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_stat,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_GetInfo" "', argument " "2"" of type '" "stat &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_GetInfo" "', argument " "2"" of type '" "stat &""'"); 
    }
    arg2 = reinterpret_cast< stat * >(argp2);
    result = (int)CFile::GetInfo((CString const &)*arg1,*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Delete__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Delete(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Delete" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->Delete();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Move__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Move(self,sNewFileName,bOverwrite);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Move" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->Move((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Move__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Move(self,sNewFileName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Move((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Copy__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Copy(self,sNewFileName,bOverwrite);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Copy" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->Copy((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Copy__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Copy(self,sNewFileName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Copy((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Delete__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Delete(sFileName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CFile::Delete((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Delete) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Delete__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Delete__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Delete'");
  XSRETURN(0);
}


XS(_wrap_CFile_Move__SWIG_2) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Move(sOldFileName,sNewFileName,bOverwrite);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Move" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)CFile::Move((CString const &)*arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Move__SWIG_3) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Move(sOldFileName,sNewFileName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Move" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)CFile::Move((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Move) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Move__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Move__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Move__SWIG_0); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Move__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Move'");
  XSRETURN(0);
}


XS(_wrap_CFile_Copy__SWIG_2) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Copy(sOldFileName,sNewFileName,bOverwrite);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Copy" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)CFile::Copy((CString const &)*arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Copy__SWIG_3) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Copy(sOldFileName,sNewFileName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Copy" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)CFile::Copy((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Copy) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Copy__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Copy__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Copy__SWIG_0); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Copy__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Copy'");
  XSRETURN(0);
}


XS(_wrap_CFile_Chmod__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    mode_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Chmod(self,mode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'");
      } else {
        arg2 = *(reinterpret_cast< mode_t * >(argp2));
      }
    }
    result = (bool)(arg1)->Chmod(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Chmod__SWIG_1) {
  {
    CString *arg1 = 0 ;
    mode_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Chmod(sFile,mode);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Chmod" "', argument " "2"" of type '" "mode_t""'");
      } else {
        arg2 = *(reinterpret_cast< mode_t * >(argp2));
      }
    }
    result = (bool)CFile::Chmod((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Chmod) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Chmod__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Chmod__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Chmod'");
  XSRETURN(0);
}


XS(_wrap_CFile_Seek) {
  {
    CFile *arg1 = (CFile *) 0 ;
    off_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Seek(self,uPos);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Seek" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Seek" "', argument " "2"" of type '" "off_t""'");
    } 
    arg2 = static_cast< off_t >(val2);
    result = (bool)(arg1)->Seek(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Truncate) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Truncate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Truncate" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->Truncate();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Sync) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Sync(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Sync" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->Sync();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    int arg3 ;
    mode_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CFile_Open(self,sFileName,iFlags,iMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Open" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CFile_Open" "', argument " "4"" of type '" "mode_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "4"" of type '" "mode_t""'");
      } else {
        arg4 = *(reinterpret_cast< mode_t * >(argp4));
      }
    }
    result = (bool)(arg1)->Open((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Open(self,sFileName,iFlags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Open" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)(arg1)->Open((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Open(self,sFileName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Open((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_3) {
  {
    CFile *arg1 = (CFile *) 0 ;
    int arg2 ;
    mode_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Open(self,iFlags,iMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Open" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CFile_Open" "', argument " "3"" of type '" "mode_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Open" "', argument " "3"" of type '" "mode_t""'");
      } else {
        arg3 = *(reinterpret_cast< mode_t * >(argp3));
      }
    }
    result = (bool)(arg1)->Open(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_4) {
  {
    CFile *arg1 = (CFile *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Open(self,iFlags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CFile_Open" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(arg1)->Open(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open__SWIG_5) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Open(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Open" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->Open();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Open) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_5); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_4); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_3); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_1); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Open__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Open'");
  XSRETURN(0);
}


XS(_wrap_CFile_Read) {
  {
    CFile *arg1 = (CFile *) 0 ;
    char *arg2 = (char *) 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    ssize_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Read(self,pszBuffer,iBytes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Read" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Read" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Read" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (arg1)->Read(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ReadLine__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_ReadLine(self,sData,sDelimiter);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadLine" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_ReadLine" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadLine" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CFile_ReadLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->ReadLine(*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ReadLine__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_ReadLine(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadLine" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_ReadLine" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadLine" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->ReadLine(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ReadLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_ReadLine__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_ReadLine__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_ReadLine'");
  XSRETURN(0);
}


XS(_wrap_CFile_ReadFile__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_ReadFile(self,sData,iMaxSize);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadFile" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_ReadFile" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadFile" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_ReadFile" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = (bool)(arg1)->ReadFile(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ReadFile__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_ReadFile(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ReadFile" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_ReadFile" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_ReadFile" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->ReadFile(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ReadFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_ReadFile__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_ReadFile__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_ReadFile'");
  XSRETURN(0);
}


XS(_wrap_CFile_Write__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    ssize_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_Write(self,pszBuffer,iBytes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Write" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Write" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_Write" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = (arg1)->Write((char const *)arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Write__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    ssize_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_Write(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Write" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_Write" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_Write" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->Write((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_Write) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Write__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_Write__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_Write'");
  XSRETURN(0);
}


XS(_wrap_CFile_Close) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_Close(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_Close" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    (arg1)->Close();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ClearBuffer) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_ClearBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ClearBuffer" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    (arg1)->ClearBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_TryExLock__SWIG_0) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CFile_TryExLock(self,sLockFile,iFlags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CFile_TryExLock" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)(arg1)->TryExLock((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_TryExLock__SWIG_1) {
  {
    CFile *arg1 = (CFile *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFile_TryExLock(self,sLockFile);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_TryExLock" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->TryExLock((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_TryExLock__SWIG_2) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_TryExLock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_TryExLock" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->TryExLock();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_TryExLock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CFile, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_TryExLock__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_TryExLock__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CFile_TryExLock__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CFile_TryExLock'");
  XSRETURN(0);
}


XS(_wrap_CFile_ExLock) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_ExLock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ExLock" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->ExLock();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_UnLock) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_UnLock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_UnLock" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)(arg1)->UnLock();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_IsOpen) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_IsOpen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_IsOpen" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->IsOpen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetLongName) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetLongName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetLongName" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetLongName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetShortName) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetShortName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetShortName" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetShortName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetDir) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_GetDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_GetDir" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = ((CFile const *)arg1)->GetDir();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_HadError) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_HadError(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_HadError" "', argument " "1"" of type '" "CFile const *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    result = (bool)((CFile const *)arg1)->HadError();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_ResetError) {
  {
    CFile *arg1 = (CFile *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_ResetError(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFile, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_ResetError" "', argument " "1"" of type '" "CFile *""'"); 
    }
    arg1 = reinterpret_cast< CFile * >(argp1);
    (arg1)->ResetError();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_InitHomePath) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CFile_InitHomePath(sFallback);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFile_InitHomePath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CFile_InitHomePath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    CFile::InitHomePath((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CFile_GetHomePath) {
  {
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CFile_GetHomePath();");
    }
    result = (CString *) &CFile::GetHomePath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CDir__SWIG_0) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CDir *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CDir(sDir);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CDir *)new CDir((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDir, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CDir__SWIG_1) {
  {
    int argvi = 0;
    CDir *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CDir();");
    }
    result = (CDir *)new CDir();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDir, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CDir) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CDir__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CDir__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CDir'");
  XSRETURN(0);
}


XS(_wrap_delete_CDir) {
  {
    CDir *arg1 = (CDir *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CDir" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_CleanUp) {
  {
    CDir *arg1 = (CDir *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_CleanUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CleanUp" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    (arg1)->CleanUp();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Fill) {
  {
    CDir *arg1 = (CDir *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_Fill(self,sDir);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Fill" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Fill" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Fill" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->Fill((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_FillByWildcard) {
  {
    CDir *arg1 = (CDir *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CDir_FillByWildcard(self,sDir,sWildcard);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_FillByWildcard" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_FillByWildcard" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_FillByWildcard" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_FillByWildcard" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_FillByWildcard" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->FillByWildcard((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Chmod__SWIG_0) {
  {
    mode_t arg1 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CDir_Chmod(mode,sWildcard,sDir);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'");
      } else {
        arg1 = *(reinterpret_cast< mode_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_Chmod" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (unsigned int)CDir::Chmod(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Chmod__SWIG_1) {
  {
    mode_t arg1 ;
    CString *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_Chmod(mode,sWildcard);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "1"" of type '" "mode_t""'");
      } else {
        arg1 = *(reinterpret_cast< mode_t * >(argp1));
      }
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (unsigned int)CDir::Chmod(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Chmod__SWIG_2) {
  {
    CDir *arg1 = (CDir *) 0 ;
    mode_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_Chmod(self,mode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Chmod" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Chmod" "', argument " "2"" of type '" "mode_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Chmod" "', argument " "2"" of type '" "mode_t""'");
      } else {
        arg2 = *(reinterpret_cast< mode_t * >(argp2));
      }
    }
    result = (unsigned int)(arg1)->Chmod(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Chmod) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CDir, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Chmod__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Chmod__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Chmod__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CDir_Chmod'");
  XSRETURN(0);
}


XS(_wrap_CDir_Delete__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_Delete(sWildcard,sDir);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_Delete" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (unsigned int)CDir::Delete((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Delete__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_Delete(sWildcard);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_Delete" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (unsigned int)CDir::Delete((CString const &)*arg1);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Delete__SWIG_2) {
  {
    CDir *arg1 = (CDir *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_Delete(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_Delete" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    result = (unsigned int)(arg1)->Delete();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_Delete) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CDir, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Delete__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Delete__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_Delete__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CDir_Delete'");
  XSRETURN(0);
}


XS(_wrap_CDir_GetSortAttr) {
  {
    CDir *arg1 = (CDir *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CFile::EFileAttr result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_GetSortAttr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_GetSortAttr" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    result = (CFile::EFileAttr)(arg1)->GetSortAttr();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_IsDescending) {
  {
    CDir *arg1 = (CDir *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_IsDescending(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDir, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_IsDescending" "', argument " "1"" of type '" "CDir *""'"); 
    }
    arg1 = reinterpret_cast< CDir * >(argp1);
    result = (bool)(arg1)->IsDescending();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_CheckPathPrefix__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CDir_CheckPathPrefix(sPath,sAdd,sHomeDir);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_CheckPathPrefix" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = CDir::CheckPathPrefix((CString const &)*arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_CheckPathPrefix__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_CheckPathPrefix(sPath,sAdd);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_CheckPathPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CDir::CheckPathPrefix((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_CheckPathPrefix) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_CheckPathPrefix__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_CheckPathPrefix__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CDir_CheckPathPrefix'");
  XSRETURN(0);
}


XS(_wrap_CDir_ChangeDir__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CDir_ChangeDir(sPath,sAdd,sHomeDir);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CDir_ChangeDir" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = CDir::ChangeDir((CString const &)*arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_ChangeDir__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_ChangeDir(sPath,sAdd);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_ChangeDir" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CDir::ChangeDir((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_ChangeDir) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_ChangeDir__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_ChangeDir__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CDir_ChangeDir'");
  XSRETURN(0);
}


XS(_wrap_CDir_MakeDir__SWIG_0) {
  {
    CString *arg1 = 0 ;
    mode_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CDir_MakeDir(sPath,iMode);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_mode_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CDir_MakeDir" "', argument " "2"" of type '" "mode_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "2"" of type '" "mode_t""'");
      } else {
        arg2 = *(reinterpret_cast< mode_t * >(argp2));
      }
    }
    result = (bool)CDir::MakeDir((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_MakeDir__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDir_MakeDir(sPath);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CDir_MakeDir" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CDir::MakeDir((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CDir_MakeDir) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_mode_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_MakeDir__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CDir_MakeDir__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CDir_MakeDir'");
  XSRETURN(0);
}


XS(_wrap_CDir_GetCWD) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CDir_GetCWD();");
    }
    result = CDir::GetCWD();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTimer) {
  {
    CModule *arg1 = (CModule *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    CTimer *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CTimer(pModule,uInterval,uCycles,sLabel,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CTimer" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CTimer" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (CTimer *)new CTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTimer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CTimer) {
  {
    CTimer *arg1 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTimer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTimer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTimer" "', argument " "1"" of type '" "CTimer *""'"); 
    }
    arg1 = reinterpret_cast< CTimer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTimer_SetModule) {
  {
    CTimer *arg1 = (CTimer *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTimer_SetModule(self,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_SetModule" "', argument " "1"" of type '" "CTimer *""'"); 
    }
    arg1 = reinterpret_cast< CTimer * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTimer_SetModule" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    (arg1)->SetModule(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTimer_SetDescription) {
  {
    CTimer *arg1 = (CTimer *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTimer_SetDescription(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_SetDescription" "', argument " "1"" of type '" "CTimer *""'"); 
    }
    arg1 = reinterpret_cast< CTimer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTimer_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTimer_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDescription((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTimer_GetModule) {
  {
    CTimer *arg1 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTimer_GetModule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_GetModule" "', argument " "1"" of type '" "CTimer const *""'"); 
    }
    arg1 = reinterpret_cast< CTimer * >(argp1);
    result = (CModule *)((CTimer const *)arg1)->GetModule();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTimer_GetDescription) {
  {
    CTimer *arg1 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTimer_GetDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTimer_GetDescription" "', argument " "1"" of type '" "CTimer const *""'"); 
    }
    arg1 = reinterpret_cast< CTimer * >(argp1);
    result = (CString *) &((CTimer const *)arg1)->GetDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CFPTimer) {
  {
    CModule *arg1 = (CModule *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    CFPTimer *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CFPTimer(pModule,uInterval,uCycles,sLabel,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CFPTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CFPTimer" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CFPTimer" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CFPTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFPTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CFPTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CFPTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (CFPTimer *)new CFPTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CFPTimer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CFPTimer) {
  {
    CFPTimer *arg1 = (CFPTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CFPTimer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFPTimer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CFPTimer" "', argument " "1"" of type '" "CFPTimer *""'"); 
    }
    arg1 = reinterpret_cast< CFPTimer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CFPTimer_SetFPCallback) {
  {
    CFPTimer *arg1 = (CFPTimer *) 0 ;
    FPTimer_t arg2 = (FPTimer_t) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CFPTimer_SetFPCallback(self,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CFPTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CFPTimer_SetFPCallback" "', argument " "1"" of type '" "CFPTimer *""'"); 
    }
    arg1 = reinterpret_cast< CFPTimer * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CFPTimer_SetFPCallback" "', argument " "2"" of type '" "FPTimer_t""'"); 
      }
    }
    (arg1)->SetFPCallback(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModInfo__SWIG_0) {
  {
    int argvi = 0;
    CModInfo *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CModInfo();");
    }
    result = (CModInfo *)new CModInfo();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModInfo, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModInfo__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CModInfo::EModuleType arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CModInfo *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CModInfo(sName,sPath,eType);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModInfo" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CModInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CModInfo" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
    } 
    arg3 = static_cast< CModInfo::EModuleType >(val3);
    result = (CModInfo *)new CModInfo((CString const &)*arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModInfo, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModInfo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CModInfo__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CModInfo__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CModInfo'");
  XSRETURN(0);
}


XS(_wrap_delete_CModInfo) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CModInfo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModInfo" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo___lt__) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CModInfo *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo___lt__(self,Info);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo___lt__" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CModInfo,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo___lt__" "', argument " "2"" of type '" "CModInfo const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo___lt__" "', argument " "2"" of type '" "CModInfo const &""'"); 
    }
    arg2 = reinterpret_cast< CModInfo * >(argp2);
    result = (bool)((CModInfo const *)arg1)->operator <((CModInfo const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SupportsType) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CModInfo::EModuleType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SupportsType(self,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SupportsType" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SupportsType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
    } 
    arg2 = static_cast< CModInfo::EModuleType >(val2);
    result = (bool)(arg1)->SupportsType(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_AddType) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CModInfo::EModuleType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_AddType(self,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_AddType" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_AddType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
    } 
    arg2 = static_cast< CModInfo::EModuleType >(val2);
    (arg1)->AddType(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_ModuleTypeToString) {
  {
    CModInfo::EModuleType arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_ModuleTypeToString(eType);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CModInfo_ModuleTypeToString" "', argument " "1"" of type '" "CModInfo::EModuleType""'");
    } 
    arg1 = static_cast< CModInfo::EModuleType >(val1);
    result = CModInfo::ModuleTypeToString(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetName) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetName" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CString *) &((CModInfo const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetPath) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetPath" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CString *) &((CModInfo const *)arg1)->GetPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetDescription) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetDescription" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CString *) &((CModInfo const *)arg1)->GetDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetWikiPage) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetWikiPage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetWikiPage" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CString *) &((CModInfo const *)arg1)->GetWikiPage();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetArgsHelpText) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetArgsHelpText(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetArgsHelpText" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CString *) &((CModInfo const *)arg1)->GetArgsHelpText();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetHasArgs) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetHasArgs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetHasArgs" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (bool)((CModInfo const *)arg1)->GetHasArgs();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetLoader) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModInfo::ModLoader result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetLoader(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetLoader" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CModInfo::ModLoader)((CModInfo const *)arg1)->GetLoader();
    ST(argvi) = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_GetDefaultType) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModInfo::EModuleType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_GetDefaultType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_GetDefaultType" "', argument " "1"" of type '" "CModInfo const *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    result = (CModInfo::EModuleType)((CModInfo const *)arg1)->GetDefaultType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetName) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetName" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetPath) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetPath(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetPath" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetPath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetDescription) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetDescription(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetDescription" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDescription((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetWikiPage) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetWikiPage(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetWikiPage" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetWikiPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetWikiPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetWikiPage((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetArgsHelpText) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetArgsHelpText(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetArgsHelpText" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModInfo_SetArgsHelpText" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModInfo_SetArgsHelpText" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetArgsHelpText((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetHasArgs__SWIG_0) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetHasArgs(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetHasArgs" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SetHasArgs" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetHasArgs(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetHasArgs__SWIG_1) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModInfo_SetHasArgs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetHasArgs" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    (arg1)->SetHasArgs();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetHasArgs) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModInfo, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModInfo, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModInfo_SetHasArgs__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModInfo_SetHasArgs__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModInfo_SetHasArgs'");
  XSRETURN(0);
}


XS(_wrap_CModInfo_SetLoader) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CModInfo::ModLoader arg2 = (CModInfo::ModLoader) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetLoader(self,fLoader);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetLoader" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModInfo_SetLoader" "', argument " "2"" of type '" "CModInfo::ModLoader""'"); 
      }
    }
    (arg1)->SetLoader(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModInfo_SetDefaultType) {
  {
    CModInfo *arg1 = (CModInfo *) 0 ;
    CModInfo::EModuleType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModInfo_SetDefaultType(self,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModInfo, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModInfo_SetDefaultType" "', argument " "1"" of type '" "CModInfo *""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModInfo_SetDefaultType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
    } 
    arg2 = static_cast< CModInfo::EModuleType >(val2);
    (arg1)->SetDefaultType(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModCommand__SWIG_0) {
  {
    int argvi = 0;
    CModCommand *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CModCommand();");
    }
    result = (CModCommand *)new CModCommand();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModCommand__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CModCommand::ModCmdFunc arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModCommand *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CModCommand(sCmd,func,sArgs,sDesc);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModCommand" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      int res = SWIG_ConvertMember(ST(1), SWIG_as_voidptr(&arg2), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "new_CModCommand" "', argument " "2"" of type '" "CModCommand::ModCmdFunc""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CModCommand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CModCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (CModCommand *)new CModCommand((CString const &)*arg1,arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModCommand__SWIG_2) {
  {
    CModCommand *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CModCommand *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CModCommand(other);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CModCommand,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModCommand" "', argument " "1"" of type '" "CModCommand const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModCommand" "', argument " "1"" of type '" "CModCommand const &""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    result = (CModCommand *)new CModCommand((CModCommand const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModCommand) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModCommand, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CModCommand__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CModCommand__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CModCommand__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CModCommand'");
  XSRETURN(0);
}


XS(_wrap_CModCommand_InitHelp) {
  {
    CTable *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModCommand_InitHelp(Table);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CTable,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_InitHelp" "', argument " "1"" of type '" "CTable &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_InitHelp" "', argument " "1"" of type '" "CTable &""'"); 
    }
    arg1 = reinterpret_cast< CTable * >(argp1);
    CModCommand::InitHelp(*arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_AddHelp) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    CTable *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModCommand_AddHelp(self,Table);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_AddHelp" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTable,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModCommand_AddHelp" "', argument " "2"" of type '" "CTable &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_AddHelp" "', argument " "2"" of type '" "CTable &""'"); 
    }
    arg2 = reinterpret_cast< CTable * >(argp2);
    ((CModCommand const *)arg1)->AddHelp(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_GetCommand) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModCommand_GetCommand(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetCommand" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    result = (CString *) &((CModCommand const *)arg1)->GetCommand();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_GetFunction) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModCommand::ModCmdFunc result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModCommand_GetFunction(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetFunction" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    result = (CModCommand::ModCmdFunc)((CModCommand const *)arg1)->GetFunction();
    ST(argvi) = SWIG_NewMemberObj(SWIG_as_voidptr(&result), sizeof(CModCommand::ModCmdFunc), SWIGTYPE_m_CModule__f_r_q_const__CString__void); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_GetArgs) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModCommand_GetArgs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetArgs" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    result = (CString *) &((CModCommand const *)arg1)->GetArgs();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_GetDescription) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModCommand_GetDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_GetDescription" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    result = (CString *) &((CModCommand const *)arg1)->GetDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModCommand_Call) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModCommand_Call(self,pMod,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModCommand_Call" "', argument " "1"" of type '" "CModCommand const *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModCommand_Call" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModCommand_Call" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModCommand_Call" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ((CModCommand const *)arg1)->Call(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CModCommand) {
  {
    CModCommand *arg1 = (CModCommand *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CModCommand(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModCommand, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModCommand" "', argument " "1"" of type '" "CModCommand *""'"); 
    }
    arg1 = reinterpret_cast< CModCommand * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModule) {
  {
    ModHandle arg1 = (ModHandle) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    CIRCNetwork *arg3 = (CIRCNetwork *) 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    int res1 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CModule(pDLL,pUser,pNetwork,sModName,sDataDir);");
    }
    res1 = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&arg1), 0, 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CModule" "', argument " "1"" of type '" "ModHandle""'"); 
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CModule" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CModule" "', argument " "3"" of type '" "CIRCNetwork *""'"); 
    }
    arg3 = reinterpret_cast< CIRCNetwork * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CModule" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModule" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CModule" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CModule" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (CModule *)new CModule(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CModule) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CModule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModule" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetUser) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetUser(self,pUser);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetUser" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->SetUser(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetNetwork) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNetwork" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->SetNetwork(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetClient) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetClient(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetClient" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetClient" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->SetClient(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_Unload) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_Unload(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_Unload" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->Unload();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnLoad) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnLoad(self,sArgsi,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnLoad" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnLoad" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnLoad" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnLoad" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnLoad" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnLoad((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnBoot) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnBoot(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnBoot" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)(arg1)->OnBoot();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_WebRequiresLogin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_WebRequiresLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_WebRequiresLogin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)(arg1)->WebRequiresLogin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_WebRequiresAdmin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_WebRequiresAdmin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_WebRequiresAdmin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)(arg1)->WebRequiresAdmin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetWebMenuTitle) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetWebMenuTitle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebMenuTitle" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (arg1)->GetWebMenuTitle();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetWebPath) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetWebPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebPath" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (arg1)->GetWebPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetWebFilesPath) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetWebFilesPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetWebFilesPath" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (arg1)->GetWebFilesPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnWebPreRequest) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnWebPreRequest(self,WebSock,sPageName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnWebPreRequest" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnWebPreRequest(*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnWebRequest) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    CTemplate *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnWebRequest(self,WebSock,sPageName,Tmpl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnWebRequest" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    arg4 = reinterpret_cast< CTemplate * >(argp4);
    result = (bool)(arg1)->OnWebRequest(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddSubPage) {
  {
    CModule *arg1 = (CModule *) 0 ;
    SwigValueWrapper< CSmartPtr< CWebSubPage > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_AddSubPage(self,spSubPage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddSubPage" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddSubPage" "', argument " "2"" of type '" "TWebSubPage""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddSubPage" "', argument " "2"" of type '" "TWebSubPage""'");
      } else {
        arg2 = *(reinterpret_cast< TWebSubPage * >(argp2));
      }
    }
    (arg1)->AddSubPage(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ClearSubPages) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_ClearSubPages(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearSubPages" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->ClearSubPages();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetSubPages) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    VWebSubPages *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetSubPages(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetSubPages" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (VWebSubPages *) &(arg1)->GetSubPages();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnEmbeddedWebRequest) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    CTemplate *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnEmbeddedWebRequest(self,WebSock,sPageName,Tmpl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    arg4 = reinterpret_cast< CTemplate * >(argp4);
    result = (bool)(arg1)->OnEmbeddedWebRequest(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPreRehash) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnPreRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPreRehash" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnPreRehash();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPostRehash) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnPostRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPostRehash" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnPostRehash();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnIRCDisconnected) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnIRCDisconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCDisconnected" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnIRCDisconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnIRCConnected) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnIRCConnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnected" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnIRCConnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnIRCConnecting) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnIRCConnecting(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnecting" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    result = (CModule::EModRet)(arg1)->OnIRCConnecting(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnIRCConnectionError) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnIRCConnectionError(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCConnectionError" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    (arg1)->OnIRCConnectionError(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnIRCRegistration) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnIRCRegistration(self,sPass,sNick,sIdent,sRealName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnIRCRegistration" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (CModule::EModRet)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnBroadcast) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnBroadcast(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnBroadcast" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnBroadcast(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanPermission) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    unsigned char arg5 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    unsigned char val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CModule_OnChanPermission(self,OpNick,Nick,Channel,uMode,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanPermission" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
    } 
    arg5 = static_cast< unsigned char >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModule_OnChanPermission" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModule_OnChanPermission" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    (arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnOp) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnOp(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnOp" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnOp" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnDeop) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnDeop(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDeop" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnDeop" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnVoice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnVoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnVoice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnVoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnDevoice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnDevoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDevoice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_OnDevoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnMode) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    char arg4 ;
    CString *arg5 = 0 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    char val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CModule_OnMode(self,OpNick,Channel,uMode,sArg,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnMode" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    ecode4 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnMode" "', argument " "4"" of type '" "char""'");
    } 
    arg4 = static_cast< char >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModule_OnMode" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModule_OnMode" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    (arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
    ST(argvi) = sv_newmortal();
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnRawMode) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnRawMode(self,OpNick,Channel,sModes,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnRawMode" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    (arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnRaw) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnRaw" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnRaw(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnStatusCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnStatusCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnStatusCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnStatusCommand(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnModCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnModCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModCommand((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUnknownModCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnUnknownModCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUnknownModCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUnknownModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUnknownModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnUnknownModCommand((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnModNotice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnModNotice(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModNotice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModNotice((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnModCTCP) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnModCTCP(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModCTCP" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModCTCP((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnQuit) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnQuit(self,Nick,sMessage,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnQuit" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CModule_OnQuit. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CModule_OnQuit. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CModule_OnQuit. "
          "Expected an array of " "CChan");
      }
    }
    (arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnNick) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnNick(self,Nick,sNewNick,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnNick" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CModule_OnNick. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CModule_OnNick. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CModule_OnNick. "
          "Expected an array of " "CChan");
      }
    }
    (arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnKick) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CChan *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnKick(self,OpNick,sKickedNick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnKick" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    (arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnJoin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnJoin(self,Nick,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnJoin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    (arg1)->OnJoin((CNick const &)*arg2,*arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPart) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnPart(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPart" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnInvite) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnInvite(self,Nick,sChan);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnInvite" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (CModule::EModRet)(arg1)->OnInvite((CNick const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanBufferStarting) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnChanBufferStarting(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferStarting" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (CModule::EModRet)(arg1)->OnChanBufferStarting(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanBufferEnding) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnChanBufferEnding(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferEnding" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (CModule::EModRet)(arg1)->OnChanBufferEnding(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanBufferPlayLine) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnChanBufferPlayLine(self,Chan,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPrivBufferPlayLine) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnPrivBufferPlayLine(self,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnClientLogin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnClientLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientLogin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnClientLogin();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnClientDisconnect) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_OnClientDisconnect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientDisconnect" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->OnClientDisconnect();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserRaw) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnUserRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserRaw" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnUserRaw(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserCTCPReply) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserCTCPReply(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserCTCPReply" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserCTCP) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserCTCP(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserCTCP" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserAction) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserAction(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserAction" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserMsg) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserMsg(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserMsg" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserNotice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserNotice(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserNotice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserJoin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserJoin(self,sChannel,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserJoin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserJoin(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserPart) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserPart(self,sChannel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserPart" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserPart(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserTopic) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUserTopic(self,sChannel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserTopic" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserTopic(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUserTopicRequest) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnUserTopicRequest(self,sChannel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUserTopicRequest" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnUserTopicRequest(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnCTCPReply) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnCTCPReply(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnCTCPReply" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPrivCTCP) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnPrivCTCP(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivCTCP" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanCTCP) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnChanCTCP(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanCTCP" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPrivAction) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnPrivAction(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivAction" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanAction) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnChanAction(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanAction" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPrivMsg) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnPrivMsg(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivMsg" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanMsg) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnChanMsg(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanMsg" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnPrivNotice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnPrivNotice(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnPrivNotice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnChanNotice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnChanNotice(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnChanNotice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnTopic) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnTopic(self,Nick,Channel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnTopic" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnTopic(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnServerCapAvailable) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnServerCapAvailable(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnServerCapAvailable" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnServerCapResult) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnServerCapResult(self,sCap,bSuccess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnServerCapResult" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->OnServerCapResult((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnTimerAutoJoin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CChan *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnTimerAutoJoin(self,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnTimerAutoJoin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    result = (CModule::EModRet)(arg1)->OnTimerAutoJoin(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnAddNetwork) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnAddNetwork(self,Network,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnAddNetwork" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnAddNetwork(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnDeleteNetwork) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnDeleteNetwork(self,Network);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDeleteNetwork" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (CModule::EModRet)(arg1)->OnDeleteNetwork(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetDLL) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    ModHandle result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetDLL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetDLL" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (ModHandle)(arg1)->GetDLL();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetCoreVersion) {
  {
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CModule_GetCoreVersion();");
    }
    result = (double)CModule::GetCoreVersion();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutIRC) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutIRC(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutIRC" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutIRC((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutUser) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutUser(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutUser" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutUser((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutStatus) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutStatus(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutStatus" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutStatus((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutModule__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutModule(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModule" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutModule((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutModule__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CTable *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutModule(self,table);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModule" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTable,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CTable const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModule" "', argument " "2"" of type '" "CTable const &""'"); 
    }
    arg2 = reinterpret_cast< CTable * >(argp2);
    result = (unsigned int)(arg1)->PutModule((CTable const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_PutModule) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_PutModule__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_PutModule__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_PutModule'");
  XSRETURN(0);
}


XS(_wrap_CModule_PutModNotice) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_PutModNotice(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_PutModNotice" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutModNotice((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetModName) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetModName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModName" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetModName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetModNick) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetModNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModNick" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = ((CModule const *)arg1)->GetModNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetModDataDir) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetModDataDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModDataDir" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetModDataDir();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddTimer__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CTimer *arg2 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_AddTimer(self,pTimer);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "CTimer *""'"); 
    }
    arg2 = reinterpret_cast< CTimer * >(argp2);
    result = (bool)(arg1)->AddTimer(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddTimer__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    FPTimer_t arg2 = (FPTimer_t) 0 ;
    CString *arg3 = 0 ;
    unsigned int arg4 ;
    unsigned int arg5 ;
    CString *arg6 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    unsigned int val5 ;
    int ecode5 = 0 ;
    int res6 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CModule_AddTimer(self,pFBCallback,sLabel,uInterval,uCycles,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    ecode5 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_AddTimer" "', argument " "5"" of type '" "unsigned int""'");
    } 
    arg5 = static_cast< unsigned int >(val5);
    {
      CString *ptr = (CString *)0;
      res6 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(5), &ptr);
      if (!SWIG_IsOK(res6)) {
        SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModule_AddTimer" "', argument " "6"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "6"" of type '" "CString const &""'"); 
      }
      arg6 = ptr;
    }
    result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4,arg5,(CString const &)*arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    if (SWIG_IsNewObj(res6)) free((char*)arg6);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    if (SWIG_IsNewObj(res6)) free((char*)arg6);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddTimer__SWIG_2) {
  {
    CModule *arg1 = (CModule *) 0 ;
    FPTimer_t arg2 = (FPTimer_t) 0 ;
    CString *arg3 = 0 ;
    unsigned int arg4 ;
    unsigned int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    unsigned int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_AddTimer(self,pFBCallback,sLabel,uInterval,uCycles);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    ecode5 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModule_AddTimer" "', argument " "5"" of type '" "unsigned int""'");
    } 
    arg5 = static_cast< unsigned int >(val5);
    result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddTimer__SWIG_3) {
  {
    CModule *arg1 = (CModule *) 0 ;
    FPTimer_t arg2 = (FPTimer_t) 0 ;
    CString *arg3 = 0 ;
    unsigned int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_AddTimer(self,pFBCallback,sLabel,uInterval);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      int res = SWIG_ConvertFunctionPtr(ST(1), (void**)(&arg2), SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddTimer" "', argument " "2"" of type '" "FPTimer_t""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddTimer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_AddTimer" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)(arg1)->AddTimer(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddTimer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CTimer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *ptr = 0;
        int res = SWIG_ConvertFunctionPtr(ST(1), &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *ptr = 0;
        int res = SWIG_ConvertFunctionPtr(ST(1), &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *ptr = 0;
        int res = SWIG_ConvertFunctionPtr(ST(1), &ptr, SWIGTYPE_p_f_p_CModule_p_CFPTimer__void);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(5), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddTimer__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddTimer__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddTimer__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddTimer__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_AddTimer'");
  XSRETURN(0);
}


XS(_wrap_CModule_RemTimer__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CTimer *arg2 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_RemTimer(self,pTimer);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CTimer *""'"); 
    }
    arg2 = reinterpret_cast< CTimer * >(argp2);
    result = (bool)(arg1)->RemTimer(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_RemTimer__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_RemTimer(self,sLabel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemTimer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->RemTimer((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_RemTimer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CTimer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_RemTimer__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_RemTimer__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_RemTimer'");
  XSRETURN(0);
}


XS(_wrap_CModule_UnlinkTimer) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CTimer *arg2 = (CTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_UnlinkTimer(self,pTimer);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_UnlinkTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CTimer, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_UnlinkTimer" "', argument " "2"" of type '" "CTimer *""'"); 
    }
    arg2 = reinterpret_cast< CTimer * >(argp2);
    result = (bool)(arg1)->UnlinkTimer(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_FindTimer) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CTimer *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_FindTimer(self,sLabel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindTimer" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindTimer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindTimer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CTimer *)(arg1)->FindTimer((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTimer, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_BeginTimers) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::set< CTimer * >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_BeginTimers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginTimers" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = ((CModule const *)arg1)->BeginTimers();
    ST(argvi) = SWIG_NewPointerObj((new std::set< CTimer * >::const_iterator(static_cast< const std::set< CTimer * >::const_iterator& >(result))), SWIGTYPE_p_std__setT_CTimer_p_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_EndTimers) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::set< CTimer * >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_EndTimers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndTimers" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = ((CModule const *)arg1)->EndTimers();
    ST(argvi) = SWIG_NewPointerObj((new std::set< CTimer * >::const_iterator(static_cast< const std::set< CTimer * >::const_iterator& >(result))), SWIGTYPE_p_std__setT_CTimer_p_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ListTimers) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_ListTimers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ListTimers" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->ListTimers();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddSocket) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CSocket *arg2 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_AddSocket(self,pSocket);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddSocket" "', argument " "2"" of type '" "CSocket *""'"); 
    }
    arg2 = reinterpret_cast< CSocket * >(argp2);
    result = (bool)(arg1)->AddSocket(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_RemSocket__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CSocket *arg2 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_RemSocket(self,pSocket);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CSocket *""'"); 
    }
    arg2 = reinterpret_cast< CSocket * >(argp2);
    result = (bool)(arg1)->RemSocket(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_RemSocket__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_RemSocket(self,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->RemSocket((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_RemSocket) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSocket, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_RemSocket__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_RemSocket__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_RemSocket'");
  XSRETURN(0);
}


XS(_wrap_CModule_UnlinkSocket) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CSocket *arg2 = (CSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_UnlinkSocket(self,pSocket);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_UnlinkSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CSocket, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_UnlinkSocket" "', argument " "2"" of type '" "CSocket *""'"); 
    }
    arg2 = reinterpret_cast< CSocket * >(argp2);
    result = (bool)(arg1)->UnlinkSocket(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_FindSocket) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_FindSocket(self,sSockName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindSocket" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindSocket" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CSocket *)(arg1)->FindSocket((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSocket, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_BeginSockets) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::set< CSocket * >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_BeginSockets(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginSockets" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = ((CModule const *)arg1)->BeginSockets();
    ST(argvi) = SWIG_NewPointerObj((new std::set< CSocket * >::const_iterator(static_cast< const std::set< CSocket * >::const_iterator& >(result))), SWIGTYPE_p_std__setT_CSocket_p_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_EndSockets) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::set< CSocket * >::const_iterator > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_EndSockets(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndSockets" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = ((CModule const *)arg1)->EndSockets();
    ST(argvi) = SWIG_NewPointerObj((new std::set< CSocket * >::const_iterator(static_cast< const std::set< CSocket * >::const_iterator& >(result))), SWIGTYPE_p_std__setT_CSocket_p_t__const_iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ListSockets) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_ListSockets(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ListSockets" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->ListSockets();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddHelpCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_AddHelpCommand(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->AddHelpCommand();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddCommand__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CModCommand *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_AddCommand(self,Command);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CModCommand,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CModCommand const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CModCommand const &""'"); 
    }
    arg2 = reinterpret_cast< CModCommand * >(argp2);
    result = (bool)(arg1)->AddCommand((CModCommand const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddCommand__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CModCommand::ModCmdFunc arg3 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_AddCommand(self,sCmd,func,sArgs,sDesc);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      int res = SWIG_ConvertMember(ST(2), SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_AddCommand" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddCommand__SWIG_2) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CModCommand::ModCmdFunc arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_AddCommand(self,sCmd,func,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      int res = SWIG_ConvertMember(ST(2), SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
      }
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddCommand__SWIG_3) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CModCommand::ModCmdFunc arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_AddCommand(self,sCmd,func);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_AddCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_AddCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      int res = SWIG_ConvertMember(ST(2), SWIG_as_voidptr(&arg3), sizeof(CModCommand::ModCmdFunc),SWIGTYPE_m_CModule__f_r_q_const__CString__void);
      if (!SWIG_IsOK(res)) {
        SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CModule_AddCommand" "', argument " "3"" of type '" "CModCommand::ModCmdFunc""'"); 
      }
    }
    result = (bool)(arg1)->AddCommand((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_AddCommand) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CModCommand, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_m_CModule__f_r_q_const__CString__void, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddCommand__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddCommand__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddCommand__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_AddCommand__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_AddCommand'");
  XSRETURN(0);
}


XS(_wrap_CModule_RemCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_RemCommand(self,sCmd);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_RemCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_RemCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_RemCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->RemCommand((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_FindCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModCommand *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_FindCommand(self,sCmd);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindCommand" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CModCommand *)((CModule const *)arg1)->FindCommand((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModCommand, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_HandleCommand) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_HandleCommand(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_HandleCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_HandleCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->HandleCommand((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_HandleHelpCommand__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_HandleHelpCommand(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_HandleHelpCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_HandleHelpCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->HandleHelpCommand((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_HandleHelpCommand__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_HandleHelpCommand(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_HandleHelpCommand" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    (arg1)->HandleHelpCommand();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_HandleHelpCommand) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_HandleHelpCommand__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_HandleHelpCommand__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_HandleHelpCommand'");
  XSRETURN(0);
}


XS(_wrap_CModule_LoadRegistry) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_LoadRegistry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_LoadRegistry" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)(arg1)->LoadRegistry();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SaveRegistry) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_SaveRegistry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SaveRegistry" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)((CModule const *)arg1)->SaveRegistry();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetNV__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_SetNV(self,sName,sValue,bWriteToDisk);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_SetNV" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->SetNV((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetNV__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_SetNV(self,sName,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetNV" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->SetNV((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetNV) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_SetNV__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_SetNV__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_SetNV'");
  XSRETURN(0);
}


XS(_wrap_CModule_GetNV) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_GetNV(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetNV" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_GetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_GetNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CModule const *)arg1)->GetNV((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_DelNV__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_DelNV(self,sName,bWriteToDisk);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_DelNV" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->DelNV((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_DelNV__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_DelNV(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->DelNV((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_FindNV) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    MCString::iterator result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_FindNV(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_FindNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_FindNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_FindNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->FindNV((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_EndNV) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    MCString::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_EndNV(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_EndNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (arg1)->EndNV();
    ST(argvi) = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_BeginNV) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    MCString::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_BeginNV(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_BeginNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (arg1)->BeginNV();
    ST(argvi) = SWIG_NewPointerObj((new MCString::iterator(static_cast< const MCString::iterator& >(result))), SWIGTYPE_p_MCString__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_DelNV__SWIG_2) {
  {
    CModule *arg1 = (CModule *) 0 ;
    MCString::iterator arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_DelNV(self,it);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_DelNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_MCString__iterator,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_DelNV" "', argument " "2"" of type '" "MCString::iterator""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_DelNV" "', argument " "2"" of type '" "MCString::iterator""'");
      } else {
        arg2 = *(reinterpret_cast< MCString::iterator * >(argp2));
      }
    }
    (arg1)->DelNV(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_DelNV) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_MCString__iterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_DelNV__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_DelNV__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_DelNV__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_DelNV'");
  XSRETURN(0);
}


XS(_wrap_CModule_ClearNV__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_ClearNV(self,bWriteToDisk);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModule_ClearNV" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(arg1)->ClearNV(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ClearNV__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_ClearNV(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ClearNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (bool)(arg1)->ClearNV();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ClearNV) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_ClearNV__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_ClearNV__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_ClearNV'");
  XSRETURN(0);
}


XS(_wrap_CModule_GetSavePath) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetSavePath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetSavePath" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetSavePath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ExpandString__SWIG_0) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_ExpandString(self,sStr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ExpandString" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CModule const *)arg1)->ExpandString((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ExpandString__SWIG_1) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_ExpandString(self,sStr,sRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ExpandString" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CString *) &((CModule const *)arg1)->ExpandString((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ExpandString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_ExpandString__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModule_ExpandString__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModule_ExpandString'");
  XSRETURN(0);
}


XS(_wrap_CModule_SetType) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CModInfo::EModuleType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetType(self,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetType" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModule_SetType" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
    } 
    arg2 = static_cast< CModInfo::EModuleType >(val2);
    (arg1)->SetType(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetDescription) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetDescription(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetDescription" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetDescription" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDescription((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetModPath) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetModPath(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetModPath" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetModPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetModPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetModPath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_SetArgs) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_SetArgs(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_SetArgs" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_SetArgs" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_SetArgs" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetArgs((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetType) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModInfo::EModuleType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetType" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CModInfo::EModuleType)((CModule const *)arg1)->GetType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetDescription) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetDescription" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetArgs) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetArgs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetArgs" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetArgs();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetModPath) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetModPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetModPath" "', argument " "1"" of type '" "CModule const *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CString *) &((CModule const *)arg1)->GetModPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetUser) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetUser" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CUser *)(arg1)->GetUser();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetNetwork) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetNetwork" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CIRCNetwork *)(arg1)->GetNetwork();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetClient) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CClient *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetClient(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetClient" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CClient *)(arg1)->GetClient();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_GetManager) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSockManager *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule_GetManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_GetManager" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CSockManager *)(arg1)->GetManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnAddUser) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CUser *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnAddUser(self,User,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnAddUser" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnAddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnAddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnAddUser(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnDeleteUser) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnDeleteUser(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnDeleteUser" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    result = (CModule::EModRet)(arg1)->OnDeleteUser(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnClientConnect) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CZNCSock *arg2 = (CZNCSock *) 0 ;
    CString *arg3 = 0 ;
    unsigned short arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned short val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnClientConnect(self,pSock,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientConnect" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientConnect" "', argument " "2"" of type '" "CZNCSock *""'"); 
    }
    arg2 = reinterpret_cast< CZNCSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnClientConnect" "', argument " "4"" of type '" "unsigned short""'");
    } 
    arg4 = static_cast< unsigned short >(val4);
    (arg1)->OnClientConnect(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnLoginAttempt) {
  {
    CModule *arg1 = (CModule *) 0 ;
    SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_OnLoginAttempt(self,Auth);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnLoginAttempt" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
      } else {
        arg2 = *(reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2));
      }
    }
    result = (CModule::EModRet)(arg1)->OnLoginAttempt(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnFailedLogin) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnFailedLogin(self,sUsername,sRemoteIP);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnFailedLogin" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->OnFailedLogin((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnUnknownUserRaw) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnUnknownUserRaw(self,pClient,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnUnknownUserRaw" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnUnknownUserRaw" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnUnknownUserRaw" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnUnknownUserRaw" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUnknownUserRaw(arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnClientCapLs) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    SCString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnClientCapLs(self,pClient,ssCaps);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientCapLs" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientCapLs" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_SCString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
    }
    arg3 = reinterpret_cast< SCString * >(argp3);
    (arg1)->OnClientCapLs(arg2,*arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_IsClientCapSupported) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_IsClientCapSupported(self,pClient,sCap,bState);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_IsClientCapSupported" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_IsClientCapSupported" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_IsClientCapSupported" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->IsClientCapSupported(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnClientCapRequest) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnClientCapRequest(self,pClient,sCap,bState);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnClientCapRequest" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnClientCapRequest" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnClientCapRequest" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    (arg1)->OnClientCapRequest(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnModuleLoading) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CModInfo::EModuleType arg4 ;
    bool *arg5 = 0 ;
    CString *arg6 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CModule_OnModuleLoading(self,sModName,sArgs,eType,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModuleLoading" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModule_OnModuleLoading" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
    } 
    arg4 = static_cast< CModInfo::EModuleType >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
    }
    arg5 = reinterpret_cast< bool * >(argp5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModule_OnModuleLoading" "', argument " "6"" of type '" "CString &""'"); 
    }
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleLoading" "', argument " "6"" of type '" "CString &""'"); 
    }
    arg6 = reinterpret_cast< CString * >(argp6);
    result = (CModule::EModRet)(arg1)->OnModuleLoading((CString const &)*arg2,(CString const &)*arg3,arg4,*arg5,*arg6);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnModuleUnloading) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    bool *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModule_OnModuleUnloading(self,pModule,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnModuleUnloading" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnModuleUnloading" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
    }
    arg3 = reinterpret_cast< bool * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnModuleUnloading" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnModuleUnloading" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnModuleUnloading(arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnGetModInfo) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CModInfo *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModule_OnGetModInfo(self,ModInfo,sModule,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnGetModInfo" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CModInfo,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
    }
    arg2 = reinterpret_cast< CModInfo * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
    }
    arg4 = reinterpret_cast< bool * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModule_OnGetModInfo" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetModInfo" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (CModule::EModRet)(arg1)->OnGetModInfo(*arg2,(CString const &)*arg3,*arg4,*arg5);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_OnGetAvailableMods) {
  {
    CModule *arg1 = (CModule *) 0 ;
    std::set< CModInfo > *arg2 = 0 ;
    CModInfo::EModuleType arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModule_OnGetAvailableMods(self,ssMods,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_OnGetAvailableMods" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_CModInfo_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_OnGetAvailableMods" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_OnGetAvailableMods" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    arg2 = reinterpret_cast< std::set< CModInfo > * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModule_OnGetAvailableMods" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
    } 
    arg3 = static_cast< CModInfo::EModuleType >(val3);
    (arg1)->OnGetAvailableMods(*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule__GetNVKeys) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::list< CString > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModule__GetNVKeys(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule__GetNVKeys" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = CModule__GetNVKeys(arg1);
    {
      std::list<CString>::const_iterator i;
      unsigned int j;
      int len = (&result)->size();
      SV **svs = new SV*[len];
      for (i=(&result)->begin(), j=0; i!=(&result)->end(); i++, j++) {
        svs[j] = sv_newmortal();
        SwigSvFromString(svs[j], *i);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModule_ExistsNV) {
  {
    CModule *arg1 = (CModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModule_ExistsNV(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModule_ExistsNV" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModule_ExistsNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModule_ExistsNV" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)CModule_ExistsNV(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CModules) {
  {
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CModules();");
    }
    result = (CModules *)new CModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CModules) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CModules" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_SetUser) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_SetUser(self,pUser);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetUser" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->SetUser(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_SetNetwork) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_SetNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetNetwork" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->SetNetwork(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_SetClient) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_SetClient(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_SetClient" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_SetClient" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->SetClient(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetUser) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetUser" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (CUser *)(arg1)->GetUser();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetNetwork) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_GetNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetNetwork" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (CIRCNetwork *)(arg1)->GetNetwork();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetClient) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CClient *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_GetClient(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetClient" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (CClient *)(arg1)->GetClient();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_UnloadAll) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_UnloadAll(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadAll" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    (arg1)->UnloadAll();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnBoot) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnBoot(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnBoot" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnBoot();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPreRehash) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnPreRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPreRehash" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnPreRehash();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPostRehash) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnPostRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPostRehash" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnPostRehash();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnIRCDisconnected) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnIRCDisconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCDisconnected" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnIRCDisconnected();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnIRCConnected) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnIRCConnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnected" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnIRCConnected();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnIRCConnecting) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnIRCConnecting(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnecting" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    result = (bool)(arg1)->OnIRCConnecting(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnIRCConnectionError) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnIRCConnectionError(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCConnectionError" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    result = (bool)(arg1)->OnIRCConnectionError(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnIRCRegistration) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnIRCRegistration(self,sPass,sNick,sIdent,sRealName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnIRCRegistration" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnBroadcast) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnBroadcast(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnBroadcast" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->OnBroadcast(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanPermission) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    unsigned char arg5 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    unsigned char val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CModules_OnChanPermission(self,OpNick,Nick,Channel,uMode,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanPermission" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
    } 
    arg5 = static_cast< unsigned char >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModules_OnChanPermission" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModules_OnChanPermission" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    result = (bool)(arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnOp) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnOp(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnOp" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnOp" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnDeop) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnDeop(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDeop" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnDeop" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnVoice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnVoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnVoice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnVoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnDevoice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnDevoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDevoice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CModules_OnDevoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnRawMode) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnRawMode(self,OpNick,Channel,sModes,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnRawMode" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnMode) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    char arg4 ;
    CString *arg5 = 0 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    char val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CModules_OnMode(self,OpNick,Channel,uMode,sArg,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnMode" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    ecode4 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnMode" "', argument " "4"" of type '" "char""'");
    } 
    arg4 = static_cast< char >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CModules_OnMode" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CModules_OnMode" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    result = (bool)(arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnRaw) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnRaw" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->OnRaw(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnStatusCommand) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnStatusCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnStatusCommand" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->OnStatusCommand(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnModCommand) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnModCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModCommand" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnModCommand((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnModNotice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnModNotice(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModNotice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnModNotice((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnModCTCP) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnModCTCP(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModCTCP" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnModCTCP((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnQuit) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnQuit(self,Nick,sMessage,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnQuit" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CModules_OnQuit. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CModules_OnQuit. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CModules_OnQuit. "
          "Expected an array of " "CChan");
      }
    }
    result = (bool)(arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnNick) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnNick(self,Nick,sNewNick,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnNick" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CModules_OnNick. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CModules_OnNick. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CModules_OnNick. "
          "Expected an array of " "CChan");
      }
    }
    result = (bool)(arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnKick) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CChan *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnKick(self,Nick,sOpNick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnKick" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnJoin) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnJoin(self,Nick,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnJoin" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    result = (bool)(arg1)->OnJoin((CNick const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPart) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnPart(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPart" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnInvite) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnInvite(self,Nick,sChan);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnInvite" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnInvite" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnInvite" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnInvite((CNick const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanBufferStarting) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnChanBufferStarting(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferStarting" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->OnChanBufferStarting(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanBufferEnding) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnChanBufferEnding(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferEnding" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->OnChanBufferEnding(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanBufferPlayLine) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnChanBufferPlayLine(self,Chan,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPrivBufferPlayLine) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnPrivBufferPlayLine(self,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnClientLogin) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnClientLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientLogin" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnClientLogin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnClientDisconnect) {
  {
    CModules *arg1 = (CModules *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_OnClientDisconnect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientDisconnect" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    result = (bool)(arg1)->OnClientDisconnect();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserRaw) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnUserRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserRaw" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->OnUserRaw(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserCTCPReply) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserCTCPReply(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserCTCPReply" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserCTCP) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserCTCP(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserCTCP" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserAction) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserAction(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserAction" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserMsg) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserMsg(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserMsg" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserNotice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserNotice(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserNotice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserJoin) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserJoin(self,sChannel,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserJoin" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserJoin(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserPart) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserPart(self,sChannel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserPart" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserPart(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserTopic) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUserTopic(self,sChannel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserTopic" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUserTopic(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUserTopicRequest) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnUserTopicRequest(self,sChannel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUserTopicRequest" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->OnUserTopicRequest(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnCTCPReply) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnCTCPReply(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnCTCPReply" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPrivCTCP) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnPrivCTCP(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivCTCP" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanCTCP) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnChanCTCP(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanCTCP" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPrivAction) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnPrivAction(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivAction" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanAction) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnChanAction(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanAction" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPrivMsg) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnPrivMsg(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivMsg" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanMsg) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnChanMsg(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanMsg" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnPrivNotice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnPrivNotice(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnPrivNotice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnChanNotice) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnChanNotice(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnChanNotice" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnTopic) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnTopic(self,Nick,Channel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnTopic" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnTopic(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnTimerAutoJoin) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CChan *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnTimerAutoJoin(self,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnTimerAutoJoin" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    result = (bool)(arg1)->OnTimerAutoJoin(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnAddNetwork) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnAddNetwork(self,Network,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnAddNetwork" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnAddNetwork(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnDeleteNetwork) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnDeleteNetwork(self,Network);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDeleteNetwork" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (bool)(arg1)->OnDeleteNetwork(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnServerCapAvailable) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnServerCapAvailable(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnServerCapAvailable" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnServerCapResult) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnServerCapResult(self,sCap,bSuccess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnServerCapResult" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModules_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->OnServerCapResult((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_FindModule) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_FindModule(self,sModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_FindModule" "', argument " "1"" of type '" "CModules const *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CModule *)((CModules const *)arg1)->FindModule((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_LoadModule) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CModInfo::EModuleType arg4 ;
    CUser *arg5 = (CUser *) 0 ;
    CIRCNetwork *arg6 = (CIRCNetwork *) 0 ;
    CString *arg7 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    void *argp7 = 0 ;
    int res7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CModules_LoadModule(self,sModule,sArgs,eType,pUser,pNetwork,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_LoadModule" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_LoadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_LoadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_LoadModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_LoadModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_LoadModule" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
    } 
    arg4 = static_cast< CModInfo::EModuleType >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_LoadModule" "', argument " "5"" of type '" "CUser *""'"); 
    }
    arg5 = reinterpret_cast< CUser * >(argp5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModules_LoadModule" "', argument " "6"" of type '" "CIRCNetwork *""'"); 
    }
    arg6 = reinterpret_cast< CIRCNetwork * >(argp6);
    res7 = SWIG_ConvertPtr(ST(6), &argp7, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CModules_LoadModule" "', argument " "7"" of type '" "CString &""'"); 
    }
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_LoadModule" "', argument " "7"" of type '" "CString &""'"); 
    }
    arg7 = reinterpret_cast< CString * >(argp7);
    result = (bool)(arg1)->LoadModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,arg6,*arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_UnloadModule__SWIG_0) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_UnloadModule(self,sModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadModule" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->UnloadModule((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_UnloadModule__SWIG_1) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_UnloadModule(self,sModule,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_UnloadModule" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_UnloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_UnloadModule" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_UnloadModule" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->UnloadModule((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_UnloadModule) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModules, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CModules, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModules_UnloadModule__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModules_UnloadModule__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CModules_UnloadModule'");
  XSRETURN(0);
}


XS(_wrap_CModules_ReloadModule) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CUser *arg4 = (CUser *) 0 ;
    CIRCNetwork *arg5 = (CIRCNetwork *) 0 ;
    CString *arg6 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CModules_ReloadModule(self,sModule,sArgs,pUser,pNetwork,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_ReloadModule" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_ReloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_ReloadModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_ReloadModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_ReloadModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_ReloadModule" "', argument " "4"" of type '" "CUser *""'"); 
    }
    arg4 = reinterpret_cast< CUser * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_ReloadModule" "', argument " "5"" of type '" "CIRCNetwork *""'"); 
    }
    arg5 = reinterpret_cast< CIRCNetwork * >(argp5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModules_ReloadModule" "', argument " "6"" of type '" "CString &""'"); 
    }
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_ReloadModule" "', argument " "6"" of type '" "CString &""'"); 
    }
    arg6 = reinterpret_cast< CString * >(argp6);
    result = (bool)(arg1)->ReloadModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5,*arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetModInfo) {
  {
    CModInfo *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_GetModInfo(ModInfo,sModule,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CModInfo,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetModInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_GetModInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_GetModInfo" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModInfo" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)CModules::GetModInfo(*arg1,(CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetModPathInfo) {
  {
    CModInfo *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_GetModPathInfo(ModInfo,sModule,sModPath,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CModInfo,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetModPathInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "1"" of type '" "CModInfo &""'"); 
    }
    arg1 = reinterpret_cast< CModInfo * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_GetModPathInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_GetModPathInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_GetModPathInfo" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetModPathInfo" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)CModules::GetModPathInfo(*arg1,(CString const &)*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetAvailableMods__SWIG_0) {
  {
    std::set< CModInfo > *arg1 = 0 ;
    CModInfo::EModuleType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_GetAvailableMods(ssMods,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_CModInfo_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "std::set< CModInfo > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "std::set< CModInfo > &""'"); 
    }
    arg1 = reinterpret_cast< std::set< CModInfo > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CModules_GetAvailableMods" "', argument " "2"" of type '" "CModInfo::EModuleType""'");
    } 
    arg2 = static_cast< CModInfo::EModuleType >(val2);
    CModules::GetAvailableMods(*arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetAvailableMods__SWIG_1) {
  {
    std::set< CModInfo > *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CModules_GetAvailableMods(ssMods);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_CModInfo_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "std::set< CModInfo > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_GetAvailableMods" "', argument " "1"" of type '" "std::set< CModInfo > &""'"); 
    }
    arg1 = reinterpret_cast< std::set< CModInfo > * >(argp1);
    CModules::GetAvailableMods(*arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetAvailableMods) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_CModInfo_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_CModInfo_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModules_GetAvailableMods__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CModules_GetAvailableMods__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CModules_GetAvailableMods'");
  XSRETURN(0);
}


XS(_wrap_CModules_FindModPath) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_FindModPath(sModule,sModPath,sDataPath);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_FindModPath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModPath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_FindModPath" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModPath" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_FindModPath" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_FindModPath" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)CModules::FindModPath((CString const &)*arg1,*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_GetModDirs) {
  {
    int argvi = 0;
    SwigValueWrapper< std::queue< std::pair< CString,CString > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CModules_GetModDirs();");
    }
    result = CModules::GetModDirs();
    ST(argvi) = SWIG_NewPointerObj((new CModules::ModDirList(static_cast< const CModules::ModDirList& >(result))), SWIGTYPE_p_std__queueT_std__pairT_CString_CString_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnAddUser) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CUser *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnAddUser(self,User,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnAddUser" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnAddUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnAddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnAddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnAddUser(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnDeleteUser) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnDeleteUser(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnDeleteUser" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnDeleteUser" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    result = (bool)(arg1)->OnDeleteUser(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnClientConnect) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CZNCSock *arg2 = (CZNCSock *) 0 ;
    CString *arg3 = 0 ;
    unsigned short arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned short val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnClientConnect(self,pSock,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientConnect" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CZNCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientConnect" "', argument " "2"" of type '" "CZNCSock *""'"); 
    }
    arg2 = reinterpret_cast< CZNCSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientConnect" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnClientConnect" "', argument " "4"" of type '" "unsigned short""'");
    } 
    arg4 = static_cast< unsigned short >(val4);
    result = (bool)(arg1)->OnClientConnect(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnLoginAttempt) {
  {
    CModules *arg1 = (CModules *) 0 ;
    SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_OnLoginAttempt(self,Auth);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnLoginAttempt" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnLoginAttempt" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
      } else {
        arg2 = *(reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2));
      }
    }
    result = (bool)(arg1)->OnLoginAttempt(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnFailedLogin) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnFailedLogin(self,sUsername,sRemoteIP);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnFailedLogin" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnFailedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnFailedLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnFailedLogin((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnUnknownUserRaw) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnUnknownUserRaw(self,pClient,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnUnknownUserRaw" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnUnknownUserRaw" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnUnknownUserRaw" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnUnknownUserRaw" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnUnknownUserRaw(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnClientCapLs) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    SCString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnClientCapLs(self,pClient,ssCaps);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientCapLs" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientCapLs" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_SCString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientCapLs" "', argument " "3"" of type '" "SCString &""'"); 
    }
    arg3 = reinterpret_cast< SCString * >(argp3);
    result = (bool)(arg1)->OnClientCapLs(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_IsClientCapSupported) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_IsClientCapSupported(self,pClient,sCap,bState);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_IsClientCapSupported" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_IsClientCapSupported" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_IsClientCapSupported" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_IsClientCapSupported" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->IsClientCapSupported(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnClientCapRequest) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnClientCapRequest(self,pClient,sCap,bState);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnClientCapRequest" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnClientCapRequest" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnClientCapRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnClientCapRequest" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->OnClientCapRequest(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnModuleLoading) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CModInfo::EModuleType arg4 ;
    bool *arg5 = 0 ;
    CString *arg6 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CModules_OnModuleLoading(self,sModName,sArgs,eType,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModuleLoading" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CModules_OnModuleLoading" "', argument " "4"" of type '" "CModInfo::EModuleType""'");
    } 
    arg4 = static_cast< CModInfo::EModuleType >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "5"" of type '" "bool &""'"); 
    }
    arg5 = reinterpret_cast< bool * >(argp5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CModules_OnModuleLoading" "', argument " "6"" of type '" "CString &""'"); 
    }
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleLoading" "', argument " "6"" of type '" "CString &""'"); 
    }
    arg6 = reinterpret_cast< CString * >(argp6);
    result = (bool)(arg1)->OnModuleLoading((CString const &)*arg2,(CString const &)*arg3,arg4,*arg5,*arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnModuleUnloading) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    bool *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CModules_OnModuleUnloading(self,pModule,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnModuleUnloading" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnModuleUnloading" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleUnloading" "', argument " "3"" of type '" "bool &""'"); 
    }
    arg3 = reinterpret_cast< bool * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnModuleUnloading" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnModuleUnloading" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnModuleUnloading(arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnGetModInfo) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CModInfo *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CModules_OnGetModInfo(self,ModInfo,sModule,bSuccess,sRetMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnGetModInfo" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CModInfo,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "2"" of type '" "CModInfo &""'"); 
    }
    arg2 = reinterpret_cast< CModInfo * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CModules_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_bool,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CModules_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "4"" of type '" "bool &""'"); 
    }
    arg4 = reinterpret_cast< bool * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CModules_OnGetModInfo" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetModInfo" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->OnGetModInfo(*arg2,(CString const &)*arg3,*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_OnGetAvailableMods) {
  {
    CModules *arg1 = (CModules *) 0 ;
    std::set< CModInfo > *arg2 = 0 ;
    CModInfo::EModuleType arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CModules_OnGetAvailableMods(self,ssMods,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_OnGetAvailableMods" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_CModInfo_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_OnGetAvailableMods" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CModules_OnGetAvailableMods" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    arg2 = reinterpret_cast< std::set< CModInfo > * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CModules_OnGetAvailableMods" "', argument " "3"" of type '" "CModInfo::EModuleType""'");
    } 
    arg3 = static_cast< CModInfo::EModuleType >(val3);
    result = (bool)(arg1)->OnGetAvailableMods(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_push_back) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_push_back(self,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_push_back" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_push_back" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    CModules_push_back(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CModules_removeModule) {
  {
    CModules *arg1 = (CModules *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CModules_removeModule(self,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModules, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CModules_removeModule" "', argument " "1"" of type '" "CModules *""'"); 
    }
    arg1 = reinterpret_cast< CModules * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CModules_removeModule" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    result = (bool)CModules_removeModule(arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CNick__SWIG_0) {
  {
    int argvi = 0;
    CNick *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CNick();");
    }
    result = (CNick *)new CNick();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CNick__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CNick *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CNick(sNick);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CNick" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CNick" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CNick *)new CNick((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CNick__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CNick__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CNick'");
  XSRETURN(0);
}


XS(_wrap_delete_CNick) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CNick" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_Reset) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_Reset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Reset" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    (arg1)->Reset();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_Parse) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_Parse(self,sNickMask);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Parse" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_Parse" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_Parse" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->Parse((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetHostMask) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetHostMask(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetHostMask" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = ((CNick const *)arg1)->GetHostMask();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetCommonChans) {
  {
    CNick *arg1 = (CNick *) 0 ;
    std::vector< CChan * > *arg2 = 0 ;
    CIRCNetwork *arg3 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CNick_GetCommonChans(self,vChans,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetCommonChans" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorT_CChan_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_GetCommonChans" "', argument " "2"" of type '" "std::vector< CChan * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_GetCommonChans" "', argument " "2"" of type '" "std::vector< CChan * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector< CChan * > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CNick_GetCommonChans" "', argument " "3"" of type '" "CIRCNetwork *""'"); 
    }
    arg3 = reinterpret_cast< CIRCNetwork * >(argp3);
    result = ((CNick const *)arg1)->GetCommonChans(*arg2,arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_NickEquals) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_NickEquals(self,nickname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_NickEquals" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_NickEquals" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_NickEquals" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CNick const *)arg1)->NickEquals((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_SetNetwork) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_SetNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetNetwork" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->SetNetwork(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_SetNick) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_SetNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetNick" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_SetIdent) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_SetIdent(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetIdent" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetIdent((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_SetHost) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_SetHost(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_SetHost" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_SetHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_SetHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_AddPerm) {
  {
    CNick *arg1 = (CNick *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_AddPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_AddPerm" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_AddPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)(arg1)->AddPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_RemPerm) {
  {
    CNick *arg1 = (CNick *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_RemPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_RemPerm" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_RemPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)(arg1)->RemPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetPermStr) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetPermStr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetPermStr" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = ((CNick const *)arg1)->GetPermStr();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetPermChar) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned char result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetPermChar(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetPermChar" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = (unsigned char)((CNick const *)arg1)->GetPermChar();
    ST(argvi) = SWIG_From_unsigned_SS_char  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned char >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_HasPerm) {
  {
    CNick *arg1 = (CNick *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_HasPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_HasPerm" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CNick_HasPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)((CNick const *)arg1)->HasPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetNick) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetNick" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = (CString *) &((CNick const *)arg1)->GetNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetIdent) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetIdent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetIdent" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = (CString *) &((CNick const *)arg1)->GetIdent();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetHost) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetHost" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = (CString *) &((CNick const *)arg1)->GetHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_GetNickMask) {
  {
    CNick *arg1 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CNick_GetNickMask(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_GetNickMask" "', argument " "1"" of type '" "CNick const *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    result = ((CNick const *)arg1)->GetNickMask();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CNick_Clone) {
  {
    CNick *arg1 = (CNick *) 0 ;
    CNick *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CNick_Clone(self,SourceNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CNick_Clone" "', argument " "1"" of type '" "CNick *""'"); 
    }
    arg1 = reinterpret_cast< CNick * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CNick_Clone" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CNick_Clone" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    (arg1)->Clone((CNick const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CChan__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    bool arg3 ;
    CConfig *arg4 = (CConfig *) 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CChan *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CChan(sName,pNetwork,bInConfig,pConfig);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CChan" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CChan" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CChan" "', argument " "4"" of type '" "CConfig *""'"); 
    }
    arg4 = reinterpret_cast< CConfig * >(argp4);
    result = (CChan *)new CChan((CString const &)*arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CChan__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CChan *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CChan(sName,pNetwork,bInConfig);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CChan" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CChan" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CChan" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (CChan *)new CChan((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CChan) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CChan__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CChan__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CChan'");
  XSRETURN(0);
}


XS(_wrap_delete_CChan) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CChan(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CChan" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_Reset) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_Reset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Reset" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->Reset();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ToConfig) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfig result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_ToConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ToConfig" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (arg1)->ToConfig();
    ST(argvi) = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_Clone) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CChan *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_Clone(self,chan);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Clone" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_Clone" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_Clone" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    (arg1)->Clone(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_Cycle) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_Cycle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Cycle" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ((CChan const *)arg1)->Cycle();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_JoinUser__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CChan_JoinUser(self,bForce,sKey,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_JoinUser" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    (arg1)->JoinUser(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_JoinUser__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_JoinUser(self,bForce,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_JoinUser" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->JoinUser(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_JoinUser__SWIG_2) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_JoinUser(self,bForce);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_JoinUser" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->JoinUser(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_JoinUser__SWIG_3) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_JoinUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_JoinUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->JoinUser();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_JoinUser) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_JoinUser__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_JoinUser__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_JoinUser__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_JoinUser__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_JoinUser'");
  XSRETURN(0);
}


XS(_wrap_CChan_DetachUser) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_DetachUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_DetachUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->DetachUser();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AttachUser) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_AttachUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AttachUser" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->AttachUser();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_OnWho) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CChan_OnWho(self,sNick,sIdent,sHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_OnWho" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_OnWho" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_OnWho" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_OnWho" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_OnWho" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->OnWho((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetModes) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetModes(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetModes" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetModes((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ModeChange__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    CNick *arg3 = (CNick *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_ModeChange(self,sModes,OpNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ModeChange" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CNick, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_ModeChange" "', argument " "3"" of type '" "CNick const *""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    (arg1)->ModeChange((CString const &)*arg2,(CNick const *)arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ModeChange__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_ModeChange(self,sModes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ModeChange" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ModeChange" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ModeChange((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ModeChange) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CNick, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_ModeChange__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_ModeChange__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_ModeChange'");
  XSRETURN(0);
}


XS(_wrap_CChan_AddMode) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_AddMode(self,uMode,sArg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddMode" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_AddMode" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddMode" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddMode" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->AddMode(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_RemMode) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_RemMode(self,uMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemMode" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_RemMode" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)(arg1)->RemMode(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModeString) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetModeString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeString" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetModeString();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModeArg__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_GetModeArg(self,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeArg" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_GetModeArg" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_GetModeArg" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = ((CChan const *)arg1)->GetModeArg(*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModeForNames) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetModeForNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeForNames" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetModeForNames();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ClearNicks) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_ClearNicks(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ClearNicks" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->ClearNicks();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_FindNick__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CNick *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_FindNick(self,sNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_FindNick" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CNick *)((CChan const *)arg1)->FindNick((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_FindNick__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CNick *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_FindNick(self,sNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_FindNick" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_FindNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CNick *)(arg1)->FindNick((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_FindNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_FindNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_FindNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_FindNick'");
  XSRETURN(0);
}


XS(_wrap_CChan_AddNicks) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_AddNicks(self,sNicks);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddNicks" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddNicks" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddNicks" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)(arg1)->AddNicks((CString const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AddNick) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_AddNick(self,sNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddNick" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->AddNick((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_RemNick) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_RemNick(self,sNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemNick" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_RemNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_RemNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->RemNick((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ChangeNick) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_ChangeNick(self,sOldNick,sNewNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ChangeNick" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_ChangeNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ChangeNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_ChangeNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_ChangeNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->ChangeNick((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetBuffer) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CBuffer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetBuffer" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CBuffer *) &((CChan const *)arg1)->GetBuffer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetBufferCount) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetBufferCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetBufferCount" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (unsigned int)((CChan const *)arg1)->GetBufferCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetBufferCount__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned int arg2 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_SetBufferCount(self,u,bForce);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetBufferCount" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CChan_SetBufferCount" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->SetBufferCount(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetBufferCount__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetBufferCount(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetBufferCount" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(arg1)->SetBufferCount(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetBufferCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_SetBufferCount__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_SetBufferCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_SetBufferCount'");
  XSRETURN(0);
}


XS(_wrap_CChan_AddBuffer__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    timeval *arg4 = (timeval *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CChan_AddBuffer(self,sFormat,sText,ts);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_timeval, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CChan_AddBuffer" "', argument " "4"" of type '" "timeval const *""'"); 
    }
    arg4 = reinterpret_cast< timeval * >(argp4);
    result = (arg1)->AddBuffer((CString const &)*arg2,(CString const &)*arg3,(timeval const *)arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AddBuffer__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CChan_AddBuffer(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->AddBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AddBuffer__SWIG_2) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_AddBuffer(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_AddBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->AddBuffer((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AddBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_timeval, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_AddBuffer__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_AddBuffer__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_AddBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_AddBuffer'");
  XSRETURN(0);
}


XS(_wrap_CChan_ClearBuffer) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_ClearBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ClearBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->ClearBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SendBuffer) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SendBuffer(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SendBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SendBuffer" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->SendBuffer(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetPermStr) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetPermStr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetPermStr" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetPermStr();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_HasPerm) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_HasPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_HasPerm" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_HasPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)((CChan const *)arg1)->HasPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AddPerm) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_AddPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AddPerm" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_AddPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)(arg1)->AddPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_RemPerm) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_RemPerm(self,uPerm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_RemPerm" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_RemPerm" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)(arg1)->RemPerm(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetModeKnown) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetModeKnown(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetModeKnown" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetModeKnown" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetModeKnown(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetIsOn) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetIsOn(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetIsOn" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetIsOn" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIsOn(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetKey) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetKey(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetKey" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetKey" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetKey" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetKey((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetTopic) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetTopic(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopic" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetTopic" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetTopic" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetTopic((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetTopicOwner) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetTopicOwner(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopicOwner" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetTopicOwner" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetTopicOwner" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetTopicOwner((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetTopicDate) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetTopicDate(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetTopicDate" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetTopicDate" "', argument " "2"" of type '" "unsigned long""'");
    } 
    arg2 = static_cast< unsigned long >(val2);
    (arg1)->SetTopicDate(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetDefaultModes) {
  {
    CChan *arg1 = (CChan *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetDefaultModes(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDefaultModes" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CChan_SetDefaultModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CChan_SetDefaultModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDefaultModes((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetAutoClearChanBuffer) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetAutoClearChanBuffer(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetAutoClearChanBuffer" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetAutoClearChanBuffer" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAutoClearChanBuffer(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetDetached__SWIG_0) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetDetached(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDetached" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetDetached" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetDetached(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetDetached__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_SetDetached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetDetached" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->SetDetached();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetDetached) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_SetDetached__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_SetDetached__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_SetDetached'");
  XSRETURN(0);
}


XS(_wrap_CChan_SetInConfig) {
  {
    CChan *arg1 = (CChan *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetInConfig(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetInConfig" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetInConfig" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetInConfig(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_SetCreationDate) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_SetCreationDate(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_SetCreationDate" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_SetCreationDate" "', argument " "2"" of type '" "unsigned long""'");
    } 
    arg2 = static_cast< unsigned long >(val2);
    (arg1)->SetCreationDate(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_Disable) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_Disable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Disable" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->Disable();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_Enable) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_Enable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_Enable" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->Enable();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_IncJoinTries) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_IncJoinTries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IncJoinTries" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->IncJoinTries();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_ResetJoinTries) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_ResetJoinTries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_ResetJoinTries" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    (arg1)->ResetJoinTries();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_IsModeKnown) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_IsModeKnown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsModeKnown" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->IsModeKnown();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_HasMode) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_HasMode(self,uMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_HasMode" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_HasMode" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (bool)((CChan const *)arg1)->HasMode(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetOptions) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetOptions(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetOptions" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetOptions();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModeArg__SWIG_1) {
  {
    CChan *arg1 = (CChan *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CChan_GetModeArg(self,uMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModeArg" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CChan_GetModeArg" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = ((CChan const *)arg1)->GetModeArg(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModeArg) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_GetModeArg__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CChan_GetModeArg__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CChan_GetModeArg'");
  XSRETURN(0);
}


XS(_wrap_CChan_GetPermCounts) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< char,unsigned int > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetPermCounts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetPermCounts" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetPermCounts();
    ST(argvi) = SWIG_NewPointerObj((new std::map< char,unsigned int >(static_cast< const std::map< char,unsigned int >& >(result))), SWIGTYPE_p_std__mapT_char_unsigned_int_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_IsOn) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_IsOn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsOn" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->IsOn();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetName) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetName" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CString *) &((CChan const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetModes) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< unsigned char,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetModes" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (std::map< unsigned char,CString > *) &((CChan const *)arg1)->GetModes();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_unsigned_char_CString_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetKey) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetKey(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetKey" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CString *) &((CChan const *)arg1)->GetKey();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetTopic) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetTopic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopic" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CString *) &((CChan const *)arg1)->GetTopic();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetTopicOwner) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetTopicOwner(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopicOwner" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CString *) &((CChan const *)arg1)->GetTopicOwner();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetTopicDate) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetTopicDate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetTopicDate" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (unsigned long)((CChan const *)arg1)->GetTopicDate();
    ST(argvi) = SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetDefaultModes) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetDefaultModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetDefaultModes" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (CString *) &((CChan const *)arg1)->GetDefaultModes();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetNicks) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< CString,CNick > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetNicks(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNicks" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (std::map< CString,CNick > *) &((CChan const *)arg1)->GetNicks();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CNick_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetNickCount) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetNickCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNickCount" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = ((CChan const *)arg1)->GetNickCount();
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_AutoClearChanBuffer) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_AutoClearChanBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_AutoClearChanBuffer" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->AutoClearChanBuffer();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_IsDetached) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_IsDetached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsDetached" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->IsDetached();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_InConfig) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_InConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_InConfig" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->InConfig();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetCreationDate) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetCreationDate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetCreationDate" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (unsigned long)((CChan const *)arg1)->GetCreationDate();
    ST(argvi) = SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_IsDisabled) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_IsDisabled(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_IsDisabled" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (bool)((CChan const *)arg1)->IsDisabled();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetJoinTries) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetJoinTries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetJoinTries" "', argument " "1"" of type '" "CChan const *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = (unsigned int)((CChan const *)arg1)->GetJoinTries();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CChan_GetNicks_) {
  {
    CChan *arg1 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,CNick > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CChan_GetNicks_(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CChan_GetNicks_" "', argument " "1"" of type '" "CChan *""'"); 
    }
    arg1 = reinterpret_cast< CChan * >(argp1);
    result = CChan_GetNicks_(arg1);
    {
      HV* myhv = newHV();
      for (std::map<CString, CNick>::const_iterator i = (&result)->begin(); i != (&result)->end(); ++i) {
        SV* val = SWIG_NewInstanceObj(const_cast<CNick*>(&i->second), SWIG_TypeQuery("CNick*"), SWIG_SHADOW);
        SvREFCNT_inc(val);// it was created mortal
        hv_store(myhv, i->first.c_str(), i->first.length(), val, 0);
      }
      ST(argvi) = newRV_noinc((SV*)myhv);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CUser) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CUser(sUserName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CUser" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CUser" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CUser *)new CUser((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CUser) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_ParseConfig) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CConfig *arg2 = (CConfig *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_ParseConfig(self,Config,sError);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ParseConfig" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
    }
    arg2 = reinterpret_cast< CConfig * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->ParseConfig(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SaltedHash) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SaltedHash(sPass,sSalt);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SaltedHash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SaltedHash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SaltedHash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SaltedHash" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = CUser::SaltedHash((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_ToConfig) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfig result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_ToConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ToConfig" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (arg1)->ToConfig();
    ST(argvi) = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_CheckPass) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_CheckPass(self,sPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_CheckPass" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_CheckPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_CheckPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CUser const *)arg1)->CheckPass((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddAllowedHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_AddAllowedHost(self,sHostMask);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddAllowedHost" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddAllowedHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddAllowedHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->AddAllowedHost((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsHostAllowed) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_IsHostAllowed(self,sHostMask);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsHostAllowed" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CUser const *)arg1)->IsHostAllowed((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsValid__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_IsValid(self,sErrMsg,bSkipPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValid" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_IsValid" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsValid" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_IsValid" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)((CUser const *)arg1)->IsValid(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsValid__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_IsValid(self,sErrMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValid" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_IsValid" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsValid" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)((CUser const *)arg1)->IsValid(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsValid) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_IsValid__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_IsValid__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_IsValid'");
  XSRETURN(0);
}


XS(_wrap_CUser_IsValidUserName) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_IsValidUserName(sUserName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsValidUserName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_IsValidUserName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CUser::IsValidUserName((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_MakeCleanUserName) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_MakeCleanUserName(sUserName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MakeCleanUserName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_MakeCleanUserName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CUser::MakeCleanUserName((CString const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetModules__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetModules" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CModules *) &(arg1)->GetModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetModules__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetModules" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CModules *) &((CUser const *)arg1)->GetModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetModules) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetModules__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetModules__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_GetModules'");
  XSRETURN(0);
}


XS(_wrap_CUser_AddNetwork__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_AddNetwork(self,sNetwork,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_AddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CIRCNetwork *)(arg1)->AddNetwork((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_DeleteNetwork) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_DeleteNetwork(self,sNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DeleteNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_DeleteNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_DeleteNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->DeleteNetwork((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddNetwork__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_AddNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (bool)(arg1)->AddNetwork(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddNetwork) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_AddNetwork__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_AddNetwork__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_AddNetwork'");
  XSRETURN(0);
}


XS(_wrap_CUser_RemoveNetwork) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_RemoveNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_RemoveNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_RemoveNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->RemoveNetwork(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_FindNetwork) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_FindNetwork(self,sNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_FindNetwork" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_FindNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_FindNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CIRCNetwork *)((CUser const *)arg1)->FindNetwork((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetNetworks) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetNetworks(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNetworks" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (std::vector< CIRCNetwork * > *) &((CUser const *)arg1)->GetNetworks();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_HasSpaceForNewNetwork) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_HasSpaceForNewNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_HasSpaceForNewNetwork" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->HasSpaceForNewNetwork();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutUser__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutUser(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutUser" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutUser__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutUser(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutUser__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_PutUser(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutUser((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutUser) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutUser__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutUser__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutUser__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutUser'");
  XSRETURN(0);
}


XS(_wrap_CUser_PutAllUser__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutAllUser(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutAllUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutAllUser" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutAllUser((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutAllUser__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutAllUser(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutAllUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutAllUser((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutAllUser__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_PutAllUser(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutAllUser" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutAllUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutAllUser((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutAllUser) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutAllUser__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutAllUser__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutAllUser__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutAllUser'");
  XSRETURN(0);
}


XS(_wrap_CUser_PutStatus__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutStatus(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutStatus" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatus__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutStatus(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatus__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_PutStatus(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatus" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutStatus((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatus) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatus__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatus__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatus__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutStatus'");
  XSRETURN(0);
}


XS(_wrap_CUser_PutStatusNotice__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutStatusNotice(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatusNotice" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutStatusNotice" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatusNotice__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutStatusNotice(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutStatusNotice" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatusNotice__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_PutStatusNotice(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutStatusNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutStatusNotice((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutStatusNotice) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatusNotice__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatusNotice__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutStatusNotice__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutStatusNotice'");
  XSRETURN(0);
}


XS(_wrap_CUser_PutModule__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    CClient *arg5 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CUser_PutModule(self,sModule,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CUser_PutModule" "', argument " "5"" of type '" "CClient *""'"); 
    }
    arg5 = reinterpret_cast< CClient * >(argp5);
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModule__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutModule(self,sModule,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModule__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutModule(self,sModule,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModule" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModule) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModule__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModule__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModule__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutModule'");
  XSRETURN(0);
}


XS(_wrap_CUser_PutModNotice__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    CClient *arg5 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CUser_PutModNotice(self,sModule,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModNotice" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CUser_PutModNotice" "', argument " "5"" of type '" "CClient *""'"); 
    }
    arg5 = reinterpret_cast< CClient * >(argp5);
    result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModNotice__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_PutModNotice(self,sModule,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_PutModNotice" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModNotice__SWIG_2) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_PutModNotice(self,sModule,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_PutModNotice" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_PutModNotice) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModNotice__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModNotice__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_PutModNotice__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_PutModNotice'");
  XSRETURN(0);
}


XS(_wrap_CUser_IsUserAttached) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_IsUserAttached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsUserAttached" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->IsUserAttached();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_UserConnected) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_UserConnected(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_UserConnected" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_UserConnected" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->UserConnected(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_UserDisconnected) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_UserDisconnected(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_UserDisconnected" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_UserDisconnected" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->UserDisconnected(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetLocalDCCIP) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetLocalDCCIP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetLocalDCCIP" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (arg1)->GetLocalDCCIP();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_ExpandString__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_ExpandString(self,sStr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ExpandString" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CUser const *)arg1)->ExpandString((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_ExpandString__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_ExpandString(self,sStr,sRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_ExpandString" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CString *) &((CUser const *)arg1)->ExpandString((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_ExpandString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_ExpandString__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_ExpandString__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_ExpandString'");
  XSRETURN(0);
}


XS(_wrap_CUser_AddTimestamp__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_AddTimestamp(self,sStr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddTimestamp" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CUser const *)arg1)->AddTimestamp((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddTimestamp__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    time_t arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_AddTimestamp(self,tm,sStr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddTimestamp" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_AddTimestamp" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddTimestamp" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = ((CUser const *)arg1)->AddTimestamp(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddTimestamp) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_AddTimestamp__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_AddTimestamp__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_AddTimestamp'");
  XSRETURN(0);
}


XS(_wrap_CUser_CloneNetworks) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_CloneNetworks(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_CloneNetworks" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_CloneNetworks" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_CloneNetworks" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->CloneNetworks((CUser const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_Clone__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CUser *arg2 = 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_Clone(self,User,sErrorRet,bCloneNetworks);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_Clone" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_Clone" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CUser_Clone" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->Clone((CUser const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_Clone__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CUser *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_Clone(self,User,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_Clone" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_Clone" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_Clone" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->Clone((CUser const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_Clone) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_Clone__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_Clone__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_Clone'");
  XSRETURN(0);
}


XS(_wrap_CUser_BounceAllClients) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_BounceAllClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BounceAllClients" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    (arg1)->BounceAllClients();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddBytesRead) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned long long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_AddBytesRead(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddBytesRead" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_AddBytesRead" "', argument " "2"" of type '" "unsigned long long""'");
    } 
    arg2 = static_cast< unsigned long long >(val2);
    (arg1)->AddBytesRead(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddBytesWritten) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned long long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_AddBytesWritten(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddBytesWritten" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_AddBytesWritten" "', argument " "2"" of type '" "unsigned long long""'");
    } 
    arg2 = static_cast< unsigned long long >(val2);
    (arg1)->AddBytesWritten(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetNick) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetNick" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetAltNick) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetAltNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAltNick" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetAltNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetIdent) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetIdent(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetIdent" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetIdent((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetRealName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetRealName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetRealName" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetRealName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetBindHost(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBindHost" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetDCCBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetDCCBindHost(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDCCBindHost" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetDCCBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetDCCBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDCCBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetPass__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CUser::eHashType arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CUser_SetPass(self,s,eHash,sSalt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetPass" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetPass" "', argument " "3"" of type '" "CUser::eHashType""'");
    } 
    arg3 = static_cast< CUser::eHashType >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CUser_SetPass" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->SetPass((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetPass__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CUser::eHashType arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_SetPass(self,s,eHash);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetPass" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetPass" "', argument " "3"" of type '" "CUser::eHashType""'");
    } 
    arg3 = static_cast< CUser::eHashType >(val3);
    (arg1)->SetPass((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetPass) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_SetPass__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_SetPass__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_SetPass'");
  XSRETURN(0);
}


XS(_wrap_CUser_SetMultiClients) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetMultiClients(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetMultiClients" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetMultiClients" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetMultiClients(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetDenyLoadMod) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetDenyLoadMod(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDenyLoadMod" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetDenyLoadMod" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetDenyLoadMod(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetAdmin) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetAdmin(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAdmin" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetAdmin" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAdmin(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetDenySetBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetDenySetBindHost(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDenySetBindHost" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetDenySetBindHost" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetDenySetBindHost(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetStatusPrefix) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetStatusPrefix(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetStatusPrefix" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->SetStatusPrefix((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetDefaultChanModes) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetDefaultChanModes(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetDefaultChanModes" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetDefaultChanModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetDefaultChanModes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDefaultChanModes((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetQuitMsg) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetQuitMsg(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetQuitMsg" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetQuitMsg" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetQuitMsg" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetQuitMsg((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AddCTCPReply) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_AddCTCPReply(self,sCTCP,sReply);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AddCTCPReply" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_AddCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CUser_AddCTCPReply" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_AddCTCPReply" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->AddCTCPReply((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_DelCTCPReply) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_DelCTCPReply(self,sCTCP);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DelCTCPReply" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_DelCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_DelCTCPReply" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->DelCTCPReply((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetBufferCount__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned int arg2 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CUser_SetBufferCount(self,u,bForce);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBufferCount" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CUser_SetBufferCount" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->SetBufferCount(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetBufferCount__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetBufferCount(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBufferCount" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBufferCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(arg1)->SetBufferCount(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetBufferCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_SetBufferCount__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_SetBufferCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_SetBufferCount'");
  XSRETURN(0);
}


XS(_wrap_CUser_SetAutoClearChanBuffer) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetAutoClearChanBuffer(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetAutoClearChanBuffer" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetAutoClearChanBuffer" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAutoClearChanBuffer(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetBeingDeleted) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetBeingDeleted(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetBeingDeleted" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetBeingDeleted" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetBeingDeleted(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetTimestampFormat) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetTimestampFormat(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampFormat" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetTimestampFormat" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetTimestampFormat" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetTimestampFormat((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetTimestampAppend) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetTimestampAppend(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampAppend" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetTimestampAppend" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetTimestampAppend(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetTimestampPrepend) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetTimestampPrepend(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimestampPrepend" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetTimestampPrepend" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetTimestampPrepend(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetTimezone) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetTimezone(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetTimezone" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetTimezone" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetTimezone" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetTimezone((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetJoinTries) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetJoinTries(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetJoinTries" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetJoinTries" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetJoinTries(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetMaxJoins) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetMaxJoins(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetMaxJoins" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetMaxJoins" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetMaxJoins(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetSkinName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetSkinName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetSkinName" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CUser_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CUser_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetSkinName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_SetMaxNetworks) {
  {
    CUser *arg1 = (CUser *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_SetMaxNetworks(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_SetMaxNetworks" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_SetMaxNetworks" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetMaxNetworks(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetUserClients) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CClient * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetUserClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserClients" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (std::vector< CClient * > *) &(arg1)->GetUserClients();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CClient_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetAllClients) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::vector< CClient * > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetAllClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAllClients" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (arg1)->GetAllClients();
    ST(argvi) = SWIG_NewPointerObj((new std::vector< CClient * >(static_cast< const std::vector< CClient * >& >(result))), SWIGTYPE_p_std__vectorT_CClient_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetUserName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetUserName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserName" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetUserName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetCleanUserName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetCleanUserName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetCleanUserName" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetCleanUserName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetNick__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_GetNick(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNick" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetNick" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CUser const *)arg1)->GetNick(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetNick__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNick" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_GetNick'");
  XSRETURN(0);
}


XS(_wrap_CUser_GetAltNick__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_GetAltNick(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAltNick" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetAltNick" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CUser const *)arg1)->GetAltNick(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetAltNick__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetAltNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAltNick" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetAltNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetAltNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetAltNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetAltNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_GetAltNick'");
  XSRETURN(0);
}


XS(_wrap_CUser_GetIdent__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CUser_GetIdent(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetIdent" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CUser_GetIdent" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CUser const *)arg1)->GetIdent(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetIdent__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetIdent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetIdent" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetIdent();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetIdent) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetIdent__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CUser_GetIdent__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CUser_GetIdent'");
  XSRETURN(0);
}


XS(_wrap_CUser_GetRealName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetRealName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetRealName" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetRealName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetDCCBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetDCCBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetDCCBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetDCCBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetPass) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetPass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPass" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetPass();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetPassHashType) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser::eHashType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetPassHashType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPassHashType" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CUser::eHashType)((CUser const *)arg1)->GetPassHashType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetPassSalt) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetPassSalt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetPassSalt" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetPassSalt();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetAllowedHosts) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::set< CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetAllowedHosts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetAllowedHosts" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (std::set< CString > *) &((CUser const *)arg1)->GetAllowedHosts();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_CString_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetTimestampFormat) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetTimestampFormat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampFormat" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetTimestampFormat();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetTimestampAppend) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetTimestampAppend(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampAppend" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->GetTimestampAppend();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetTimestampPrepend) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetTimestampPrepend(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimestampPrepend" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->GetTimestampPrepend();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetUserPath) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetUserPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetUserPath" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetUserPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_DenyLoadMod) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_DenyLoadMod(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DenyLoadMod" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->DenyLoadMod();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsAdmin) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_IsAdmin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsAdmin" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->IsAdmin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_DenySetBindHost) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_DenySetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_DenySetBindHost" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->DenySetBindHost();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_MultiClients) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_MultiClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MultiClients" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->MultiClients();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetStatusPrefix) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetStatusPrefix(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetStatusPrefix" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetStatusPrefix();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetDefaultChanModes) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetDefaultChanModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetDefaultChanModes" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (CString *) &((CUser const *)arg1)->GetDefaultChanModes();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetQuitMsg) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetQuitMsg(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetQuitMsg" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = ((CUser const *)arg1)->GetQuitMsg();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetCTCPReplies) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    MCString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetCTCPReplies(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetCTCPReplies" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (MCString *) &((CUser const *)arg1)->GetCTCPReplies();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetBufferCount) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetBufferCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetBufferCount" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned int)((CUser const *)arg1)->GetBufferCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_AutoClearChanBuffer) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_AutoClearChanBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_AutoClearChanBuffer" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->AutoClearChanBuffer();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_IsBeingDeleted) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_IsBeingDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_IsBeingDeleted" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (bool)((CUser const *)arg1)->IsBeingDeleted();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetTimezone) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetTimezone(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetTimezone" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = ((CUser const *)arg1)->GetTimezone();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_BytesRead) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_BytesRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BytesRead" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned long long)((CUser const *)arg1)->BytesRead();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_BytesWritten) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_BytesWritten(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_BytesWritten" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned long long)((CUser const *)arg1)->BytesWritten();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_JoinTries) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_JoinTries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_JoinTries" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned int)((CUser const *)arg1)->JoinTries();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_MaxJoins) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_MaxJoins(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MaxJoins" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned int)((CUser const *)arg1)->MaxJoins();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetSkinName) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetSkinName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetSkinName" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = ((CUser const *)arg1)->GetSkinName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_MaxNetworks) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_MaxNetworks(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_MaxNetworks" "', argument " "1"" of type '" "CUser const *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = (unsigned int)((CUser const *)arg1)->MaxNetworks();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CUser_GetNetworks_) {
  {
    CUser *arg1 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CIRCNetwork * > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CUser_GetNetworks_(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CUser_GetNetworks_" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    result = CUser_GetNetworks_(arg1);
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        CIRCNetwork *x = ((std::vector< CIRCNetwork * > &)result)[i];
        svs[i] = sv_newmortal();
        sv_setsv(svs[i], SWIG_NewPointerObj(x, SWIGTYPE_p_CIRCNetwork, 0));
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsValidNetwork) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsValidNetwork(sNetwork);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsValidNetwork" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_IsValidNetwork" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CIRCNetwork::IsValidNetwork((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CIRCNetwork__SWIG_0) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CIRCNetwork(pUser,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CIRCNetwork *)new CIRCNetwork(arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CIRCNetwork__SWIG_1) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CIRCNetwork(pUser,Network);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCNetwork" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIRCNetwork" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (CIRCNetwork *)new CIRCNetwork(arg1,(CIRCNetwork const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CIRCNetwork) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CIRCNetwork__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CIRCNetwork__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CIRCNetwork'");
  XSRETURN(0);
}


XS(_wrap_delete_CIRCNetwork) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CIRCNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIRCNetwork" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_Clone__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_Clone(self,Network,bCloneName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_Clone" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_Clone" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->Clone((CIRCNetwork const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_Clone__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_Clone(self,Network);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_Clone" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_Clone" "', argument " "2"" of type '" "CIRCNetwork const &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->Clone((CIRCNetwork const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_Clone) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_Clone__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_Clone__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_Clone'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetNetworkPath) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetNetworkPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNetworkPath" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (arg1)->GetNetworkPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_DelServers) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_DelServers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelServers" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->DelServers();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ParseConfig__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CConfig *arg2 = (CConfig *) 0 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_ParseConfig(self,pConfig,sError,bUpgrade);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ParseConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
    }
    arg2 = reinterpret_cast< CConfig * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CIRCNetwork_ParseConfig" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->ParseConfig(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ParseConfig__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CConfig *arg2 = (CConfig *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_ParseConfig(self,pConfig,sError);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ParseConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ParseConfig" "', argument " "2"" of type '" "CConfig *""'"); 
    }
    arg2 = reinterpret_cast< CConfig * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ParseConfig" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->ParseConfig(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ParseConfig) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CConfig, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_ParseConfig__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_ParseConfig__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_ParseConfig'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_ToConfig) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CConfig result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_ToConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ToConfig" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (arg1)->ToConfig();
    ST(argvi) = SWIG_NewPointerObj((new CConfig(static_cast< const CConfig& >(result))), SWIGTYPE_p_CConfig, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_BounceAllClients) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_BounceAllClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_BounceAllClients" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->BounceAllClients();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsUserAttached) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsUserAttached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsUserAttached" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsUserAttached();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsUserOnline) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsUserOnline(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsUserOnline" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsUserOnline();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ClientConnected) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_ClientConnected(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClientConnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ClientConnected" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->ClientConnected(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ClientDisconnected) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CClient *arg2 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_ClientDisconnected(self,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClientDisconnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ClientDisconnected" "', argument " "2"" of type '" "CClient *""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    (arg1)->ClientDisconnected(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetUser) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CUser *)(arg1)->GetUser();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetName) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetName" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsNetworkAttached) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsNetworkAttached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsNetworkAttached" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsNetworkAttached();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetClients) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CClient * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetClients" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (std::vector< CClient * > *) &(arg1)->GetClients();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CClient_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetUser) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetUser(self,pUser);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->SetUser(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetName) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetName(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetName" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->SetName((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetModules__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetModules" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CModules *) &(arg1)->GetModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetModules__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetModules" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CModules *) &((CIRCNetwork const *)arg1)->GetModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetModules) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetModules__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetModules__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_GetModules'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_PutUser__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_PutUser(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutUser" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutUser__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_PutUser(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutUser" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutUser((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutUser__SWIG_2) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_PutUser(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutUser" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutUser((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutUser) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutUser__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutUser__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutUser__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_PutUser'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_PutStatus__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_PutStatus(self,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutStatus" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutStatus__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_PutStatus(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutStatus" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (bool)(arg1)->PutStatus((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutStatus__SWIG_2) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_PutStatus(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutStatus" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutStatus((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutStatus) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutStatus__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutStatus__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutStatus__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_PutStatus'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_PutModule__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    CClient *arg5 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CIRCNetwork_PutModule(self,sModule,sLine,pClient,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CIRCNetwork_PutModule" "', argument " "5"" of type '" "CClient *""'"); 
    }
    arg5 = reinterpret_cast< CClient * >(argp5);
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutModule__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CClient *arg4 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_PutModule(self,sModule,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_PutModule" "', argument " "4"" of type '" "CClient *""'"); 
    }
    arg4 = reinterpret_cast< CClient * >(argp4);
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutModule__SWIG_2) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_PutModule(self,sModule,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutModule" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutModule) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutModule__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutModule__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_PutModule__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_PutModule'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetChans) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CChan * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetChans(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChans" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (std::vector< CChan * > *) &((CIRCNetwork const *)arg1)->GetChans();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CChan_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_FindChan) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CChan *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_FindChan(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_FindChan" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CIRCNetwork_FindChan" "', argument " "2"" of type '" "CString""'");
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    result = (CChan *)((CIRCNetwork const *)arg1)->FindChan(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CChan, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddChan__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CChan *arg2 = (CChan *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_AddChan(self,pChan);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CChan, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CChan *""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    result = (bool)(arg1)->AddChan(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddChan__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_AddChan(self,sName,bInConfig);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddChan" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->AddChan((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddChan) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CChan, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddChan__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddChan__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_AddChan'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_DelChan) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_DelChan(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelChan" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_DelChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->DelChan((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_JoinChans__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_JoinChans(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_JoinChans" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->JoinChans();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_JoinChans__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    std::set< CChan * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_JoinChans(self,sChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_JoinChans" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_CChan_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_JoinChans" "', argument " "2"" of type '" "std::set< CChan * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_JoinChans" "', argument " "2"" of type '" "std::set< CChan * > &""'"); 
    }
    arg2 = reinterpret_cast< std::set< CChan * > * >(argp2);
    (arg1)->JoinChans(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_JoinChans) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__setT_CChan_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_JoinChans__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_JoinChans__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_JoinChans'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetChanPrefixes) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetChanPrefixes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChanPrefixes" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetChanPrefixes();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetChanPrefixes) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetChanPrefixes(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetChanPrefixes" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetChanPrefixes((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsChan) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_IsChan(self,sChan);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsChan" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_IsChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_IsChan" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CIRCNetwork const *)arg1)->IsChan((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetServers) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CServer * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetServers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetServers" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (std::vector< CServer * > *) &((CIRCNetwork const *)arg1)->GetServers();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CServer_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_HasServers) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_HasServers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_HasServers" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->HasServers();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_FindServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_FindServer(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_FindServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_FindServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_FindServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CServer *)((CIRCNetwork const *)arg1)->FindServer((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_DelServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_DelServer(self,sName,uPort,sPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_DelServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_DelServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_DelServer" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_DelServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_DelServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->DelServer((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddServer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_AddServer(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->AddServer((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddServer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CIRCNetwork_AddServer(self,sName,uPort,sPass,bSSL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CIRCNetwork_AddServer" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddServer__SWIG_2) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_AddServer(self,sName,uPort,sPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddServer__SWIG_3) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_AddServer(self,sName,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CIRCNetwork_AddServer" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (bool)(arg1)->AddServer((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddServer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddServer__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddServer__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddServer__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddServer__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_AddServer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetNextServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetNextServer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNextServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CServer *)(arg1)->GetNextServer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetCurrentServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetCurrentServer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetCurrentServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CServer *)((CIRCNetwork const *)arg1)->GetCurrentServer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIRCServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIRCServer(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIRCServer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetIRCServer((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetNextServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CServer *arg2 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetNextServer(self,pServer);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetNextServer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetNextServer" "', argument " "2"" of type '" "CServer const *""'"); 
    }
    arg2 = reinterpret_cast< CServer * >(argp2);
    result = (bool)(arg1)->SetNextServer((CServer const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsLastServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsLastServer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsLastServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsLastServer();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIRCConnectEnabled) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIRCConnectEnabled(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCConnectEnabled" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetIRCConnectEnabled" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIRCConnectEnabled(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIRCConnectEnabled) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIRCConnectEnabled(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCConnectEnabled" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->GetIRCConnectEnabled();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIRCSock__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIRCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCSock" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CIRCSock *)(arg1)->GetIRCSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIRCSock__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIRCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCSock" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CIRCSock *)((CIRCNetwork const *)arg1)->GetIRCSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIRCSock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetIRCSock__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetIRCSock__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_GetIRCSock'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetIRCServer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIRCServer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCServer" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetIRCServer();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIRCNick) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CNick *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIRCNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIRCNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CNick *) &((CIRCNetwork const *)arg1)->GetIRCNick();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CNick, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIRCNick) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CNick *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIRCNick(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIRCNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    (arg1)->SetIRCNick((CNick const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetCurNick) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetCurNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetCurNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = ((CIRCNetwork const *)arg1)->GetCurNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsIRCAway) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsIRCAway(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsIRCAway" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsIRCAway();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIRCAway) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIRCAway(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCAway" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetIRCAway" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetIRCAway(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_Connect) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_Connect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_Connect" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)(arg1)->Connect();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IsIRCConnected) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IsIRCConnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IsIRCConnected" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (bool)((CIRCNetwork const *)arg1)->IsIRCConnected();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIRCSocket) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIRCSocket(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIRCSocket" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIRCSocket" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    (arg1)->SetIRCSocket(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_IRCDisconnected) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_IRCDisconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_IRCDisconnected" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->IRCDisconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_CheckIRCConnect) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_CheckIRCConnect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_CheckIRCConnect" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->CheckIRCConnect();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_PutIRC) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_PutIRC(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_PutIRC" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PutIRC((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddRawBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_AddRawBuffer(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddRawBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddRawBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_AddRawBuffer(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->AddRawBuffer((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddRawBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddRawBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddRawBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_AddRawBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateRawBuffer(self,sMatch,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->UpdateRawBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateRawBuffer(self,sMatch,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->UpdateRawBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateRawBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateRawBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_UpdateRawBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateExactRawBuffer(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->UpdateExactRawBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateExactRawBuffer(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateExactRawBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->UpdateExactRawBuffer((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateExactRawBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateExactRawBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_UpdateExactRawBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_ClearRawBuffer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_ClearRawBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearRawBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->ClearRawBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddMotdBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_AddMotdBuffer(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddMotdBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddMotdBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_AddMotdBuffer(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->AddMotdBuffer((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddMotdBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddMotdBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddMotdBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_AddMotdBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateMotdBuffer(self,sMatch,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->UpdateMotdBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateMotdBuffer(self,sMatch,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateMotdBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->UpdateMotdBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateMotdBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateMotdBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_UpdateMotdBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_ClearMotdBuffer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_ClearMotdBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearMotdBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->ClearMotdBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddQueryBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_AddQueryBuffer(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddQueryBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddQueryBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_AddQueryBuffer(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_AddQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->AddQueryBuffer((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_AddQueryBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddQueryBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_AddQueryBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_AddQueryBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateQueryBuffer(self,sMatch,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->UpdateQueryBuffer((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_UpdateQueryBuffer(self,sMatch,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_UpdateQueryBuffer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->UpdateQueryBuffer((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_UpdateQueryBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_UpdateQueryBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_UpdateQueryBuffer'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_ClearQueryBuffer) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_ClearQueryBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ClearQueryBuffer" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    (arg1)->ClearQueryBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetNick__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_GetNick(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetNick" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetNick(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetNick__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_GetNick'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetAltNick__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_GetAltNick(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetAltNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetAltNick" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetAltNick(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetAltNick__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetAltNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetAltNick" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetAltNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetAltNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetAltNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetAltNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_GetAltNick'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetIdent__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_GetIdent(self,bAllowDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIdent" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_GetIdent" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetIdent(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIdent__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetIdent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetIdent" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetIdent();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetIdent) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetIdent__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_GetIdent__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_GetIdent'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetRealName) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetRealName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetRealName" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetRealName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetBindHost) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetBindHost" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CString *) &((CIRCNetwork const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetNick) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetAltNick) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetAltNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetAltNick" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetAltNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetAltNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetIdent) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetIdent(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetIdent" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetIdent" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetIdent((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetRealName) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetRealName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetRealName" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetRealName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetRealName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetBindHost) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetBindHost(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetBindHost" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_SetBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetBindHost((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetFloodRate) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetFloodRate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetFloodRate" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (double)((CIRCNetwork const *)arg1)->GetFloodRate();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_GetFloodBurst) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetFloodBurst(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetFloodBurst" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (unsigned short)((CIRCNetwork const *)arg1)->GetFloodBurst();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetFloodRate) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetFloodRate(self,fFloodRate);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetFloodRate" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetFloodRate" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetFloodRate(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_SetFloodBurst) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    unsigned short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_SetFloodBurst(self,uFloodBurst);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_SetFloodBurst" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCNetwork_SetFloodBurst" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    (arg1)->SetFloodBurst(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ExpandString__SWIG_0) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCNetwork_ExpandString(self,sStr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ExpandString" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CIRCNetwork const *)arg1)->ExpandString((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ExpandString__SWIG_1) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCNetwork_ExpandString(self,sStr,sRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_ExpandString" "', argument " "1"" of type '" "CIRCNetwork const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ExpandString" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCNetwork_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCNetwork_ExpandString" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CString *) &((CIRCNetwork const *)arg1)->ExpandString((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CString, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCNetwork_ExpandString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_ExpandString__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCNetwork_ExpandString__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCNetwork_ExpandString'");
  XSRETURN(0);
}


XS(_wrap_CIRCNetwork_GetChans_) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CChan * > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCNetwork_GetChans_(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCNetwork_GetChans_" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = CIRCNetwork_GetChans_(arg1);
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        CChan *x = ((std::vector< CChan * > &)result)[i];
        svs[i] = sv_newmortal();
        sv_setsv(svs[i], SWIG_NewPointerObj(x, SWIGTYPE_p_CChan, 0));
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CAuthBase) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CAuthBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CAuthBase" "', argument " "1"" of type '" "CAuthBase *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_SetLoginInfo) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    Csock *arg4 = (Csock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CAuthBase_SetLoginInfo(self,sUsername,sPassword,pSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_SetLoginInfo" "', argument " "1"" of type '" "CAuthBase *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_SetLoginInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_SetLoginInfo" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CAuthBase_SetLoginInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_SetLoginInfo" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Csock, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CAuthBase_SetLoginInfo" "', argument " "4"" of type '" "Csock *""'"); 
    }
    arg4 = reinterpret_cast< Csock * >(argp4);
    (arg1)->SetLoginInfo((CString const &)*arg2,(CString const &)*arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_AcceptLogin) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CAuthBase_AcceptLogin(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_AcceptLogin" "', argument " "1"" of type '" "CAuthBase *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->AcceptLogin(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_RefuseLogin) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CAuthBase_RefuseLogin(self,sReason);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_RefuseLogin" "', argument " "1"" of type '" "CAuthBase *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CAuthBase_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CAuthBase_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->RefuseLogin((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_GetUsername) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CAuthBase_GetUsername(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetUsername" "', argument " "1"" of type '" "CAuthBase const *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    result = (CString *) &((CAuthBase const *)arg1)->GetUsername();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_GetPassword) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CAuthBase_GetPassword(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetPassword" "', argument " "1"" of type '" "CAuthBase const *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    result = (CString *) &((CAuthBase const *)arg1)->GetPassword();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_GetSocket) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CAuthBase_GetSocket(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetSocket" "', argument " "1"" of type '" "CAuthBase const *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    result = (Csock *)((CAuthBase const *)arg1)->GetSocket();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_GetRemoteIP) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CAuthBase_GetRemoteIP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_GetRemoteIP" "', argument " "1"" of type '" "CAuthBase const *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    result = ((CAuthBase const *)arg1)->GetRemoteIP();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CAuthBase_Invalidate) {
  {
    CAuthBase *arg1 = (CAuthBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CAuthBase_Invalidate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CAuthBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CAuthBase_Invalidate" "', argument " "1"" of type '" "CAuthBase *""'"); 
    }
    arg1 = reinterpret_cast< CAuthBase * >(argp1);
    (arg1)->Invalidate();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CClientAuth) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CClientAuth *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CClientAuth(pClient,sUsername,sPassword);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CClientAuth" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CClientAuth" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CClientAuth" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CClientAuth" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CClientAuth" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (CClientAuth *)new CClientAuth(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClientAuth, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CClientAuth) {
  {
    CClientAuth *arg1 = (CClientAuth *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CClientAuth(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClientAuth, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CClientAuth" "', argument " "1"" of type '" "CClientAuth *""'"); 
    }
    arg1 = reinterpret_cast< CClientAuth * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClientAuth_Invalidate) {
  {
    CClientAuth *arg1 = (CClientAuth *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClientAuth_Invalidate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_Invalidate" "', argument " "1"" of type '" "CClientAuth *""'"); 
    }
    arg1 = reinterpret_cast< CClientAuth * >(argp1);
    (arg1)->Invalidate();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClientAuth_AcceptedLogin) {
  {
    CClientAuth *arg1 = (CClientAuth *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClientAuth_AcceptedLogin(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_AcceptedLogin" "', argument " "1"" of type '" "CClientAuth *""'"); 
    }
    arg1 = reinterpret_cast< CClientAuth * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClientAuth_AcceptedLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClientAuth_AcceptedLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->AcceptedLogin(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClientAuth_RefusedLogin) {
  {
    CClientAuth *arg1 = (CClientAuth *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClientAuth_RefusedLogin(self,sReason);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClientAuth, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClientAuth_RefusedLogin" "', argument " "1"" of type '" "CClientAuth *""'"); 
    }
    arg1 = reinterpret_cast< CClientAuth * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClientAuth_RefusedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClientAuth_RefusedLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->RefusedLogin((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CClient) {
  {
    int argvi = 0;
    CClient *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CClient();");
    }
    result = (CClient *)new CClient();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CClient, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CClient) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CClient(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CClient" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SendRequiredPasswordNotice) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_SendRequiredPasswordNotice(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SendRequiredPasswordNotice" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->SendRequiredPasswordNotice();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_AcceptLogin) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_AcceptLogin(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_AcceptLogin" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_AcceptLogin" "', argument " "2"" of type '" "CUser &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->AcceptLogin(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_RefuseLogin) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_RefuseLogin(self,sReason);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_RefuseLogin" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_RefuseLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->RefuseLogin((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetNick__SWIG_0) {
  {
    CClient *arg1 = (CClient *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_GetNick(self,bAllowIRCNick);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNick" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CClient_GetNick" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = ((CClient const *)arg1)->GetNick(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetNick__SWIG_1) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNick" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = ((CClient const *)arg1)->GetNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetNick) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_GetNick__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_GetNick__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CClient_GetNick'");
  XSRETURN(0);
}


XS(_wrap_CClient_GetNickMask) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetNickMask(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNickMask" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = ((CClient const *)arg1)->GetNickMask();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_HasNamesx) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_HasNamesx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasNamesx" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)((CClient const *)arg1)->HasNamesx();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_HasUHNames) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_HasUHNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasUHNames" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)((CClient const *)arg1)->HasUHNames();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_IsAway) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_IsAway(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsAway" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)((CClient const *)arg1)->IsAway();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_HasServerTime) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_HasServerTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HasServerTime" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)((CClient const *)arg1)->HasServerTime();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_UserCommand) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_UserCommand(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_UserCommand" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_UserCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_UserCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    (arg1)->UserCommand(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_UserPortCommand) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_UserPortCommand(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_UserPortCommand" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_UserPortCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_UserPortCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    (arg1)->UserPortCommand(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_StatusCTCP) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_StatusCTCP(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_StatusCTCP" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_StatusCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_StatusCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->StatusCTCP((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_BouncedOff) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_BouncedOff(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_BouncedOff" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->BouncedOff();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_IsAttached) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_IsAttached(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsAttached" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)((CClient const *)arg1)->IsAttached();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutIRC) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_PutIRC(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutIRC" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutIRC((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutClient) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_PutClient(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutClient" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutClient" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutClient" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutClient((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutStatus__SWIG_0) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CTable *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_PutStatus(self,table);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatus" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTable,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CTable const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CTable const &""'"); 
    }
    arg2 = reinterpret_cast< CTable * >(argp2);
    result = (unsigned int)(arg1)->PutStatus((CTable const &)*arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutStatus__SWIG_1) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_PutStatus(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatus" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatus" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutStatus((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutStatus) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_PutStatus__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_PutStatus__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CClient_PutStatus'");
  XSRETURN(0);
}


XS(_wrap_CClient_PutStatusNotice) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_PutStatusNotice(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutStatusNotice" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutStatusNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutStatusNotice((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutModule) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CClient_PutModule(self,sModule,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutModule" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CClient_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->PutModule((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_PutModNotice) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CClient_PutModNotice(self,sModule,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_PutModNotice" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CClient_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_PutModNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->PutModNotice((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_IsCapEnabled) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_IsCapEnabled(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_IsCapEnabled" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_IsCapEnabled" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_IsCapEnabled" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->IsCapEnabled((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_ReadLine) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_ReadLine(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ReadLine" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SendMotd) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_SendMotd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SendMotd" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (bool)(arg1)->SendMotd();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_HelpUser) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_HelpUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_HelpUser" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->HelpUser();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_AuthUser) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_AuthUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_AuthUser" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->AuthUser();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_Connected) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_Connected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Connected" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->Connected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_Timeout) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_Timeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Timeout" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->Timeout();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_Disconnected) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_Disconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_Disconnected" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->Disconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_ConnectionRefused) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_ConnectionRefused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ConnectionRefused" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->ConnectionRefused();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_ReachedMaxBuffer) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_ReachedMaxBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_ReachedMaxBuffer" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    (arg1)->ReachedMaxBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetNick) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_SetNick(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNick" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CClient_SetNick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetNick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetAway) {
  {
    CClient *arg1 = (CClient *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_SetAway(self,bAway);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetAway" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CClient_SetAway" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAway(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetUser) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetUser" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (CUser *)((CClient const *)arg1)->GetUser();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetNetwork__SWIG_0) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    bool arg3 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CClient_SetNetwork(self,pNetwork,bDisconnect,bReconnect);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CClient_SetNetwork" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CClient_SetNetwork" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    (arg1)->SetNetwork(arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetNetwork__SWIG_1) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CClient_SetNetwork(self,pNetwork,bDisconnect);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CClient_SetNetwork" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->SetNetwork(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetNetwork__SWIG_2) {
  {
    CClient *arg1 = (CClient *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CClient_SetNetwork(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_SetNetwork" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CClient_SetNetwork" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->SetNetwork(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_SetNetwork) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CIRCNetwork, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_SetNetwork__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_SetNetwork__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_SetNetwork__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CClient_SetNetwork'");
  XSRETURN(0);
}


XS(_wrap_CClient_GetNetwork) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetNetwork" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (CIRCNetwork *)((CClient const *)arg1)->GetNetwork();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetClients) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CClient * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetClients(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetClients" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (std::vector< CClient * > *) &(arg1)->GetClients();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CClient_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetIRCSock__SWIG_0) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetIRCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetIRCSock" "', argument " "1"" of type '" "CClient const *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (CIRCSock *)((CClient const *)arg1)->GetIRCSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetIRCSock__SWIG_1) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetIRCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetIRCSock" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (CIRCSock *)(arg1)->GetIRCSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CClient_GetIRCSock) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_GetIRCSock__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CClient_GetIRCSock__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CClient_GetIRCSock'");
  XSRETURN(0);
}


XS(_wrap_CClient_GetFullName) {
  {
    CClient *arg1 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CClient_GetFullName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CClient_GetFullName" "', argument " "1"" of type '" "CClient *""'"); 
    }
    arg1 = reinterpret_cast< CClient * >(argp1);
    result = (arg1)->GetFullName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CIRCSock) {
  {
    CIRCNetwork *arg1 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCSock *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CIRCSock(pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIRCSock" "', argument " "1"" of type '" "CIRCNetwork *""'"); 
    }
    arg1 = reinterpret_cast< CIRCNetwork * >(argp1);
    result = (CIRCSock *)new CIRCSock(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CIRCSock) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CIRCSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIRCSock" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnCTCPReply) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_OnCTCPReply(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnCTCPReply" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnPrivCTCP) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_OnPrivCTCP(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnChanCTCP) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCSock_OnChanCTCP(self,Nick,sChan,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanCTCP" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanCTCP" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCSock_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanCTCP(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnGeneralCTCP) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_OnGeneralCTCP(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnGeneralCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnGeneralCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnPrivMsg) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_OnPrivMsg(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivMsg" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnChanMsg) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCSock_OnChanMsg(self,Nick,sChan,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanMsg" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanMsg" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanMsg" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCSock_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanMsg(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnPrivNotice) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_OnPrivNotice(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnPrivNotice" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->OnPrivNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnChanNotice) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CIRCSock_OnChanNotice(self,Nick,sChan,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnChanNotice" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_OnChanNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanNotice" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CIRCSock_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (bool)(arg1)->OnChanNotice(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_OnServerCapAvailable) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_OnServerCapAvailable(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ReadLine) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_ReadLine(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ReadLine" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Connected) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_Connected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Connected" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->Connected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Disconnected) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_Disconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Disconnected" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->Disconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ConnectionRefused) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_ConnectionRefused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ConnectionRefused" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->ConnectionRefused();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_SockError) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_SockError(self,iErrno,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_SockError" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_SockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->SockError(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Timeout) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_Timeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Timeout" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->Timeout();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ReachedMaxBuffer) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_ReachedMaxBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ReachedMaxBuffer" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->ReachedMaxBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_PutIRC) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_PutIRC(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PutIRC" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_PutIRC" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutIRC((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_PutIRCQuick) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_PutIRCQuick(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PutIRCQuick" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_PutIRCQuick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_PutIRCQuick" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PutIRCQuick((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ResetChans) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_ResetChans(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ResetChans" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->ResetChans();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Quit__SWIG_0) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_Quit(self,sQuitMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Quit" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_Quit" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_Quit" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->Quit((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Quit__SWIG_1) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_Quit(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_Quit" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->Quit();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_Quit) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_Quit__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_Quit__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCSock_Quit'");
  XSRETURN(0);
}


XS(_wrap_CIRCSock_PauseCap) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_PauseCap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_PauseCap" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->PauseCap();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ResumeCap) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_ResumeCap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ResumeCap" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    (arg1)->ResumeCap();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_SetPass) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_SetPass(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_SetPass" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_SetPass" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetPass((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetMaxNickLen) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetMaxNickLen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetMaxNickLen" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (unsigned int)((CIRCSock const *)arg1)->GetMaxNickLen();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetModeType) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CIRCSock::EChanModeArgs result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_GetModeType(self,uMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetModeType" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_GetModeType" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (CIRCSock::EChanModeArgs)((CIRCSock const *)arg1)->GetModeType(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetPermFromMode) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    unsigned char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    unsigned char result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_GetPermFromMode(self,uMode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPermFromMode" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_GetPermFromMode" "', argument " "2"" of type '" "unsigned char""'");
    } 
    arg2 = static_cast< unsigned char >(val2);
    result = (unsigned char)((CIRCSock const *)arg1)->GetPermFromMode(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_char  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned char >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetChanModes) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< unsigned char,CIRCSock::EChanModeArgs > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetChanModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetChanModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (std::map< unsigned char,CIRCSock::EChanModeArgs > *) &((CIRCSock const *)arg1)->GetChanModes();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_IsPermChar) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_IsPermChar(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsPermChar" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_IsPermChar" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = (bool)((CIRCSock const *)arg1)->IsPermChar(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_IsPermMode) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_IsPermMode(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsPermMode" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CIRCSock_IsPermMode" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = (bool)((CIRCSock const *)arg1)->IsPermMode(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetPerms) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetPerms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPerms" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (CString *) &((CIRCSock const *)arg1)->GetPerms();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetPermModes) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetPermModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPermModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (CString *) &((CIRCSock const *)arg1)->GetPermModes();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetNickMask) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetNickMask(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNickMask" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = ((CIRCSock const *)arg1)->GetNickMask();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetNick) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetNick(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNick" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (CString *) &((CIRCSock const *)arg1)->GetNick();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetPass) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetPass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetPass" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (CString *) &((CIRCSock const *)arg1)->GetPass();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetNetwork) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CIRCNetwork *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetNetwork(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetNetwork" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (CIRCNetwork *)((CIRCSock const *)arg1)->GetNetwork();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIRCNetwork, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_HasNamesx) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_HasNamesx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_HasNamesx" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (bool)((CIRCSock const *)arg1)->HasNamesx();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_HasUHNames) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_HasUHNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_HasUHNames" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (bool)((CIRCSock const *)arg1)->HasUHNames();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetUserModes) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::set< unsigned char > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetUserModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetUserModes" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (std::set< unsigned char > *) &((CIRCSock const *)arg1)->GetUserModes();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_unsigned_char_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_IsAuthed) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_IsAuthed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsAuthed" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (bool)((CIRCSock const *)arg1)->IsAuthed();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_IsCapAccepted) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_IsCapAccepted(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_IsCapAccepted" "', argument " "1"" of type '" "CIRCSock *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_IsCapAccepted" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_IsCapAccepted" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->IsCapAccepted((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetISupport__SWIG_0) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    MCString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_GetISupport(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetISupport" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    result = (MCString *) &((CIRCSock const *)arg1)->GetISupport();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MCString, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetISupport__SWIG_1) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_GetISupport(self,sKey,sDefault);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetISupport" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_GetISupport" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_GetISupport" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_GetISupport" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_GetISupport" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = ((CIRCSock const *)arg1)->GetISupport((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetISupport__SWIG_2) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_GetISupport(self,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_GetISupport" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_GetISupport" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_GetISupport" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CIRCSock const *)arg1)->GetISupport((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_GetISupport) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_GetISupport__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_GetISupport__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_GetISupport__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCSock_GetISupport'");
  XSRETURN(0);
}


XS(_wrap_CIRCSock_ForwardRaw353__SWIG_0) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIRCSock_ForwardRaw353(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ForwardRaw353" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ((CIRCSock const *)arg1)->ForwardRaw353((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ForwardRaw353__SWIG_1) {
  {
    CIRCSock *arg1 = (CIRCSock *) 0 ;
    CString *arg2 = 0 ;
    CClient *arg3 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CIRCSock_ForwardRaw353(self,sLine,pClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIRCSock_ForwardRaw353" "', argument " "1"" of type '" "CIRCSock const *""'"); 
    }
    arg1 = reinterpret_cast< CIRCSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIRCSock_ForwardRaw353" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CIRCSock_ForwardRaw353" "', argument " "3"" of type '" "CClient *""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    ((CIRCSock const *)arg1)->ForwardRaw353((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIRCSock_ForwardRaw353) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CIRCSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_ForwardRaw353__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CIRCSock_ForwardRaw353__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CIRCSock_ForwardRaw353'");
  XSRETURN(0);
}


XS(_wrap_CIRCSock_IsFloodProtected) {
  {
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIRCSock_IsFloodProtected(fRate);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CIRCSock_IsFloodProtected" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    result = (bool)CIRCSock::IsFloodProtected(arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CListener) {
  {
    unsigned short arg1 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    EAddrType arg4 ;
    CListener::EAcceptType arg5 ;
    unsigned short val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    CListener *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CListener(uPort,sBindHost,bSSL,eAddr,eAccept);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CListener" "', argument " "1"" of type '" "unsigned short""'");
    } 
    arg1 = static_cast< unsigned short >(val1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CListener" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CListener" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CListener" "', argument " "4"" of type '" "EAddrType""'");
    } 
    arg4 = static_cast< EAddrType >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CListener" "', argument " "5"" of type '" "CListener::EAcceptType""'");
    } 
    arg5 = static_cast< CListener::EAcceptType >(val5);
    result = (CListener *)new CListener(arg1,(CString const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CListener) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CListener(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CListener" "', argument " "1"" of type '" "CListener *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_IsSSL) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_IsSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_IsSSL" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (bool)((CListener const *)arg1)->IsSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_GetAddrType) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    EAddrType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_GetAddrType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetAddrType" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (EAddrType)((CListener const *)arg1)->GetAddrType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_GetPort) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_GetPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetPort" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (unsigned short)((CListener const *)arg1)->GetPort();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_GetBindHost) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_GetBindHost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetBindHost" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (CString *) &((CListener const *)arg1)->GetBindHost();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_GetRealListener) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CRealListener *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_GetRealListener(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetRealListener" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (CRealListener *)((CListener const *)arg1)->GetRealListener();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CRealListener, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_GetAcceptType) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CListener::EAcceptType result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_GetAcceptType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_GetAcceptType" "', argument " "1"" of type '" "CListener const *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (CListener::EAcceptType)((CListener const *)arg1)->GetAcceptType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_SetAcceptType) {
  {
    CListener *arg1 = (CListener *) 0 ;
    CListener::EAcceptType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CListener_SetAcceptType(self,eType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_SetAcceptType" "', argument " "1"" of type '" "CListener *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CListener_SetAcceptType" "', argument " "2"" of type '" "CListener::EAcceptType""'");
    } 
    arg2 = static_cast< CListener::EAcceptType >(val2);
    (arg1)->SetAcceptType(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_Listen) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_Listen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_Listen" "', argument " "1"" of type '" "CListener *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (bool)(arg1)->Listen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CListener_ResetRealListener) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CListener_ResetRealListener(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CListener_ResetRealListener" "', argument " "1"" of type '" "CListener *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    (arg1)->ResetRealListener();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CRealListener) {
  {
    CListener *arg1 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CRealListener *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CRealListener(pParent);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CRealListener" "', argument " "1"" of type '" "CListener *""'"); 
    }
    arg1 = reinterpret_cast< CListener * >(argp1);
    result = (CRealListener *)new CRealListener(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CRealListener, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CRealListener) {
  {
    CRealListener *arg1 = (CRealListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CRealListener(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CRealListener, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CRealListener" "', argument " "1"" of type '" "CRealListener *""'"); 
    }
    arg1 = reinterpret_cast< CRealListener * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CRealListener_ConnectionFrom) {
  {
    CRealListener *arg1 = (CRealListener *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CRealListener_ConnectionFrom(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_ConnectionFrom" "', argument " "1"" of type '" "CRealListener *""'"); 
    }
    arg1 = reinterpret_cast< CRealListener * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CRealListener_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_ConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CRealListener_ConnectionFrom" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (bool)(arg1)->ConnectionFrom((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CRealListener_GetSockObj) {
  {
    CRealListener *arg1 = (CRealListener *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CRealListener_GetSockObj(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_GetSockObj" "', argument " "1"" of type '" "CRealListener *""'"); 
    }
    arg1 = reinterpret_cast< CRealListener * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CRealListener_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CRealListener_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CRealListener_SockError) {
  {
    CRealListener *arg1 = (CRealListener *) 0 ;
    int arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CRealListener_SockError(self,iErrno,sDescription);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CRealListener, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CRealListener_SockError" "', argument " "1"" of type '" "CRealListener *""'"); 
    }
    arg1 = reinterpret_cast< CRealListener * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CRealListener_SockError" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CRealListener_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CRealListener_SockError" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->SockError(arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CIncomingConnection) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    CListener::EAcceptType arg3 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CIncomingConnection *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CIncomingConnection(sHostname,uPort,eAcceptType);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CIncomingConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CIncomingConnection" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CIncomingConnection" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CIncomingConnection" "', argument " "3"" of type '" "CListener::EAcceptType""'");
    } 
    arg3 = static_cast< CListener::EAcceptType >(val3);
    result = (CIncomingConnection *)new CIncomingConnection((CString const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CIncomingConnection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CIncomingConnection) {
  {
    CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CIncomingConnection(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIncomingConnection, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CIncomingConnection" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
    }
    arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CIncomingConnection_ReadLine) {
  {
    CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CIncomingConnection_ReadLine(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIncomingConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIncomingConnection_ReadLine" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
    }
    arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CIncomingConnection_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CIncomingConnection_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CIncomingConnection_ReachedMaxBuffer) {
  {
    CIncomingConnection *arg1 = (CIncomingConnection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CIncomingConnection_ReachedMaxBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CIncomingConnection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CIncomingConnection_ReachedMaxBuffer" "', argument " "1"" of type '" "CIncomingConnection *""'"); 
    }
    arg1 = reinterpret_cast< CIncomingConnection * >(argp1);
    (arg1)->ReachedMaxBuffer();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CHTTPSock) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CHTTPSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CHTTPSock" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_ReadData) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_ReadData(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ReadData" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ReadData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_ReadData" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    (arg1)->ReadData((char const *)arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_ReadLine) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_ReadLine(self,sData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ReadLine" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_Connected) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_Connected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_Connected" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    (arg1)->Connected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetSockObj) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_GetSockObj(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetSockObj" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_ForceLogin) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_ForceLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ForceLogin" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (bool)(arg1)->ForceLogin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_OnLogin) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_OnLogin(self,sUser,sPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_OnLogin" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnLogin((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_OnPageRequest) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_OnPageRequest(self,sURI);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_OnPageRequest" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnPageRequest((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintFile__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    CString arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_PrintFile(self,sFileName,sContentType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintFile" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CHTTPSock_PrintFile" "', argument " "3"" of type '" "CString""'");
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    result = (bool)(arg1)->PrintFile((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintFile__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_PrintFile(self,sFileName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintFile" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->PrintFile((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintFile__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintFile__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_PrintFile'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_CheckPost) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_CheckPost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_CheckPost" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    (arg1)->CheckPost();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_SentHeader) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_SentHeader(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SentHeader" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (bool)((CHTTPSock const *)arg1)->SentHeader();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintHeader__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    off_t arg2 ;
    CString *arg3 = 0 ;
    unsigned int arg4 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CHTTPSock_PrintHeader(self,uContentLength,sContentType,uStatusId,sStatusMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
    } 
    arg2 = static_cast< off_t >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_PrintHeader" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_PrintHeader" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3,arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintHeader__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    off_t arg2 ;
    CString *arg3 = 0 ;
    unsigned int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CHTTPSock_PrintHeader(self,uContentLength,sContentType,uStatusId);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
    } 
    arg2 = static_cast< off_t >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_PrintHeader" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintHeader__SWIG_2) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    off_t arg2 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_PrintHeader(self,uContentLength,sContentType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
    } 
    arg2 = static_cast< off_t >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->PrintHeader(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintHeader__SWIG_3) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    off_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_PrintHeader(self,uContentLength);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintHeader" "', argument " "2"" of type '" "off_t""'");
    } 
    arg2 = static_cast< off_t >(val2);
    result = (bool)(arg1)->PrintHeader(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintHeader) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintHeader__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintHeader__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintHeader__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_PrintHeader__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_PrintHeader'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_AddHeader) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_AddHeader(self,sName,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_AddHeader" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_AddHeader" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_AddHeader" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_AddHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_AddHeader" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddHeader((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_SetContentType) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_SetContentType(self,sContentType);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetContentType" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SetContentType" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SetContentType" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetContentType((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintNotFound) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_PrintNotFound(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintNotFound" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (bool)(arg1)->PrintNotFound();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_Redirect) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_Redirect(self,sURL);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_Redirect" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_Redirect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_Redirect" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Redirect((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_PrintErrorPage) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    unsigned int arg2 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CHTTPSock_PrintErrorPage(self,uStatusId,sStatusMsg,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintErrorPage" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CHTTPSock_PrintErrorPage" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_PrintErrorPage" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (bool)(arg1)->PrintErrorPage(arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_ParseParams) {
  {
    CString *arg1 = 0 ;
    std::map< CString,VCString > *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_ParseParams(sParams,msvsParams);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ParseParams" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ParseParams" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_ParseParams" "', argument " "2"" of type '" "std::map< CString,VCString > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_ParseParams" "', argument " "2"" of type '" "std::map< CString,VCString > &""'"); 
    }
    arg2 = reinterpret_cast< std::map< CString,VCString > * >(argp2);
    CHTTPSock::ParseParams((CString const &)*arg1,*arg2);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_ParseURI) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_ParseURI(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_ParseURI" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    (arg1)->ParseURI();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetPage) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetPage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPage" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    (arg1)->GetPage();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetDate__SWIG_0) {
  {
    time_t arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetDate(tm);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetDate" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetDate" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    result = CHTTPSock::GetDate(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetDate__SWIG_1) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CHTTPSock_GetDate();");
    }
    result = CHTTPSock::GetDate();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetDate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetDate__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetDate__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_GetDate'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_GetRequestCookie) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_GetRequestCookie(self,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRequestCookie" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetRequestCookie((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_SendCookie) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_SendCookie(self,sKey,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SendCookie" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->SendCookie((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_SetDocRoot) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_SetDocRoot(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetDocRoot" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_SetDocRoot" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_SetDocRoot" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetDocRoot((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_SetLoggedIn) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_SetLoggedIn(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_SetLoggedIn" "', argument " "1"" of type '" "CHTTPSock *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_SetLoggedIn" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetLoggedIn(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetPath) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPath" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = ((CHTTPSock const *)arg1)->GetPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_IsLoggedIn) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_IsLoggedIn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_IsLoggedIn" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (bool)((CHTTPSock const *)arg1)->IsLoggedIn();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetDocRoot) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetDocRoot(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetDocRoot" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (CString *) &((CHTTPSock const *)arg1)->GetDocRoot();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetUser) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetUser" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (CString *) &((CHTTPSock const *)arg1)->GetUser();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetPass) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetPass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetPass" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (CString *) &((CHTTPSock const *)arg1)->GetPass();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamString) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetParamString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamString" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (CString *) &((CHTTPSock const *)arg1)->GetParamString();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetContentType) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetContentType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetContentType" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (CString *) &((CHTTPSock const *)arg1)->GetContentType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_IsPost) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_IsPost(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_IsPost" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (bool)((CHTTPSock const *)arg1)->IsPost();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParam__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CHTTPSock_GetParam(self,sName,bPost,sFilter);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetParam" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CHTTPSock_GetParam" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2,arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParam__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_GetParam(self,sName,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetParam" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParam__SWIG_2) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_GetParam(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetParam((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParam) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParam__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParam__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParam__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_GetParam'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_GetRawParam__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_GetRawParam(self,sName,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRawParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_GetRawParam" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = ((CHTTPSock const *)arg1)->GetRawParam((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetRawParam__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_GetRawParam(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetRawParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetRawParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetRawParam((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetRawParam) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetRawParam__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetRawParam__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_GetRawParam'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_HasParam__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_HasParam(self,sName,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_HasParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CHTTPSock_HasParam" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)((CHTTPSock const *)arg1)->HasParam((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_HasParam__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_HasParam(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_HasParam" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_HasParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CHTTPSock const *)arg1)->HasParam((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_HasParam) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_HasParam__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_HasParam__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_HasParam'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_GetParams__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::map< CString,VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CHTTPSock_GetParams(self,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParams" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CHTTPSock_GetParams" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (std::map< CString,VCString > *) &((CHTTPSock const *)arg1)->GetParams(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParams__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< CString,VCString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CHTTPSock_GetParams(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParams" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    result = (std::map< CString,VCString > *) &((CHTTPSock const *)arg1)->GetParams();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_std__vectorT_CString_t_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParams) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParams__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParams__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_GetParams'");
  XSRETURN(0);
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_0) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    VCString *arg3 = 0 ;
    bool arg4 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,vsRet,bPost,sFilter);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    arg3 = reinterpret_cast< VCString * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_1) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    VCString *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,vsRet,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    arg3 = reinterpret_cast< VCString * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_2) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    VCString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,vsRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "VCString &""'"); 
    }
    arg3 = reinterpret_cast< VCString * >(argp3);
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_3) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    std::set< CString > *arg3 = 0 ;
    bool arg4 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,ssRet,bPost,sFilter);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__setT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    arg3 = reinterpret_cast< std::set< CString > * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4,(CString const &)*arg5);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_4) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    std::set< CString > *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,ssRet,bPost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__setT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    arg3 = reinterpret_cast< std::set< CString > * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CHTTPSock_GetParamValues" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues__SWIG_5) {
  {
    CHTTPSock *arg1 = (CHTTPSock *) 0 ;
    CString *arg2 = 0 ;
    std::set< CString > *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CHTTPSock_GetParamValues(self,sName,ssRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CHTTPSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CHTTPSock_GetParamValues" "', argument " "1"" of type '" "CHTTPSock const *""'"); 
    }
    arg1 = reinterpret_cast< CHTTPSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__setT_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CHTTPSock_GetParamValues" "', argument " "3"" of type '" "std::set< CString > &""'"); 
    }
    arg3 = reinterpret_cast< std::set< CString > * >(argp3);
    result = ((CHTTPSock const *)arg1)->GetParamValues((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CHTTPSock_GetParamValues) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__setT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__setT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CHTTPSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__setT_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_5); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_4); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_1); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_0); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CHTTPSock_GetParamValues__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'CHTTPSock_GetParamValues'");
  XSRETURN(0);
}


XS(_wrap_new_CTemplateTagHandler) {
  {
    int argvi = 0;
    CTemplateTagHandler *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CTemplateTagHandler();");
    }
    result = (CTemplateTagHandler *)new CTemplateTagHandler();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateTagHandler, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CTemplateTagHandler) {
  {
    CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTemplateTagHandler(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateTagHandler, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateTagHandler" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateTagHandler_HandleVar) {
  {
    CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
    CTemplate *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CTemplateTagHandler_HandleVar(self,Tmpl,sName,sArgs,sOutput);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CTemplateTagHandler_HandleVar" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleVar" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->HandleVar(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateTagHandler_HandleTag) {
  {
    CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
    CTemplate *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CTemplateTagHandler_HandleTag(self,Tmpl,sName,sArgs,sOutput);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CTemplateTagHandler_HandleTag" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleTag" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->HandleTag(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateTagHandler_HandleIf) {
  {
    CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
    CTemplate *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CTemplateTagHandler_HandleIf(self,Tmpl,sName,sArgs,sOutput);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CTemplateTagHandler_HandleIf" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleIf" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->HandleIf(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateTagHandler_HandleValue) {
  {
    CTemplateTagHandler *arg1 = (CTemplateTagHandler *) 0 ;
    CTemplate *arg2 = 0 ;
    CString *arg3 = 0 ;
    MCString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CTemplateTagHandler_HandleValue(self,Tmpl,sValue,msOptions);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateTagHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "1"" of type '" "CTemplateTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateTagHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleValue" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleValue" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_MCString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CTemplateTagHandler_HandleValue" "', argument " "4"" of type '" "MCString const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateTagHandler_HandleValue" "', argument " "4"" of type '" "MCString const &""'"); 
    }
    arg4 = reinterpret_cast< MCString * >(argp4);
    result = (bool)(arg1)->HandleValue(*arg2,*arg3,(MCString const &)*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplateOptions) {
  {
    int argvi = 0;
    CTemplateOptions *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CTemplateOptions();");
    }
    result = (CTemplateOptions *)new CTemplateOptions();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateOptions, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CTemplateOptions) {
  {
    CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTemplateOptions(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateOptions, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateOptions" "', argument " "1"" of type '" "CTemplateOptions *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateOptions_Parse) {
  {
    CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateOptions_Parse(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_Parse" "', argument " "1"" of type '" "CTemplateOptions *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateOptions_Parse" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateOptions_Parse" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->Parse((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateOptions_GetEscapeFrom) {
  {
    CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString::EEscape result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateOptions_GetEscapeFrom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_GetEscapeFrom" "', argument " "1"" of type '" "CTemplateOptions const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
    result = ((CTemplateOptions const *)arg1)->GetEscapeFrom();
    ST(argvi) = SWIG_NewPointerObj((new CString::EEscape(static_cast< const CString::EEscape& >(result))), SWIGTYPE_p_CString__EEscape, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateOptions_GetEscapeTo) {
  {
    CTemplateOptions *arg1 = (CTemplateOptions *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString::EEscape result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateOptions_GetEscapeTo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateOptions, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateOptions_GetEscapeTo" "', argument " "1"" of type '" "CTemplateOptions const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateOptions * >(argp1);
    result = ((CTemplateOptions const *)arg1)->GetEscapeTo();
    ST(argvi) = SWIG_NewPointerObj((new CString::EEscape(static_cast< const CString::EEscape& >(result))), SWIGTYPE_p_CString__EEscape, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplateLoopContext) {
  {
    unsigned long arg1 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    std::vector< CTemplate * > *arg4 = (std::vector< CTemplate * > *) 0 ;
    unsigned long val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CTemplateLoopContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CTemplateLoopContext(uFilePos,sLoopName,bReverse,pRows);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CTemplateLoopContext" "', argument " "1"" of type '" "unsigned long""'");
    } 
    arg1 = static_cast< unsigned long >(val1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CTemplateLoopContext" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplateLoopContext" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CTemplateLoopContext" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_std__vectorT_CTemplate_p_t, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CTemplateLoopContext" "', argument " "4"" of type '" "std::vector< CTemplate * > *""'"); 
    }
    arg4 = reinterpret_cast< std::vector< CTemplate * > * >(argp4);
    result = (CTemplateLoopContext *)new CTemplateLoopContext(arg1,(CString const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateLoopContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CTemplateLoopContext) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTemplateLoopContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplateLoopContext" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_SetHasData__SWIG_0) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_SetHasData(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetHasData(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_SetHasData__SWIG_1) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_SetHasData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetHasData" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    (arg1)->SetHasData();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_SetHasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplateLoopContext_SetHasData__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplateLoopContext_SetHasData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplateLoopContext_SetHasData'");
  XSRETURN(0);
}


XS(_wrap_CTemplateLoopContext_SetName) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_SetName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetName" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_SetRowIndex) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_SetRowIndex(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetRowIndex" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetRowIndex(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_IncRowIndex) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_IncRowIndex(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_IncRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (unsigned int)(arg1)->IncRowIndex();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_DecRowIndex) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_DecRowIndex(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_DecRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (unsigned int)(arg1)->DecRowIndex();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_SetFilePosition) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_SetFilePosition(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_SetFilePosition" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_SetFilePosition" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetFilePosition(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_HasData) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_HasData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_HasData" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (bool)((CTemplateLoopContext const *)arg1)->HasData();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetName) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetName" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (CString *) &((CTemplateLoopContext const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetFilePosition) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetFilePosition(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetFilePosition" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (unsigned long)((CTemplateLoopContext const *)arg1)->GetFilePosition();
    ST(argvi) = SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetRowIndex) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetRowIndex(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRowIndex" "', argument " "1"" of type '" "CTemplateLoopContext const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (unsigned int)((CTemplateLoopContext const *)arg1)->GetRowIndex();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetRowCount) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetRowCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRowCount" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (arg1)->GetRowCount();
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetRows) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CTemplate * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetRows(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRows" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (std::vector< CTemplate * > *)(arg1)->GetRows();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CTemplate_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetNextRow) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetNextRow(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetNextRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (CTemplate *)(arg1)->GetNextRow();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetCurRow) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetCurRow(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetCurRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    result = (CTemplate *)(arg1)->GetCurRow();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetRow) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetRow(self,uIndex);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetRow" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplateLoopContext_GetRow" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (CTemplate *)(arg1)->GetRow(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetValue__SWIG_0) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetValue(self,sName,bFromIf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetValue" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplateLoopContext_GetValue" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (arg1)->GetValue((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetValue__SWIG_1) {
  {
    CTemplateLoopContext *arg1 = (CTemplateLoopContext *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplateLoopContext_GetValue(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplateLoopContext, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplateLoopContext_GetValue" "', argument " "1"" of type '" "CTemplateLoopContext *""'"); 
    }
    arg1 = reinterpret_cast< CTemplateLoopContext * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplateLoopContext_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->GetValue((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplateLoopContext_GetValue) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplateLoopContext, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplateLoopContext_GetValue__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplateLoopContext_GetValue__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplateLoopContext_GetValue'");
  XSRETURN(0);
}


XS(_wrap_new_CTemplate__SWIG_0) {
  {
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CTemplate();");
    }
    result = (CTemplate *)new CTemplate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplate__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CTemplate(sFileName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CTemplate *)new CTemplate((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplate__SWIG_2) {
  {
    CSmartPtr< CTemplateOptions > *arg1 = 0 ;
    CTemplate *arg2 = (CTemplate *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CTemplate(Options,pParent);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
    }
    arg1 = reinterpret_cast< CSmartPtr< CTemplateOptions > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CTemplate" "', argument " "2"" of type '" "CTemplate *""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    result = (CTemplate *)new CTemplate((CSmartPtr< CTemplateOptions > const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplate__SWIG_3) {
  {
    CSmartPtr< CTemplateOptions > *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CTemplate(Options);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CTemplate" "', argument " "1"" of type '" "CSmartPtr< CTemplateOptions > const &""'"); 
    }
    arg1 = reinterpret_cast< CSmartPtr< CTemplateOptions > * >(argp1);
    result = (CTemplate *)new CTemplate((CSmartPtr< CTemplateOptions > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CTemplate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CSmartPtrT_CTemplateOptions_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CTemplate__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CTemplate__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CTemplate__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CTemplate__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CTemplate'");
  XSRETURN(0);
}


XS(_wrap_delete_CTemplate) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CTemplate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CTemplate" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_AddTagHandler) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    SwigValueWrapper< CSmartPtr< CTemplateTagHandler > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_AddTagHandler(self,spTagHandler);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AddTagHandler" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CTemplateTagHandler_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AddTagHandler" "', argument " "2"" of type '" "CSmartPtr< CTemplateTagHandler >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AddTagHandler" "', argument " "2"" of type '" "CSmartPtr< CTemplateTagHandler >""'");
      } else {
        arg2 = *(reinterpret_cast< CSmartPtr< CTemplateTagHandler > * >(argp2));
      }
    }
    (arg1)->AddTagHandler(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetTagHandlers) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CSmartPtr< CTemplateTagHandler > > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_GetTagHandlers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetTagHandlers" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    result = (std::vector< CSmartPtr< CTemplateTagHandler > > *) &(arg1)->GetTagHandlers();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ResolveLiteral) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_ResolveLiteral(self,sString);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ResolveLiteral" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ResolveLiteral" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ResolveLiteral" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->ResolveLiteral((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_Init) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_Init(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Init" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    (arg1)->Init();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetParent) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_GetParent(self,bRoot);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetParent" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CTemplate_GetParent" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (CTemplate *)(arg1)->GetParent(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ExpandFile__SWIG_0) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_ExpandFile(self,sFilename,bFromInc);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ExpandFile" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_ExpandFile" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (arg1)->ExpandFile((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ExpandFile__SWIG_1) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_ExpandFile(self,sFilename);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ExpandFile" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ExpandFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->ExpandFile((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ExpandFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_ExpandFile__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_ExpandFile__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplate_ExpandFile'");
  XSRETURN(0);
}


XS(_wrap_CTemplate_SetFile) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_SetFile(self,sFileName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_SetFile" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_SetFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_SetFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->SetFile((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_SetPath) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_SetPath(self,sPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_SetPath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_SetPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetPath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_MakePath) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_MakePath(self,sPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_MakePath" "', argument " "1"" of type '" "CTemplate const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_MakePath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_MakePath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = ((CTemplate const *)arg1)->MakePath((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_PrependPath__SWIG_0) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_PrependPath(self,sPath,bIncludesOnly);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrependPath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_PrependPath" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->PrependPath((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_PrependPath__SWIG_1) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_PrependPath(self,sPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrependPath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_PrependPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PrependPath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_PrependPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_PrependPath__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_PrependPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplate_PrependPath'");
  XSRETURN(0);
}


XS(_wrap_CTemplate_AppendPath__SWIG_0) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_AppendPath(self,sPath,bIncludesOnly);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AppendPath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_AppendPath" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->AppendPath((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_AppendPath__SWIG_1) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_AppendPath(self,sPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AppendPath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AppendPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->AppendPath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_AppendPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_AppendPath__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_AppendPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplate_AppendPath'");
  XSRETURN(0);
}


XS(_wrap_CTemplate_RemovePath) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_RemovePath(self,sPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_RemovePath" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_RemovePath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_RemovePath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->RemovePath((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ClearPaths) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_ClearPaths(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ClearPaths" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    (arg1)->ClearPaths();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_PrintString) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_PrintString(self,sRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_PrintString" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_PrintString" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_PrintString" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->PrintString(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_Print__SWIG_0) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    std::ostream *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_Print(self,oOut);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Print" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__ostream,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "2"" of type '" "std::ostream &""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    result = (bool)(arg1)->Print(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_Print__SWIG_1) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    std::ostream *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_Print(self,sFileName,oOut);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_Print" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_Print" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__ostream,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplate_Print" "', argument " "3"" of type '" "std::ostream &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_Print" "', argument " "3"" of type '" "std::ostream &""'"); 
    }
    arg3 = reinterpret_cast< std::ostream * >(argp3);
    result = (bool)(arg1)->Print((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_Print) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_Print__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_Print__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplate_Print'");
  XSRETURN(0);
}


XS(_wrap_CTemplate_ValidIf) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_ValidIf(self,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ValidIf" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ValidIf" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ValidIf" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->ValidIf((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_ValidExpr) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_ValidExpr(self,sExpr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_ValidExpr" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_ValidExpr" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_ValidExpr" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->ValidExpr((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_IsTrue) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_IsTrue(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_IsTrue" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_IsTrue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_IsTrue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->IsTrue((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_HasLoop) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_HasLoop(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_HasLoop" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_HasLoop" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_HasLoop" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->HasLoop((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetValue__SWIG_0) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_GetValue(self,sName,bFromIf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetValue" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_GetValue" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (arg1)->GetValue((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetValue__SWIG_1) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_GetValue(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetValue" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetValue" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->GetValue((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetValue) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CTemplate, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_GetValue__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CTemplate_GetValue__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CTemplate_GetValue'");
  XSRETURN(0);
}


XS(_wrap_CTemplate_AddRow) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_AddRow(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_AddRow" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_AddRow" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_AddRow" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CTemplate *) &(arg1)->AddRow((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetRow) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_GetRow(self,sName,uIndex);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetRow" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetRow" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetRow" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CTemplate_GetRow" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (CTemplate *)(arg1)->GetRow((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetLoop) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::vector< CTemplate * > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CTemplate_GetLoop(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetLoop" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_GetLoop" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_GetLoop" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (std::vector< CTemplate * > *)(arg1)->GetLoop((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CTemplate_p_t, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_DelCurLoopContext) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_DelCurLoopContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_DelCurLoopContext" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    (arg1)->DelCurLoopContext();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetCurLoopContext) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CTemplateLoopContext *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_GetCurLoopContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetCurLoopContext" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    result = (CTemplateLoopContext *)(arg1)->GetCurLoopContext();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplateLoopContext, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetCurTemplate) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CTemplate *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_GetCurTemplate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetCurTemplate" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    result = (CTemplate *)(arg1)->GetCurTemplate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CTemplate, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_GetFileName) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CTemplate_GetFileName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_GetFileName" "', argument " "1"" of type '" "CTemplate const *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    result = (CString *) &((CTemplate const *)arg1)->GetFileName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CTemplate_set) {
  {
    CTemplate *arg1 = (CTemplate *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CTemplate_set(self,key,value);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CTemplate, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CTemplate_set" "', argument " "1"" of type '" "CTemplate *""'"); 
    }
    arg1 = reinterpret_cast< CTemplate * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CTemplate_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CTemplate_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CTemplate_set" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    CTemplate_set(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNCTagHandler) {
  {
    CWebSock *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CZNCTagHandler *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CZNCTagHandler(pWebSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CZNCTagHandler" "', argument " "1"" of type '" "CWebSock &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CZNCTagHandler" "', argument " "1"" of type '" "CWebSock &""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    result = (CZNCTagHandler *)new CZNCTagHandler(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNCTagHandler, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CZNCTagHandler) {
  {
    CZNCTagHandler *arg1 = (CZNCTagHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CZNCTagHandler(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNCTagHandler, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNCTagHandler" "', argument " "1"" of type '" "CZNCTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CZNCTagHandler * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNCTagHandler_HandleTag) {
  {
    CZNCTagHandler *arg1 = (CZNCTagHandler *) 0 ;
    CTemplate *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CZNCTagHandler_HandleTag(self,Tmpl,sName,sArgs,sOutput);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNCTagHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNCTagHandler_HandleTag" "', argument " "1"" of type '" "CZNCTagHandler *""'"); 
    }
    arg1 = reinterpret_cast< CZNCTagHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNCTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNCTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNCTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CZNCTagHandler_HandleTag" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNCTagHandler_HandleTag" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (bool)(arg1)->HandleTag(*arg2,(CString const &)*arg3,(CString const &)*arg4,*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSession) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CWebSession *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CWebSession(sId,sIP);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSession" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSession" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSession" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSession" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CWebSession *)new CWebSession((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSession, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CWebSession) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CWebSession(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSession" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_GetId) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_GetId(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetId" "', argument " "1"" of type '" "CWebSession const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    result = (CString *) &((CWebSession const *)arg1)->GetId();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_GetIP) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_GetIP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetIP" "', argument " "1"" of type '" "CWebSession const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    result = (CString *) &((CWebSession const *)arg1)->GetIP();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_GetUser) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_GetUser(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_GetUser" "', argument " "1"" of type '" "CWebSession const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    result = (CUser *)((CWebSession const *)arg1)->GetUser();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_IsLoggedIn) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_IsLoggedIn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_IsLoggedIn" "', argument " "1"" of type '" "CWebSession const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    result = (bool)((CWebSession const *)arg1)->IsLoggedIn();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_IsAdmin) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_IsAdmin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_IsAdmin" "', argument " "1"" of type '" "CWebSession const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    result = (bool)((CWebSession const *)arg1)->IsAdmin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_SetUser) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSession_SetUser(self,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_SetUser" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_SetUser" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    result = (CUser *)(arg1)->SetUser(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_ClearMessageLoops) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSession_ClearMessageLoops(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_ClearMessageLoops" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    (arg1)->ClearMessageLoops();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_FillMessageLoops) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    CTemplate *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSession_FillMessageLoops(self,Tmpl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_FillMessageLoops" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_FillMessageLoops" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_FillMessageLoops" "', argument " "2"" of type '" "CTemplate &""'"); 
    }
    arg2 = reinterpret_cast< CTemplate * >(argp2);
    (arg1)->FillMessageLoops(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_AddError) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSession_AddError(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_AddError" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_AddError" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_AddError" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->AddError((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSession_AddSuccess) {
  {
    CWebSession *arg1 = (CWebSession *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSession_AddSuccess(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSession, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSession_AddSuccess" "', argument " "1"" of type '" "CWebSession *""'"); 
    }
    arg1 = reinterpret_cast< CWebSession * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSession_AddSuccess" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSession_AddSuccess" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->AddSuccess((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage__SWIG_0) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    unsigned int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CWebSubPage *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CWebSubPage(sName,sTitle,uFlags);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CWebSubPage *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CWebSubPage(sName,sTitle);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage__SWIG_2) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CWebSubPage *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CWebSubPage(sName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage__SWIG_3) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    VPair *arg3 = 0 ;
    unsigned int arg4 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    CWebSubPage *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CWebSubPage(sName,sTitle,vParams,uFlags);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    arg3 = reinterpret_cast< VPair * >(argp3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CWebSubPage" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,(VPair const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage__SWIG_4) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    VPair *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    CWebSubPage *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CWebSubPage(sName,sTitle,vParams);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CWebSubPage" "', argument " "3"" of type '" "VPair const &""'"); 
    }
    arg3 = reinterpret_cast< VPair * >(argp3);
    result = (CWebSubPage *)new CWebSubPage((CString const &)*arg1,(CString const &)*arg2,(VPair const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSubPage, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSubPage) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSubPage__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSubPage__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSubPage__SWIG_4); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSubPage__SWIG_0); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSubPage__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CWebSubPage'");
  XSRETURN(0);
}


XS(_wrap_delete_CWebSubPage) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CWebSubPage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSubPage" "', argument " "1"" of type '" "CWebSubPage *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_SetName) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSubPage_SetName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_SetName" "', argument " "1"" of type '" "CWebSubPage *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_SetName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_SetTitle) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSubPage_SetTitle(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_SetTitle" "', argument " "1"" of type '" "CWebSubPage *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_SetTitle" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_SetTitle" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetTitle((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_AddParam) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSubPage_AddParam(self,sName,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_AddParam" "', argument " "1"" of type '" "CWebSubPage *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSubPage_AddParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_AddParam" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSubPage_AddParam" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSubPage_AddParam" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->AddParam((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_RequiresAdmin) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSubPage_RequiresAdmin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_RequiresAdmin" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    result = (bool)((CWebSubPage const *)arg1)->RequiresAdmin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_GetName) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSubPage_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetName" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    result = (CString *) &((CWebSubPage const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_GetTitle) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSubPage_GetTitle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetTitle" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    result = (CString *) &((CWebSubPage const *)arg1)->GetTitle();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSubPage_GetParams) {
  {
    CWebSubPage *arg1 = (CWebSubPage *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    VPair *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSubPage_GetParams(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSubPage, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSubPage_GetParams" "', argument " "1"" of type '" "CWebSubPage const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSubPage * >(argp1);
    result = (VPair *) &((CWebSubPage const *)arg1)->GetParams();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSessionMap__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CWebSessionMap *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CWebSessionMap(uTTL);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CWebSessionMap" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (CWebSessionMap *)new CWebSessionMap(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSessionMap, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSessionMap__SWIG_1) {
  {
    int argvi = 0;
    CWebSessionMap *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CWebSessionMap();");
    }
    result = (CWebSessionMap *)new CWebSessionMap();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSessionMap, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSessionMap) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSessionMap__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CWebSessionMap__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CWebSessionMap'");
  XSRETURN(0);
}


XS(_wrap_CWebSessionMap_FinishUserSessions) {
  {
    CWebSessionMap *arg1 = (CWebSessionMap *) 0 ;
    CUser *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSessionMap_FinishUserSessions(self,User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSessionMap, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "1"" of type '" "CWebSessionMap *""'"); 
    }
    arg1 = reinterpret_cast< CWebSessionMap * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSessionMap_FinishUserSessions" "', argument " "2"" of type '" "CUser const &""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    (arg1)->FinishUserSessions((CUser const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CWebSessionMap) {
  {
    CWebSessionMap *arg1 = (CWebSessionMap *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CWebSessionMap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSessionMap, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSessionMap" "', argument " "1"" of type '" "CWebSessionMap *""'"); 
    }
    arg1 = reinterpret_cast< CWebSessionMap * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CWebSock) {
  {
    int argvi = 0;
    CWebSock *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CWebSock();");
    }
    result = (CWebSock *)new CWebSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CWebSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CWebSock) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CWebSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CWebSock" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_ForceLogin) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_ForceLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_ForceLogin" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    result = (bool)(arg1)->ForceLogin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_OnLogin) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_OnLogin(self,sUser,sPass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_OnLogin" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnLogin" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnLogin" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnLogin((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_OnPageRequest) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSock_OnPageRequest(self,sURI);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_OnPageRequest" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_OnPageRequest" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnPageRequest((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintTemplate__SWIG_0) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CModule *arg4 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CWebSock::EPageReqResult result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CWebSock_PrintTemplate(self,sPageName,sPageRet,pModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintTemplate" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_PrintTemplate" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CWebSock_PrintTemplate" "', argument " "4"" of type '" "CModule *""'"); 
    }
    arg4 = reinterpret_cast< CModule * >(argp4);
    result = (CWebSock::EPageReqResult)(arg1)->PrintTemplate((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintTemplate__SWIG_1) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CWebSock::EPageReqResult result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_PrintTemplate(self,sPageName,sPageRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintTemplate" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_PrintTemplate" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintTemplate" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CWebSock::EPageReqResult)(arg1)->PrintTemplate((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintTemplate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CWebSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CWebSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CWebSock_PrintTemplate__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CWebSock_PrintTemplate__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CWebSock_PrintTemplate'");
  XSRETURN(0);
}


XS(_wrap_CWebSock_PrintStaticFile__SWIG_0) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CModule *arg4 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CWebSock::EPageReqResult result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CWebSock_PrintStaticFile(self,sPath,sPageRet,pModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintStaticFile" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_PrintStaticFile" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CWebSock_PrintStaticFile" "', argument " "4"" of type '" "CModule *""'"); 
    }
    arg4 = reinterpret_cast< CModule * >(argp4);
    result = (CWebSock::EPageReqResult)(arg1)->PrintStaticFile((CString const &)*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintStaticFile__SWIG_1) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CWebSock::EPageReqResult result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_PrintStaticFile(self,sPath,sPageRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintStaticFile" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_PrintStaticFile" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintStaticFile" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CWebSock::EPageReqResult)(arg1)->PrintStaticFile((CString const &)*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintStaticFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CWebSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CWebSock, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CModule, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CWebSock_PrintStaticFile__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CWebSock_PrintStaticFile__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CWebSock_PrintStaticFile'");
  XSRETURN(0);
}


XS(_wrap_CWebSock_FindTmpl) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CModule *arg2 = (CModule *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_FindTmpl(self,pModule,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_FindTmpl" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_FindTmpl" "', argument " "2"" of type '" "CModule *""'"); 
    }
    arg2 = reinterpret_cast< CModule * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_FindTmpl" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_FindTmpl" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->FindTmpl(arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_PrintErrorPage__SWIG_0) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSock_PrintErrorPage(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_PrintErrorPage" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_PrintErrorPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_PrintErrorPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->PrintErrorPage((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetSession) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< CSmartPtr< CWebSession > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_GetSession(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSession" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    result = (arg1)->GetSession();
    ST(argvi) = SWIG_NewPointerObj((new CSmartPtr< CWebSession >(static_cast< const CSmartPtr< CWebSession >& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSession_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetSockObj) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_GetSockObj(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSockObj" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CWebSock_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetSkinPath) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_GetSkinPath(sSkinName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSkinPath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetSkinPath" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = CWebSock::GetSkinPath((CString const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetModule) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_GetModule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetModule" "', argument " "1"" of type '" "CWebSock const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    result = (CModule *)((CWebSock const *)arg1)->GetModule();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetAvailSkins) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    VCString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSock_GetAvailSkins(self,vRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetAvailSkins" "', argument " "1"" of type '" "CWebSock const *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorT_CString_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetAvailSkins" "', argument " "2"" of type '" "VCString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetAvailSkins" "', argument " "2"" of type '" "VCString &""'"); 
    }
    arg2 = reinterpret_cast< VCString * >(argp2);
    ((CWebSock const *)arg1)->GetAvailSkins(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetSkinName) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_GetSkinName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetSkinName" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    result = (arg1)->GetSkinName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_GetRequestCookie) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CWebSock_GetRequestCookie(self,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_GetRequestCookie" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_GetRequestCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->GetRequestCookie((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_SendCookie) {
  {
    CWebSock *arg1 = (CWebSock *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CWebSock_SendCookie(self,sKey,sValue);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CWebSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_SendCookie" "', argument " "1"" of type '" "CWebSock *""'"); 
    }
    arg1 = reinterpret_cast< CWebSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CWebSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_SendCookie" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CWebSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_SendCookie" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->SendCookie((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CWebSock_FinishUserSessions) {
  {
    CUser *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CWebSock_FinishUserSessions(User);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_CUser,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CWebSock_FinishUserSessions" "', argument " "1"" of type '" "CUser const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CWebSock_FinishUserSessions" "', argument " "1"" of type '" "CUser const &""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    CWebSock::FinishUserSessions((CUser const &)*arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CZNC) {
  {
    int argvi = 0;
    CZNC *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CZNC();");
    }
    result = (CZNC *)new CZNC();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNC, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CZNC) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CZNC(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CZNC" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_DeleteUsers) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_DeleteUsers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeleteUsers" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->DeleteUsers();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Loop) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_Loop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Loop" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->Loop();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_WritePidFile) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_WritePidFile(self,iPid);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WritePidFile" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_WritePidFile" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(arg1)->WritePidFile(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_DeletePidFile) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_DeletePidFile(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeletePidFile" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)(arg1)->DeletePidFile();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_WaitForChildLock) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_WaitForChildLock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WaitForChildLock" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)(arg1)->WaitForChildLock();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_IsHostAllowed) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_IsHostAllowed(self,sHostMask);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_IsHostAllowed" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_IsHostAllowed" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CZNC const *)arg1)->IsHostAllowed((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AllowConnectionFrom) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AllowConnectionFrom(self,sIP);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AllowConnectionFrom" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AllowConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AllowConnectionFrom" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)((CZNC const *)arg1)->AllowConnectionFrom((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_InitDirs) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_InitDirs(self,sArgvPath,sDataDir);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_InitDirs" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_InitDirs" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_InitDirs" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_InitDirs" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_InitDirs" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->InitDirs((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_OnBoot) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_OnBoot(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_OnBoot" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)(arg1)->OnBoot();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ExpandConfigPath__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_ExpandConfigPath(self,sConfigFile,bAllowMkDir);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ExpandConfigPath" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_ExpandConfigPath" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (arg1)->ExpandConfigPath((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ExpandConfigPath__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_ExpandConfigPath(self,sConfigFile);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ExpandConfigPath" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ExpandConfigPath" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->ExpandConfigPath((CString const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ExpandConfigPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_ExpandConfigPath__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_ExpandConfigPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_ExpandConfigPath'");
  XSRETURN(0);
}


XS(_wrap_CZNC_WriteNewConfig) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_WriteNewConfig(self,sConfigFile);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WriteNewConfig" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_WriteNewConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_WriteNewConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->WriteNewConfig((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_WriteConfig) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_WriteConfig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WriteConfig" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)(arg1)->WriteConfig();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ParseConfig) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_ParseConfig(self,sConfig);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ParseConfig" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_ParseConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_ParseConfig" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->ParseConfig((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_RehashConfig) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_RehashConfig(self,sError);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_RehashConfig" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_RehashConfig" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_RehashConfig" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (bool)(arg1)->RehashConfig(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_BackupConfigOnce) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_BackupConfigOnce(self,sSuffix);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BackupConfigOnce" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_BackupConfigOnce" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_BackupConfigOnce" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->BackupConfigOnce((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetVersion) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CZNC_GetVersion();");
    }
    result = CZNC::GetVersion();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetTag__SWIG_0) {
  {
    bool arg1 ;
    bool arg2 ;
    bool val1 ;
    int ecode1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_GetTag(bIncludeVersion,bHTML);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CZNC_GetTag" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_GetTag" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = CZNC::GetTag(arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetTag__SWIG_1) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetTag(bIncludeVersion);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CZNC_GetTag" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    result = CZNC::GetTag(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetTag__SWIG_2) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CZNC_GetTag();");
    }
    result = CZNC::GetTag();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetTag) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetTag__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetTag__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetTag__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_GetTag'");
  XSRETURN(0);
}


XS(_wrap_CZNC_GetCompileOptionsString) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CZNC_GetCompileOptionsString();");
    }
    result = CZNC::GetCompileOptionsString();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetUptime) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetUptime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUptime" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetUptime();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ClearBindHosts) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_ClearBindHosts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ClearBindHosts" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->ClearBindHosts();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddBindHost) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddBindHost(self,sHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBindHost" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->AddBindHost((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_RemBindHost) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_RemBindHost(self,sHost);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_RemBindHost" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_RemBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_RemBindHost" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->RemBindHost((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Broadcast__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    CUser *arg4 = (CUser *) 0 ;
    CClient *arg5 = (CClient *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CZNC_Broadcast(self,sMessage,bAdminOnly,pSkipUser,pSkipClient);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_Broadcast" "', argument " "4"" of type '" "CUser *""'"); 
    }
    arg4 = reinterpret_cast< CUser * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_CClient, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CZNC_Broadcast" "', argument " "5"" of type '" "CClient *""'"); 
    }
    arg5 = reinterpret_cast< CClient * >(argp5);
    (arg1)->Broadcast((CString const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Broadcast__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    CUser *arg4 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CZNC_Broadcast(self,sMessage,bAdminOnly,pSkipUser);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_Broadcast" "', argument " "4"" of type '" "CUser *""'"); 
    }
    arg4 = reinterpret_cast< CUser * >(argp4);
    (arg1)->Broadcast((CString const &)*arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Broadcast__SWIG_2) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_Broadcast(self,sMessage,bAdminOnly);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CZNC_Broadcast" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->Broadcast((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Broadcast__SWIG_3) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_Broadcast(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_Broadcast" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_Broadcast" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->Broadcast((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Broadcast) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_Broadcast__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_Broadcast__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_Broadcast__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_Broadcast__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_Broadcast'");
  XSRETURN(0);
}


XS(_wrap_CZNC_AddBytesRead) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned long long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddBytesRead(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBytesRead" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddBytesRead" "', argument " "2"" of type '" "unsigned long long""'");
    } 
    arg2 = static_cast< unsigned long long >(val2);
    (arg1)->AddBytesRead(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddBytesWritten) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned long long arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddBytesWritten(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddBytesWritten" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddBytesWritten" "', argument " "2"" of type '" "unsigned long long""'");
    } 
    arg2 = static_cast< unsigned long long >(val2);
    (arg1)->AddBytesWritten(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_BytesRead) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_BytesRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BytesRead" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned long long)((CZNC const *)arg1)->BytesRead();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_BytesWritten) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned long long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_BytesWritten(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_BytesWritten" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned long long)((CZNC const *)arg1)->BytesWritten();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetTrafficStats) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CZNC::TrafficStatsPair *arg2 = 0 ;
    CZNC::TrafficStatsPair *arg3 = 0 ;
    CZNC::TrafficStatsPair *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< CString,std::pair< unsigned long long,unsigned long long > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CZNC_GetTrafficStats(self,Users,ZNC,Total);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetTrafficStats" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_GetTrafficStats" "', argument " "2"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "2"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    arg2 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_GetTrafficStats" "', argument " "3"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "3"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    arg3 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_std__pairT_unsigned_long_long_unsigned_long_long_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CZNC_GetTrafficStats" "', argument " "4"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_GetTrafficStats" "', argument " "4"" of type '" "CZNC::TrafficStatsPair &""'"); 
    }
    arg4 = reinterpret_cast< CZNC::TrafficStatsPair * >(argp4);
    result = (arg1)->GetTrafficStats(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_NewPointerObj((new CZNC::TrafficStatsMap(static_cast< const CZNC::TrafficStatsMap& >(result))), SWIGTYPE_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AuthUser) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    SwigValueWrapper< CSmartPtr< CAuthBase > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AuthUser(self,AuthClass);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AuthUser" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CAuthBase_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AuthUser" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AuthUser" "', argument " "2"" of type '" "CSmartPtr< CAuthBase >""'");
      } else {
        arg2 = *(reinterpret_cast< CSmartPtr< CAuthBase > * >(argp2));
      }
    }
    (arg1)->AuthUser(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetConfigState) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    enum CZNC::ConfigState arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetConfigState(self,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetConfigState" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetConfigState" "', argument " "2"" of type '" "enum CZNC::ConfigState""'");
    } 
    arg2 = static_cast< enum CZNC::ConfigState >(val2);
    (arg1)->SetConfigState(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetSkinName) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetSkinName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetSkinName" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetSkinName" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetSkinName((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetStatusPrefix) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetStatusPrefix(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetStatusPrefix" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetStatusPrefix" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetStatusPrefix((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetMaxBufferSize) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetMaxBufferSize(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetMaxBufferSize" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetMaxBufferSize" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetMaxBufferSize(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetAnonIPLimit) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetAnonIPLimit(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetAnonIPLimit" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetAnonIPLimit" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetAnonIPLimit(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetServerThrottle) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetServerThrottle(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetServerThrottle" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetServerThrottle(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetProtectWebSessions) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetProtectWebSessions(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetProtectWebSessions" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetProtectWebSessions" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetProtectWebSessions(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetConnectDelay) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetConnectDelay(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetConnectDelay" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_SetConnectDelay" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetConnectDelay(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConfigState) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    enum CZNC::ConfigState result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetConfigState(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfigState" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (enum CZNC::ConfigState)((CZNC const *)arg1)->GetConfigState();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetManager__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSockManager *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetManager" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CSockManager *) &(arg1)->GetManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetManager__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CSockManager *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetManager" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CSockManager *) &((CZNC const *)arg1)->GetManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSockManager, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetManager) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetManager__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetManager__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_GetManager'");
  XSRETURN(0);
}


XS(_wrap_CZNC_GetModules) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CModules *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetModules(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetModules" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CModules *) &(arg1)->GetModules();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModules, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FilterUncommonModules) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    std::set< CModInfo > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_FilterUncommonModules(self,ssModules);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FilterUncommonModules" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_CModInfo_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FilterUncommonModules" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FilterUncommonModules" "', argument " "2"" of type '" "std::set< CModInfo > &""'"); 
    }
    arg2 = reinterpret_cast< std::set< CModInfo > * >(argp2);
    result = (arg1)->FilterUncommonModules(*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetSkinName) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetSkinName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetSkinName" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetSkinName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetStatusPrefix) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetStatusPrefix(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetStatusPrefix" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CString *) &((CZNC const *)arg1)->GetStatusPrefix();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetCurPath) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetCurPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetCurPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CString *) &((CZNC const *)arg1)->GetCurPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetHomePath) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetHomePath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetHomePath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CString *) &((CZNC const *)arg1)->GetHomePath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetZNCPath) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetZNCPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetZNCPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CString *) &((CZNC const *)arg1)->GetZNCPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConfPath__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_GetConfPath(self,bAllowMkDir);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_GetConfPath" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = ((CZNC const *)arg1)->GetConfPath(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConfPath__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetConfPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetConfPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConfPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetConfPath__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetConfPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_GetConfPath'");
  XSRETURN(0);
}


XS(_wrap_CZNC_GetUserPath) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetUserPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUserPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetUserPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetModPath) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetModPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetModPath" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetModPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetPemLocation) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetPemLocation(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetPemLocation" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->GetPemLocation();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConfigFile) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetConfigFile(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConfigFile" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (CString *) &((CZNC const *)arg1)->GetConfigFile();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_WritePemFile) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_WritePemFile(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_WritePemFile" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)(arg1)->WritePemFile();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetBindHosts) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    VCString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetBindHosts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetBindHosts" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (VCString *) &((CZNC const *)arg1)->GetBindHosts();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetListeners) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::vector< CListener * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetListeners(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetListeners" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (std::vector< CListener * > *) &((CZNC const *)arg1)->GetListeners();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CListener_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_TimeStarted) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_TimeStarted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_TimeStarted" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = ((CZNC const *)arg1)->TimeStarted();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetMaxBufferSize) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetMaxBufferSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetMaxBufferSize" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned int)((CZNC const *)arg1)->GetMaxBufferSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetAnonIPLimit) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetAnonIPLimit(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetAnonIPLimit" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned int)((CZNC const *)arg1)->GetAnonIPLimit();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetServerThrottle__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetServerThrottle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetServerThrottle" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned int)((CZNC const *)arg1)->GetServerThrottle();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConnectDelay) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetConnectDelay(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConnectDelay" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (unsigned int)((CZNC const *)arg1)->GetConnectDelay();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetProtectWebSessions) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetProtectWebSessions(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetProtectWebSessions" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (bool)((CZNC const *)arg1)->GetProtectWebSessions();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_Get) {
  {
    int argvi = 0;
    CZNC *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CZNC_Get();");
    }
    result = (CZNC *) &CZNC::Get();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CZNC, 0 | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FindUser) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CUser *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_FindUser(self,sUsername);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindUser" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CUser *)(arg1)->FindUser((CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CUser, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FindModule__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_FindModule(self,sModName,sUsername);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindModule" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (CModule *)(arg1)->FindModule((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FindModule__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    CUser *arg3 = (CUser *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_FindModule(self,sModName,pUser);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindModule" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindModule" "', argument " "3"" of type '" "CUser *""'"); 
    }
    arg3 = reinterpret_cast< CUser * >(argp3);
    result = (CModule *)(arg1)->FindModule((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CModule, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FindModule) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CUser, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_FindModule__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_FindModule__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_FindModule'");
  XSRETURN(0);
}


XS(_wrap_CZNC_UpdateModule) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_UpdateModule(self,sModule);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_UpdateModule" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_UpdateModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_UpdateModule" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->UpdateModule((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_DeleteUser) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_DeleteUser(self,sUsername);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DeleteUser" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_DeleteUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_DeleteUser" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->DeleteUser((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddUser) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CUser *arg2 = (CUser *) 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CZNC_AddUser(self,pUser,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddUser" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddUser" "', argument " "2"" of type '" "CUser *""'"); 
    }
    arg2 = reinterpret_cast< CUser * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_AddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddUser" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (bool)(arg1)->AddUser(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetUserMap) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::map< CString,CUser * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetUserMap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetUserMap" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (std::map< CString,CUser * > *) &((CZNC const *)arg1)->GetUserMap();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_CString_CUser_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_FindListener) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    EAddrType arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    CListener *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CZNC_FindListener(self,uPort,BindHost,eAddr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_FindListener" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_FindListener" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_FindListener" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_FindListener" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CZNC_FindListener" "', argument " "4"" of type '" "EAddrType""'");
    } 
    arg4 = static_cast< EAddrType >(val4);
    result = (CListener *)(arg1)->FindListener(arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CListener, 0 | SWIG_SHADOW); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddListener__SWIG_0) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CListener *arg2 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddListener(self,CListener *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddListener" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddListener" "', argument " "2"" of type '" "CListener *""'"); 
    }
    arg2 = reinterpret_cast< CListener * >(argp2);
    result = (bool)(arg1)->AddListener(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddListener__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    EAddrType arg5 ;
    CListener::EAcceptType arg6 ;
    CString *arg7 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    void *argp7 = 0 ;
    int res7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CZNC_AddListener(self,uPort,sBindHost,bSSL,eAddr,eAccept,sError);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddListener" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CZNC_AddListener" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CZNC_AddListener" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddListener" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CZNC_AddListener" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CZNC_AddListener" "', argument " "5"" of type '" "EAddrType""'");
    } 
    arg5 = static_cast< EAddrType >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CZNC_AddListener" "', argument " "6"" of type '" "CListener::EAcceptType""'");
    } 
    arg6 = static_cast< CListener::EAcceptType >(val6);
    res7 = SWIG_ConvertPtr(ST(6), &argp7, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "CZNC_AddListener" "', argument " "7"" of type '" "CString &""'"); 
    }
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddListener" "', argument " "7"" of type '" "CString &""'"); 
    }
    arg7 = reinterpret_cast< CString * >(argp7);
    result = (bool)(arg1)->AddListener(arg2,(CString const &)*arg3,arg4,arg5,arg6,*arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddListener) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CListener, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(6), &vptr, SWIGTYPE_p_CString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_AddListener__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_AddListener__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_AddListener'");
  XSRETURN(0);
}


XS(_wrap_CZNC_DelListener) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CListener *arg2 = (CListener *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_DelListener(self,CListener *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DelListener" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CListener, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_DelListener" "', argument " "2"" of type '" "CListener *""'"); 
    }
    arg2 = reinterpret_cast< CListener * >(argp2);
    result = (bool)(arg1)->DelListener(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_SetMotd) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_SetMotd(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_SetMotd" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_SetMotd" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_SetMotd" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetMotd((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddMotd) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddMotd(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddMotd" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddMotd" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CZNC_AddMotd" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->AddMotd((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ClearMotd) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_ClearMotd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ClearMotd" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->ClearMotd();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetMotd) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    VCString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetMotd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetMotd" "', argument " "1"" of type '" "CZNC const *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (VCString *) &((CZNC const *)arg1)->GetMotd();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CString_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_AddServerThrottle) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddServerThrottle(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CZNC_AddServerThrottle" "', argument " "2"" of type '" "CString""'");
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    (arg1)->AddServerThrottle(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetServerThrottle__SWIG_1) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CString arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_GetServerThrottle(self,sName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetServerThrottle" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CZNC_GetServerThrottle" "', argument " "2"" of type '" "CString""'");
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    result = (bool)(arg1)->GetServerThrottle(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetServerThrottle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CZNC, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetServerThrottle__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CZNC_GetServerThrottle__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CZNC_GetServerThrottle'");
  XSRETURN(0);
}


XS(_wrap_CZNC_AddNetworkToQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_AddNetworkToQueue(self,pNetwork);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_AddNetworkToQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_AddNetworkToQueue" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    (arg1)->AddNetworkToQueue(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_GetConnectionQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::list< CIRCNetwork * > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_GetConnectionQueue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_GetConnectionQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    result = (std::list< CIRCNetwork * > *) &(arg1)->GetConnectionQueue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_CIRCNetwork_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_EnableConnectQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_EnableConnectQueue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_EnableConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->EnableConnectQueue();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_DisableConnectQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_DisableConnectQueue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DisableConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->DisableConnectQueue();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_PauseConnectQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_PauseConnectQueue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_PauseConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->PauseConnectQueue();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_ResumeConnectQueue) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_ResumeConnectQueue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_ResumeConnectQueue" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    (arg1)->ResumeConnectQueue();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_LeakConnectQueueTimer) {
  {
    CZNC *arg1 = (CZNC *) 0 ;
    CConnectQueueTimer *arg2 = (CConnectQueueTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CZNC_LeakConnectQueueTimer(self,pTimer);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CZNC, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_LeakConnectQueueTimer" "', argument " "1"" of type '" "CZNC *""'"); 
    }
    arg1 = reinterpret_cast< CZNC * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CConnectQueueTimer, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CZNC_LeakConnectQueueTimer" "', argument " "2"" of type '" "CConnectQueueTimer *""'"); 
    }
    arg2 = reinterpret_cast< CConnectQueueTimer * >(argp2);
    (arg1)->LeakConnectQueueTimer(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CZNC_DumpConfig) {
  {
    CConfig *arg1 = (CConfig *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CZNC_DumpConfig(Config);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CConfig, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CZNC_DumpConfig" "', argument " "1"" of type '" "CConfig const *""'"); 
    }
    arg1 = reinterpret_cast< CConfig * >(argp1);
    CZNC::DumpConfig((CConfig const *)arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CServer__SWIG_0) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    bool arg4 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CServer(sName,uPort,sPass,bSSL);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CServer" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (CServer *)new CServer((CString const &)*arg1,arg2,(CString const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CServer__SWIG_1) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    CString *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CServer(sName,uPort,sPass);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (CServer *)new CServer((CString const &)*arg1,arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CServer__SWIG_2) {
  {
    CString *arg1 = 0 ;
    unsigned short arg2 ;
    int res1 = SWIG_OLDOBJ ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CServer(sName,uPort);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CServer" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    result = (CServer *)new CServer((CString const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CServer__SWIG_3) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CServer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CServer(sName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CServer" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CServer *)new CServer((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CServer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CServer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CServer__SWIG_3); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CServer__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CServer__SWIG_1); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CServer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CServer'");
  XSRETURN(0);
}


XS(_wrap_delete_CServer) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CServer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CServer" "', argument " "1"" of type '" "CServer *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetName) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetName" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    result = (CString *) &((CServer const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetPort) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned short result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_GetPort(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetPort" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    result = (unsigned short)((CServer const *)arg1)->GetPort();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetPass) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_GetPass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetPass" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    result = (CString *) &((CServer const *)arg1)->GetPass();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_IsSSL) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_IsSSL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_IsSSL" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    result = (bool)((CServer const *)arg1)->IsSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetString__SWIG_0) {
  {
    CServer *arg1 = (CServer *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CServer_GetString(self,bIncludePassword);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetString" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CServer_GetString" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = ((CServer const *)arg1)->GetString(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetString__SWIG_1) {
  {
    CServer *arg1 = (CServer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_GetString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CServer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_GetString" "', argument " "1"" of type '" "CServer const *""'"); 
    }
    arg1 = reinterpret_cast< CServer * >(argp1);
    result = ((CServer const *)arg1)->GetString();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CServer_GetString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CServer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CServer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CServer_GetString__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CServer_GetString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CServer_GetString'");
  XSRETURN(0);
}


XS(_wrap_CServer_IsValidHostName) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CServer_IsValidHostName(sHostName);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CServer_IsValidHostName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CServer_IsValidHostName" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)CServer::IsValidHostName((CString const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_CDebug_SetStdoutIsTTY) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDebug_SetStdoutIsTTY(b);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CDebug_SetStdoutIsTTY" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    CDebug::SetStdoutIsTTY(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDebug_StdoutIsTTY) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CDebug_StdoutIsTTY();");
    }
    result = (bool)CDebug::StdoutIsTTY();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CDebug_SetDebug) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CDebug_SetDebug(b);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CDebug_SetDebug" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    CDebug::SetDebug(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CDebug_Debug) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: CDebug_Debug();");
    }
    result = (bool)CDebug::Debug();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CDebug) {
  {
    int argvi = 0;
    CDebug *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CDebug();");
    }
    result = (CDebug *)new CDebug();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDebug, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CDebug) {
  {
    CDebug *arg1 = (CDebug *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CDebug(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDebug, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CDebug" "', argument " "1"" of type '" "CDebug *""'"); 
    }
    arg1 = reinterpret_cast< CDebug * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CDebugStream) {
  {
    CDebugStream *arg1 = (CDebugStream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CDebugStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CDebugStream, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CDebugStream" "', argument " "1"" of type '" "CDebugStream *""'"); 
    }
    arg1 = reinterpret_cast< CDebugStream * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CDebugStream) {
  {
    int argvi = 0;
    CDebugStream *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CDebugStream();");
    }
    result = (CDebugStream *)new CDebugStream();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CDebugStream, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CExecSock) {
  {
    int argvi = 0;
    CExecSock *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CExecSock();");
    }
    result = (CExecSock *)new CExecSock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CExecSock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CExecSock_Execute) {
  {
    CExecSock *arg1 = (CExecSock *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CExecSock_Execute(self,sExec);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_Execute" "', argument " "1"" of type '" "CExecSock *""'"); 
    }
    arg1 = reinterpret_cast< CExecSock * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CExecSock_Execute" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_Execute" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)(arg1)->Execute((CString const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CExecSock_Kill) {
  {
    CExecSock *arg1 = (CExecSock *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CExecSock_Kill(self,iSignal);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_Kill" "', argument " "1"" of type '" "CExecSock *""'"); 
    }
    arg1 = reinterpret_cast< CExecSock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CExecSock_Kill" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->Kill(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CExecSock) {
  {
    CExecSock *arg1 = (CExecSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CExecSock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CExecSock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CExecSock" "', argument " "1"" of type '" "CExecSock *""'"); 
    }
    arg1 = reinterpret_cast< CExecSock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CExecSock_popen2) {
  {
    CExecSock *arg1 = (CExecSock *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CExecSock_popen2(self,iReadFD,iWriteFD,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_popen2" "', argument " "1"" of type '" "CExecSock *""'"); 
    }
    arg1 = reinterpret_cast< CExecSock * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CExecSock_popen2" "', argument " "2"" of type '" "int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "2"" of type '" "int &""'"); 
    }
    arg2 = reinterpret_cast< int * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CExecSock_popen2" "', argument " "3"" of type '" "int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "3"" of type '" "int &""'"); 
    }
    arg3 = reinterpret_cast< int * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CExecSock_popen2" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CExecSock_popen2" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (int)(arg1)->popen2(*arg2,*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CExecSock_close2) {
  {
    CExecSock *arg1 = (CExecSock *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CExecSock_close2(self,iPid,iReadFD,iWriteFD);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CExecSock, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CExecSock_close2" "', argument " "1"" of type '" "CExecSock *""'"); 
    }
    arg1 = reinterpret_cast< CExecSock * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CExecSock_close2" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CExecSock_close2" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CExecSock_close2" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    (arg1)->close2(arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBufLine__SWIG_0) {
  {
    int argvi = 0;
    CBufLine *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CBufLine();");
    }
    result = (CBufLine *)new CBufLine();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBufLine__SWIG_1) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    timeval *arg3 = (timeval *) 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CBufLine *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CBufLine(sFormat,sText,ts);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_timeval, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CBufLine" "', argument " "3"" of type '" "timeval const *""'"); 
    }
    arg3 = reinterpret_cast< timeval * >(argp3);
    result = (CBufLine *)new CBufLine((CString const &)*arg1,(CString const &)*arg2,(timeval const *)arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBufLine__SWIG_2) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    CBufLine *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CBufLine(sFormat,sText);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (CBufLine *)new CBufLine((CString const &)*arg1,(CString const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBufLine__SWIG_3) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    CBufLine *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CBufLine(sFormat);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CBufLine" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (CBufLine *)new CBufLine((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBufLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_timeval, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBufLine__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBufLine__SWIG_3); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBufLine__SWIG_2); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBufLine__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CBufLine'");
  XSRETURN(0);
}


XS(_wrap_delete_CBufLine) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CBufLine(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CBufLine" "', argument " "1"" of type '" "CBufLine *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_GetLine) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    CClient *arg2 = 0 ;
    MCString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBufLine_GetLine(self,Client,msParams);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetLine" "', argument " "1"" of type '" "CBufLine const *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_GetLine" "', argument " "2"" of type '" "CClient const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_GetLine" "', argument " "2"" of type '" "CClient const &""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_MCString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBufLine_GetLine" "', argument " "3"" of type '" "MCString const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_GetLine" "', argument " "3"" of type '" "MCString const &""'"); 
    }
    arg3 = reinterpret_cast< MCString * >(argp3);
    result = ((CBufLine const *)arg1)->GetLine((CClient const &)*arg2,(MCString const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_UpdateTime) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBufLine_UpdateTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_UpdateTime" "', argument " "1"" of type '" "CBufLine *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    (arg1)->UpdateTime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_SetFormat) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBufLine_SetFormat(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetFormat" "', argument " "1"" of type '" "CBufLine *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetFormat" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetFormat" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetFormat((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_SetText) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBufLine_SetText(self,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetText" "', argument " "1"" of type '" "CBufLine *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetText" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetText" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetText((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_SetTime) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    timeval *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBufLine_SetTime(self,ts);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_SetTime" "', argument " "1"" of type '" "CBufLine *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_timeval,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBufLine_SetTime" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBufLine_SetTime" "', argument " "2"" of type '" "timeval const &""'"); 
    }
    arg2 = reinterpret_cast< timeval * >(argp2);
    (arg1)->SetTime((timeval const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_GetFormat) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBufLine_GetFormat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetFormat" "', argument " "1"" of type '" "CBufLine const *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    result = (CString *) &((CBufLine const *)arg1)->GetFormat();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_GetText) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBufLine_GetText(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetText" "', argument " "1"" of type '" "CBufLine const *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    result = (CString *) &((CBufLine const *)arg1)->GetText();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBufLine_GetTime) {
  {
    CBufLine *arg1 = (CBufLine *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    timeval result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBufLine_GetTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBufLine, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBufLine_GetTime" "', argument " "1"" of type '" "CBufLine const *""'"); 
    }
    arg1 = reinterpret_cast< CBufLine * >(argp1);
    result = ((CBufLine const *)arg1)->GetTime();
    ST(argvi) = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBuffer__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    CBuffer *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_CBuffer(uLineCount);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CBuffer" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (CBuffer *)new CBuffer(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBuffer__SWIG_1) {
  {
    int argvi = 0;
    CBuffer *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CBuffer();");
    }
    result = (CBuffer *)new CBuffer();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBuffer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_CBuffer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBuffer__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_CBuffer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CBuffer'");
  XSRETURN(0);
}


XS(_wrap_delete_CBuffer) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CBuffer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CBuffer" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_AddLine__SWIG_0) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    timeval *arg4 = (timeval *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CBuffer_AddLine(self,sFormat,sText,ts);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_timeval, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_AddLine" "', argument " "4"" of type '" "timeval const *""'"); 
    }
    arg4 = reinterpret_cast< timeval * >(argp4);
    result = (arg1)->AddLine((CString const &)*arg2,(CString const &)*arg3,(timeval const *)arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_AddLine__SWIG_1) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBuffer_AddLine(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->AddLine((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_AddLine__SWIG_2) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBuffer_AddLine(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_AddLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_AddLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->AddLine((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_AddLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_timeval, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_AddLine__SWIG_2); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_AddLine__SWIG_1); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_AddLine__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CBuffer_AddLine'");
  XSRETURN(0);
}


XS(_wrap_CBuffer_UpdateLine__SWIG_0) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CBuffer_UpdateLine(self,sMatch,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_UpdateLine" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    result = (arg1)->UpdateLine((CString const &)*arg2,(CString const &)*arg3,(CString const &)*arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_UpdateLine__SWIG_1) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBuffer_UpdateLine(self,sMatch,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->UpdateLine((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_UpdateLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_UpdateLine__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_UpdateLine__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CBuffer_UpdateLine'");
  XSRETURN(0);
}


XS(_wrap_CBuffer_UpdateExactLine__SWIG_0) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBuffer_UpdateExactLine(self,sFormat,sText);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateExactLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_UpdateExactLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->UpdateExactLine((CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_UpdateExactLine__SWIG_1) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBuffer_UpdateExactLine(self,sFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_UpdateExactLine" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_UpdateExactLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->UpdateExactLine((CString const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_UpdateExactLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_UpdateExactLine__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_UpdateExactLine__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CBuffer_UpdateExactLine'");
  XSRETURN(0);
}


XS(_wrap_CBuffer_GetBufLine) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CBufLine *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBuffer_GetBufLine(self,uIdx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetBufLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetBufLine" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (CBufLine *) &((CBuffer const *)arg1)->GetBufLine(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CBufLine, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_GetLine__SWIG_0) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    std::deque< CBufLine >::size_type arg2 ;
    CClient *arg3 = 0 ;
    MCString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CBuffer_GetLine(self,uIdx,Client,msParams);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetLine" "', argument " "2"" of type '" "std::deque< CBufLine >::size_type""'");
    } 
    arg2 = static_cast< std::deque< CBufLine >::size_type >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_MCString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CBuffer_GetLine" "', argument " "4"" of type '" "MCString const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "4"" of type '" "MCString const &""'"); 
    }
    arg4 = reinterpret_cast< MCString * >(argp4);
    result = ((CBuffer const *)arg1)->GetLine(arg2,(CClient const &)*arg3,(MCString const &)*arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_GetLine__SWIG_1) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    std::deque< CBufLine >::size_type arg2 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBuffer_GetLine(self,uIdx,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLine" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_GetLine" "', argument " "2"" of type '" "std::deque< CBufLine >::size_type""'");
    } 
    arg2 = static_cast< std::deque< CBufLine >::size_type >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CBuffer_GetLine" "', argument " "3"" of type '" "CClient const &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = ((CBuffer const *)arg1)->GetLine(arg2,(CClient const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_GetLine) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_CClient, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_MCString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_GetLine__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_GetLine__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CBuffer_GetLine'");
  XSRETURN(0);
}


XS(_wrap_CBuffer_Size) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::deque< CBufLine >::size_type result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBuffer_Size(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_Size" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    result = ((CBuffer const *)arg1)->Size();
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_IsEmpty) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBuffer_IsEmpty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_IsEmpty" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    result = (bool)((CBuffer const *)arg1)->IsEmpty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_Clear) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBuffer_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_Clear" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    (arg1)->Clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_SetLineCount__SWIG_0) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    unsigned int arg2 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CBuffer_SetLineCount(self,u,bForce);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_SetLineCount" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_SetLineCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CBuffer_SetLineCount" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->SetLineCount(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_SetLineCount__SWIG_1) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CBuffer_SetLineCount(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_SetLineCount" "', argument " "1"" of type '" "CBuffer *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CBuffer_SetLineCount" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(arg1)->SetLineCount(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CBuffer_SetLineCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_CBuffer, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_SetLineCount__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_CBuffer_SetLineCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CBuffer_SetLineCount'");
  XSRETURN(0);
}


XS(_wrap_CBuffer_GetLineCount) {
  {
    CBuffer *arg1 = (CBuffer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CBuffer_GetLineCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CBuffer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CBuffer_GetLineCount" "', argument " "1"" of type '" "CBuffer const *""'"); 
    }
    arg1 = reinterpret_cast< CBuffer * >(argp1);
    result = (unsigned int)((CBuffer const *)arg1)->GetLineCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CPerlModule) {
  {
    CUser *arg1 = (CUser *) 0 ;
    CIRCNetwork *arg2 = (CIRCNetwork *) 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    SV *arg5 = (SV *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    CPerlModule *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CPerlModule(pUser,pNetwork,sModName,sDataPath,perlObj);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CUser, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPerlModule" "', argument " "1"" of type '" "CUser *""'"); 
    }
    arg1 = reinterpret_cast< CUser * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCNetwork, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CPerlModule" "', argument " "2"" of type '" "CIRCNetwork *""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CPerlModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPerlModule" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CPerlModule" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPerlModule" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    arg5 = ST(4);
    result = (CPerlModule *)new CPerlModule(arg1,arg2,(CString const &)*arg3,(CString const &)*arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlModule, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_GetPerlObj) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SV *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_GetPerlObj(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_GetPerlObj" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (SV *)(arg1)->GetPerlObj();
    ST(argvi) = result; argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnBoot) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnBoot(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnBoot" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (bool)(arg1)->OnBoot();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_WebRequiresLogin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_WebRequiresLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_WebRequiresLogin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (bool)(arg1)->WebRequiresLogin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_WebRequiresAdmin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_WebRequiresAdmin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_WebRequiresAdmin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (bool)(arg1)->WebRequiresAdmin();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_GetWebMenuTitle) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_GetWebMenuTitle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_GetWebMenuTitle" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (arg1)->GetWebMenuTitle();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnWebPreRequest) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnWebPreRequest(self,WebSock,sPageName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnWebPreRequest" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnWebPreRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnWebPreRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->OnWebPreRequest(*arg2,(CString const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnWebRequest) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    CTemplate *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnWebRequest(self,WebSock,sPageName,Tmpl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnWebRequest" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    arg4 = reinterpret_cast< CTemplate * >(argp4);
    result = (bool)(arg1)->OnWebRequest(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_GetSubPages) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    VWebSubPages *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_GetSubPages(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_GetSubPages" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    result = (VWebSubPages *) &(arg1)->GetSubPages();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPreRehash) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnPreRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPreRehash" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnPreRehash();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPostRehash) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnPostRehash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPostRehash" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnPostRehash();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnIRCDisconnected) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnIRCDisconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnIRCDisconnected" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnIRCDisconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnIRCConnected) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnIRCConnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnIRCConnected" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnIRCConnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnIRCConnecting) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnIRCConnecting(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnIRCConnecting" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnIRCConnecting" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    result = (CModule::EModRet)(arg1)->OnIRCConnecting(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnIRCConnectionError) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CIRCSock *arg2 = (CIRCSock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnIRCConnectionError(self,pIRCSock);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnIRCConnectionError" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_CIRCSock, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnIRCConnectionError" "', argument " "2"" of type '" "CIRCSock *""'"); 
    }
    arg2 = reinterpret_cast< CIRCSock * >(argp2);
    (arg1)->OnIRCConnectionError(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnIRCRegistration) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnIRCRegistration(self,sPass,sNick,sIdent,sRealName);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnIRCRegistration" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnIRCRegistration" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnIRCRegistration" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnIRCRegistration" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPerlModule_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnIRCRegistration" "', argument " "5"" of type '" "CString &""'"); 
    }
    arg5 = reinterpret_cast< CString * >(argp5);
    result = (CModule::EModRet)(arg1)->OnIRCRegistration(*arg2,*arg3,*arg4,*arg5);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnBroadcast) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnBroadcast(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnBroadcast" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnBroadcast" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnBroadcast(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanPermission) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    unsigned char arg5 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    unsigned char val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CPerlModule_OnChanPermission(self,OpNick,Nick,Channel,uMode,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanPermission" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanPermission" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanPermission" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanPermission" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPerlModule_OnChanPermission" "', argument " "5"" of type '" "unsigned char""'");
    } 
    arg5 = static_cast< unsigned char >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CPerlModule_OnChanPermission" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CPerlModule_OnChanPermission" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    (arg1)->OnChanPermission((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5,arg6,arg7);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnOp) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnOp(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnOp" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnOp" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnOp" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnOp" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPerlModule_OnOp" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnOp((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnDeop) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnDeop(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnDeop" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDeop" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDeop" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDeop" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPerlModule_OnDeop" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnDeop((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnVoice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnVoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnVoice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnVoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnVoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnVoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPerlModule_OnVoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnVoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnDevoice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CNick *arg3 = 0 ;
    CChan *arg4 = 0 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnDevoice(self,OpNick,Nick,Channel,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnDevoice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDevoice" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDevoice" "', argument " "3"" of type '" "CNick const &""'"); 
    }
    arg3 = reinterpret_cast< CNick * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDevoice" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPerlModule_OnDevoice" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (arg1)->OnDevoice((CNick const &)*arg2,(CNick const &)*arg3,*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnMode) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    char arg4 ;
    CString *arg5 = 0 ;
    bool arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    char val4 ;
    int ecode4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    bool val6 ;
    int ecode6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: CPerlModule_OnMode(self,OpNick,Channel,uMode,sArg,bAdded,bNoChange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnMode" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    ecode4 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPerlModule_OnMode" "', argument " "4"" of type '" "char""'");
    } 
    arg4 = static_cast< char >(val4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPerlModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "CPerlModule_OnMode" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CPerlModule_OnMode" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    (arg1)->OnMode((CNick const &)*arg2,*arg3,arg4,(CString const &)*arg5,arg6,arg7);
    ST(argvi) = sv_newmortal();
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnRawMode) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnRawMode(self,OpNick,Channel,sModes,sArgs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnRawMode" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnRawMode" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnRawMode" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnRawMode" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPerlModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnRawMode" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    (arg1)->OnRawMode((CNick const &)*arg2,*arg3,(CString const &)*arg4,(CString const &)*arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnRaw) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnRaw" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnRaw(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnStatusCommand) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnStatusCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnStatusCommand" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnStatusCommand" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnStatusCommand(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnModCommand) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnModCommand(self,sCommand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnModCommand" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnModCommand" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModCommand((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnModNotice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnModNotice(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnModNotice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnModNotice" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModNotice((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnModCTCP) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnModCTCP(self,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnModCTCP" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnModCTCP" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->OnModCTCP((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnQuit) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnQuit(self,Nick,sMessage,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnQuit" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnQuit" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnQuit" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CPerlModule_OnQuit. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CPerlModule_OnQuit. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CPerlModule_OnQuit. "
          "Expected an array of " "CChan");
      }
    }
    (arg1)->OnQuit((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnNick) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    std::vector< CChan * > *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    std::vector< CChan * > temp4 ;
    std::vector< CChan * > *v4 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnNick(self,Nick,sNewNick,vChans);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnNick" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnNick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnNick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    {
      int res = SWIG_ConvertPtr(ST(3),(void **) &v4, SWIGTYPE_p_std__vectorT_CChan_p_t,0);
      if (SWIG_IsOK(res)) {
        arg4 = v4;
      } else if (SvROK(ST(3))) {
        AV *av = (AV *)SvRV(ST(3));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 4 of CPerlModule_OnNick. "
          "Expected an array of " "CChan");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v4;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v4, SWIGTYPE_p_CChan,0);
          if (SWIG_IsOK(res)) {
            temp4.push_back(static_cast< CChan * >(v4));
          } else {
            SWIG_croak("Type error in argument 4 of "
              "CPerlModule_OnNick. "
              "Expected an array of " "CChan");
          }
        }
        arg4 = &temp4;
      } else {
        SWIG_croak("Type error in argument 4 of CPerlModule_OnNick. "
          "Expected an array of " "CChan");
      }
    }
    (arg1)->OnNick((CNick const &)*arg2,(CString const &)*arg3,(std::vector< CChan * > const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnKick) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    CChan *arg4 = 0 ;
    CString *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: CPerlModule_OnKick(self,OpNick,sKickedNick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnKick" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnKick" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnKick" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnKick" "', argument " "4"" of type '" "CChan &""'"); 
    }
    arg4 = reinterpret_cast< CChan * >(argp4);
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CPerlModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnKick" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    (arg1)->OnKick((CNick const &)*arg2,(CString const &)*arg3,*arg4,(CString const &)*arg5);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnJoin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnJoin(self,Nick,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnJoin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnJoin" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnJoin" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    (arg1)->OnJoin((CNick const &)*arg2,*arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPart) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnPart(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPart" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPart" "', argument " "2"" of type '" "CNick const &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPart" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPart" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    (arg1)->OnPart((CNick const &)*arg2,*arg3,(CString const &)*arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanBufferStarting) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnChanBufferStarting(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanBufferStarting" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferStarting" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferStarting" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (CModule::EModRet)(arg1)->OnChanBufferStarting(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanBufferEnding) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnChanBufferEnding(self,Chan,Client);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanBufferEnding" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferEnding" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferEnding" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    result = (CModule::EModRet)(arg1)->OnChanBufferEnding(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanBufferPlayLine) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CChan *arg2 = 0 ;
    CClient *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnChanBufferPlayLine(self,Chan,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "3"" of type '" "CClient &""'"); 
    }
    arg3 = reinterpret_cast< CClient * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanBufferPlayLine" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanBufferPlayLine(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPrivBufferPlayLine) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CClient *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnPrivBufferPlayLine(self,Client,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPrivBufferPlayLine" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CClient,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivBufferPlayLine" "', argument " "2"" of type '" "CClient &""'"); 
    }
    arg2 = reinterpret_cast< CClient * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivBufferPlayLine" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivBufferPlayLine(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnClientLogin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnClientLogin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnClientLogin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnClientLogin();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnClientDisconnect) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlModule_OnClientDisconnect(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnClientDisconnect" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    (arg1)->OnClientDisconnect();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserRaw) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnUserRaw(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserRaw" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserRaw" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnUserRaw(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserCTCPReply) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserCTCPReply(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserCTCPReply" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserCTCPReply" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserCTCP) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserCTCP(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserCTCP" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserCTCP" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserAction) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserAction(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserAction" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserAction" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserMsg) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserMsg(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserMsg" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserMsg" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserNotice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserNotice(self,sTarget,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserNotice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserNotice" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserJoin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserJoin(self,sChannel,sKey);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserJoin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserJoin" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserJoin" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserJoin(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserPart) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserPart(self,sChannel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserPart" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserPart" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserPart" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserPart(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserTopic) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnUserTopic(self,sChannel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserTopic" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserTopic" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserTopic" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnUserTopic(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnUserTopicRequest) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnUserTopicRequest(self,sChannel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnUserTopicRequest" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnUserTopicRequest" "', argument " "2"" of type '" "CString &""'"); 
    }
    arg2 = reinterpret_cast< CString * >(argp2);
    result = (CModule::EModRet)(arg1)->OnUserTopicRequest(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnCTCPReply) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnCTCPReply(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnCTCPReply" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnCTCPReply" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnCTCPReply" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnCTCPReply(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPrivCTCP) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnPrivCTCP(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPrivCTCP" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivCTCP" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivCTCP(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanCTCP) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnChanCTCP(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanCTCP" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanCTCP" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanCTCP" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanCTCP" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanCTCP(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPrivAction) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnPrivAction(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPrivAction" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivAction" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivAction(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanAction) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnChanAction(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanAction" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanAction" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanAction" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanAction" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanAction(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPrivMsg) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnPrivMsg(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPrivMsg" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivMsg" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivMsg(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanMsg) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnChanMsg(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanMsg" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanMsg" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanMsg" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanMsg" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanMsg(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnPrivNotice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnPrivNotice(self,Nick,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnPrivNotice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnPrivNotice" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnPrivNotice(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnChanNotice) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnChanNotice(self,Nick,Channel,sMessage);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnChanNotice" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanNotice" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanNotice" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnChanNotice" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnChanNotice(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnTopic) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CNick *arg2 = 0 ;
    CChan *arg3 = 0 ;
    CString *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnTopic(self,Nick,Channel,sTopic);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnTopic" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CNick,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnTopic" "', argument " "2"" of type '" "CNick &""'"); 
    }
    arg2 = reinterpret_cast< CNick * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnTopic" "', argument " "3"" of type '" "CChan &""'"); 
    }
    arg3 = reinterpret_cast< CChan * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnTopic" "', argument " "4"" of type '" "CString &""'"); 
    }
    arg4 = reinterpret_cast< CString * >(argp4);
    result = (CModule::EModRet)(arg1)->OnTopic(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnServerCapAvailable) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnServerCapAvailable(self,sCap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnServerCapAvailable" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnServerCapAvailable" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->OnServerCapAvailable((CString const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnServerCapResult) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CString *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnServerCapResult(self,sCap,bSuccess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnServerCapResult" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnServerCapResult" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPerlModule_OnServerCapResult" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->OnServerCapResult((CString const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnTimerAutoJoin) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CChan *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnTimerAutoJoin(self,Channel);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnTimerAutoJoin" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CChan,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnTimerAutoJoin" "', argument " "2"" of type '" "CChan &""'"); 
    }
    arg2 = reinterpret_cast< CChan * >(argp2);
    result = (CModule::EModRet)(arg1)->OnTimerAutoJoin(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnEmbeddedWebRequest) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CWebSock *arg2 = 0 ;
    CString *arg3 = 0 ;
    CTemplate *arg4 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CPerlModule_OnEmbeddedWebRequest(self,CWebSock &,CString const &,CTemplate &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CWebSock,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "2"" of type '" "CWebSock &""'"); 
    }
    arg2 = reinterpret_cast< CWebSock * >(argp2);
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_CTemplate,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnEmbeddedWebRequest" "', argument " "4"" of type '" "CTemplate &""'"); 
    }
    arg4 = reinterpret_cast< CTemplate * >(argp4);
    result = (bool)(arg1)->OnEmbeddedWebRequest(*arg2,(CString const &)*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnAddNetwork) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlModule_OnAddNetwork(self,Network,sErrorRet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnAddNetwork" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnAddNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CString,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CPerlModule_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnAddNetwork" "', argument " "3"" of type '" "CString &""'"); 
    }
    arg3 = reinterpret_cast< CString * >(argp3);
    result = (CModule::EModRet)(arg1)->OnAddNetwork(*arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlModule_OnDeleteNetwork) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    CIRCNetwork *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    CModule::EModRet result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlModule_OnDeleteNetwork(self,Network);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlModule_OnDeleteNetwork" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CIRCNetwork,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlModule_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlModule_OnDeleteNetwork" "', argument " "2"" of type '" "CIRCNetwork &""'"); 
    }
    arg2 = reinterpret_cast< CIRCNetwork * >(argp2);
    result = (CModule::EModRet)(arg1)->OnDeleteNetwork(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CPerlModule) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CPerlModule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPerlModule" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AsPerlModule) {
  {
    CModule *arg1 = (CModule *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CPerlModule *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AsPerlModule(p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPerlModule" "', argument " "1"" of type '" "CModule *""'"); 
    }
    arg1 = reinterpret_cast< CModule * >(argp1);
    result = (CPerlModule *)AsPerlModule(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlModule, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CPerlTimer) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    SV *arg6 = (SV *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    CPerlTimer *result = 0 ;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: new_CPerlTimer(pModule,uInterval,uCycles,sLabel,sDescription,perlObj);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPerlTimer" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPerlTimer" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPerlTimer" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CPerlTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPerlTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CPerlTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CPerlTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    arg6 = ST(5);
    result = (CPerlTimer *)new CPerlTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5,arg6);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlTimer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlTimer_RunJob) {
  {
    CPerlTimer *arg1 = (CPerlTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlTimer_RunJob(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlTimer_RunJob" "', argument " "1"" of type '" "CPerlTimer *""'"); 
    }
    arg1 = reinterpret_cast< CPerlTimer * >(argp1);
    (arg1)->RunJob();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlTimer_GetPerlObj) {
  {
    CPerlTimer *arg1 = (CPerlTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SV *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlTimer_GetPerlObj(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlTimer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlTimer_GetPerlObj" "', argument " "1"" of type '" "CPerlTimer *""'"); 
    }
    arg1 = reinterpret_cast< CPerlTimer * >(argp1);
    result = (SV *)(arg1)->GetPerlObj();
    ST(argvi) = result; argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CPerlTimer) {
  {
    CPerlTimer *arg1 = (CPerlTimer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CPerlTimer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlTimer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPerlTimer" "', argument " "1"" of type '" "CPerlTimer *""'"); 
    }
    arg1 = reinterpret_cast< CPerlTimer * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CreatePerlTimer) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    CString *arg4 = 0 ;
    CString *arg5 = 0 ;
    SV *arg6 = (SV *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    CPerlTimer *result = 0 ;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: CreatePerlTimer(pModule,uInterval,uCycles,sLabel,sDescription,perlObj);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreatePerlTimer" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreatePerlTimer" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CreatePerlTimer" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    {
      CString *ptr = (CString *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CreatePerlTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePerlTimer" "', argument " "4"" of type '" "CString const &""'"); 
      }
      arg4 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CreatePerlTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreatePerlTimer" "', argument " "5"" of type '" "CString const &""'"); 
      }
      arg5 = ptr;
    }
    arg6 = ST(5);
    result = (CPerlTimer *)CreatePerlTimer(arg1,arg2,arg3,(CString const &)*arg4,(CString const &)*arg5,arg6);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlTimer, 0 | SWIG_SHADOW); argvi++ ;
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    XSRETURN(argvi);
  fail:
    
    
    
    if (SWIG_IsNewObj(res4)) free((char*)arg4);
    if (SWIG_IsNewObj(res5)) free((char*)arg5);
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CPerlSocket) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    SV *arg2 = (SV *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CPerlSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_CPerlSocket(pModule,perlObj);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CPerlSocket" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    arg2 = ST(1);
    result = (CPerlSocket *)new CPerlSocket(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlSocket, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_GetPerlObj) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SV *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlSocket_GetPerlObj(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_GetPerlObj" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    result = (SV *)(arg1)->GetPerlObj();
    ST(argvi) = result; argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CPerlSocket) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CPerlSocket(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPerlSocket" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_Connected) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlSocket_Connected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_Connected" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    (arg1)->Connected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_Disconnected) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlSocket_Disconnected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_Disconnected" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    (arg1)->Disconnected();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_Timeout) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlSocket_Timeout(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_Timeout" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    (arg1)->Timeout();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_ConnectionRefused) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CPerlSocket_ConnectionRefused(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_ConnectionRefused" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    (arg1)->ConnectionRefused();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_ReadData) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlSocket_ReadData(self,data,len);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_ReadData" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlSocket_ReadData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPerlSocket_ReadData" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    (arg1)->ReadData((char const *)arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_ReadLine) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CPerlSocket_ReadLine(self,sLine);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_ReadLine" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlSocket_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlSocket_ReadLine" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->ReadLine((CString const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_CPerlSocket_GetSockObj) {
  {
    CPerlSocket *arg1 = (CPerlSocket *) 0 ;
    CString *arg2 = 0 ;
    unsigned short arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    unsigned short val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Csock *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CPerlSocket_GetSockObj(self,sHost,uPort);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlSocket, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPerlSocket_GetSockObj" "', argument " "1"" of type '" "CPerlSocket *""'"); 
    }
    arg1 = reinterpret_cast< CPerlSocket * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPerlSocket_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPerlSocket_GetSockObj" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPerlSocket_GetSockObj" "', argument " "3"" of type '" "unsigned short""'");
    } 
    arg3 = static_cast< unsigned short >(val3);
    result = (Csock *)(arg1)->GetSockObj((CString const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Csock, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    SWIG_croak_null();
  }
}


XS(_wrap_CreatePerlSocket) {
  {
    CPerlModule *arg1 = (CPerlModule *) 0 ;
    SV *arg2 = (SV *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CPerlSocket *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CreatePerlSocket(pModule,perlObj);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_CPerlModule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreatePerlSocket" "', argument " "1"" of type '" "CPerlModule *""'"); 
    }
    arg1 = reinterpret_cast< CPerlModule * >(argp1);
    arg2 = ST(1);
    result = (CPerlSocket *)CreatePerlSocket(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CPerlSocket, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_HaveIPv6) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: HaveIPv6();");
    }
    result = (bool)HaveIPv6();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_HaveSSL) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: HaveSSL();");
    }
    result = (bool)HaveSSL();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap__GetSOMAXCONN) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: _GetSOMAXCONN();");
    }
    result = (int)_GetSOMAXCONN();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_GetVersionMajor) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetVersionMajor();");
    }
    result = (int)GetVersionMajor();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_GetVersionMinor) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetVersionMinor();");
    }
    result = (int)GetVersionMinor();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_GetVersion) {
  {
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetVersion();");
    }
    result = (double)GetVersion();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_GetVersionExtra) {
  {
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: GetVersionExtra();");
    }
    result = GetVersionExtra();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_0) {
  {
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_String();");
    }
    result = (String *)new String();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_1) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(s);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_String" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_String" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    result = (String *)new String((CString const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_2) {
  {
    double arg1 ;
    int arg2 ;
    double val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_String(d,prec);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_String" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (String *)new String(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_3) {
  {
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(d);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_4) {
  {
    float arg1 ;
    int arg2 ;
    float val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_String(f,prec);");
    }
    ecode1 = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "float""'");
    } 
    arg1 = static_cast< float >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_String" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (String *)new String(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_5) {
  {
    float arg1 ;
    float val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(f);");
    }
    ecode1 = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "float""'");
    } 
    arg1 = static_cast< float >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_6) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_7) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_8) {
  {
    long arg1 ;
    long val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "long""'");
    } 
    arg1 = static_cast< long >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_9) {
  {
    unsigned long arg1 ;
    unsigned long val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "unsigned long""'");
    } 
    arg1 = static_cast< unsigned long >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_10) {
  {
    char arg1 ;
    char val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(c);");
    }
    ecode1 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "char""'");
    } 
    arg1 = static_cast< char >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_11) {
  {
    unsigned char arg1 ;
    unsigned char val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(c);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "unsigned char""'");
    } 
    arg1 = static_cast< unsigned char >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_12) {
  {
    short arg1 ;
    short val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "short""'");
    } 
    arg1 = static_cast< short >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_13) {
  {
    unsigned short arg1 ;
    unsigned short val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(i);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "unsigned short""'");
    } 
    arg1 = static_cast< unsigned short >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String__SWIG_14) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    String *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_String(b);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_String" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    result = (String *)new String(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_String) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_char SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 10;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_10:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 11;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_11:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 12;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_12:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 13;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_13:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_float SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 14;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_14:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 15;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_15:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_14); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_11); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_13); return;
    case 5:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_12); return;
    case 6:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_7); return;
    case 7:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_6); return;
    case 8:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_9); return;
    case 9:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_8); return;
    case 10:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_5); return;
    case 11:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_3); return;
    case 12:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_10); return;
    case 13:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_1); return;
    case 14:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_4); return;
    case 15:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_String__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_String'");
  XSRETURN(0);
}


XS(_wrap_String_GetPerlStr) {
  {
    String *arg1 = (String *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: String_GetPerlStr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_String, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "String_GetPerlStr" "', argument " "1"" of type '" "String *""'"); 
    }
    arg1 = reinterpret_cast< String * >(argp1);
    result = (arg1)->GetPerlStr();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_String) {
  {
    String *arg1 = (String *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_String(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_String, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_String" "', argument " "1"" of type '" "String *""'"); 
    }
    arg1 = reinterpret_cast< String * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StrPair__SWIG_0) {
  {
    int argvi = 0;
    std::pair< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_StrPair();");
    }
    result = (std::pair< CString,CString > *)new std::pair< CString,CString >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_StrPair__SWIG_1) {
  {
    CString arg1 ;
    CString arg2 ;
    int argvi = 0;
    std::pair< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_StrPair(t,u);");
    }
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_StrPair" "', argument " "1"" of type '" "CString""'");
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    {
      CString *ptr = (CString *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_StrPair" "', argument " "2"" of type '" "CString""'");
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) free((char*)ptr);
    }
    result = (std::pair< CString,CString > *)new std::pair< CString,CString >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StrPair__SWIG_2) {
  {
    std::pair< CString,CString > *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::pair< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_StrPair(p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__pairT_CString_CString_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    result = (std::pair< CString,CString > *)new std::pair< CString,CString >((std::pair< CString,CString > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StrPair) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__pairT_CString_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (CString**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_StrPair__SWIG_0); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_StrPair__SWIG_2); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_StrPair__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_StrPair'");
  XSRETURN(0);
}


XS(_wrap_StrPair_first_set) {
  {
    std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StrPair_first_set(self,first);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_first_set" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrPair_first_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StrPair_first_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    if (arg1) (arg1)->first = *arg2;
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_StrPair_first_get) {
  {
    std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StrPair_first_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_first_get" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    result = (CString *) & ((arg1)->first);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StrPair_second_set) {
  {
    std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
    CString *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StrPair_second_set(self,second);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_second_set" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StrPair_second_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StrPair_second_set" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    if (arg1) (arg1)->second = *arg2;
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    SWIG_croak_null();
  }
}


XS(_wrap_StrPair_second_get) {
  {
    std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    CString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StrPair_second_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StrPair_second_get" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    result = (CString *) & ((arg1)->second);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((CString)(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_StrPair) {
  {
    std::pair< CString,CString > *arg1 = (std::pair< CString,CString > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_StrPair(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StrPair" "', argument " "1"" of type '" "std::pair< CString,CString > *""'"); 
    }
    arg1 = reinterpret_cast< std::pair< CString,CString > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VPair__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< std::pair< CString,CString > > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VPair(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VPair" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VPair__SWIG_1) {
  {
    int argvi = 0;
    std::vector< std::pair< CString,CString > > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VPair();");
    }
    result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VPair__SWIG_2) {
  {
    unsigned int arg1 ;
    std::pair< CString,CString > *arg2 = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::vector< std::pair< CString,CString > > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VPair(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VPair" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__pairT_CString_CString_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VPair" "', argument " "2"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VPair" "', argument " "2"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    arg2 = reinterpret_cast< std::pair< CString,CString > * >(argp2);
    result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >(arg1,(std::pair< CString,CString > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VPair__SWIG_3) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = 0 ;
    std::vector< std::pair< CString,CString > > temp1 ;
    std::vector< std::pair< CString,CString > > *v1 ;
    int argvi = 0;
    std::vector< std::pair< CString,CString > > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VPair(std::vector< std::pair< CString,CString > > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VPair. "
          "Expected an array of " "std::pair< CString,CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::pair< CString,CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__pairT_CString_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VPair. "
              "Expected an array of " "std::pair< CString,CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VPair. "
          "Expected an array of " "std::pair< CString,CString >");
      }
    }
    result = (std::vector< std::pair< CString,CString > > *)new std::vector< std::pair< CString,CString > >((std::vector< std::pair< CString,CString > > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VPair) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<std::pair< CString,CString > >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  std::pair< CString,CString >* obj;
                  SV **tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_std__pairT_CString_CString_t,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__pairT_CString_CString_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VPair__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VPair__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VPair__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VPair__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VPair'");
  XSRETURN(0);
}


XS(_wrap_VPair_size) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    std::vector< std::pair< CString,CString > > temp1 ;
    std::vector< std::pair< CString,CString > > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VPair_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VPair_size. "
          "Expected an array of " "std::pair< CString,CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::pair< CString,CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__pairT_CString_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VPair_size. "
              "Expected an array of " "std::pair< CString,CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VPair_size. "
          "Expected an array of " "std::pair< CString,CString >");
      }
    }
    result = (unsigned int)((std::vector< std::pair< CString,CString > > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_empty) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    std::vector< std::pair< CString,CString > > temp1 ;
    std::vector< std::pair< CString,CString > > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VPair_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VPair_empty. "
          "Expected an array of " "std::pair< CString,CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::pair< CString,CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__pairT_CString_CString_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VPair_empty. "
              "Expected an array of " "std::pair< CString,CString >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VPair_empty. "
          "Expected an array of " "std::pair< CString,CString >");
      }
    }
    result = (bool)((std::vector< std::pair< CString,CString > > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_clear) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VPair_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_clear" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_push) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    std::pair< CString,CString > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VPair_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_push" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__pairT_CString_CString_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VPair_push" "', argument " "2"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_push" "', argument " "2"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    arg2 = reinterpret_cast< std::pair< CString,CString > * >(argp2);
    (arg1)->push_back((std::pair< CString,CString > const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_pop) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::pair< CString,CString > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VPair_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_pop" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    try {
      result = std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj((new std::pair< CString,CString >(static_cast< const std::pair< CString,CString >& >(result))), SWIGTYPE_p_std__pairT_CString_CString_t, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_get) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::pair< CString,CString > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VPair_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_get" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (std::pair< CString,CString > *) &std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__pairT_CString_CString_t, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VPair_set) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    int arg2 ;
    std::pair< CString,CString > *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VPair_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VPair_set" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VPair_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__pairT_CString_CString_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VPair_set" "', argument " "3"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VPair_set" "', argument " "3"" of type '" "std::pair< CString,CString > const &""'"); 
    }
    arg3 = reinterpret_cast< std::pair< CString,CString > * >(argp3);
    try {
      std_vector_Sl_std_pair_Sl_CString_Sc_CString_Sg__Sg__set(arg1,arg2,(std::pair< CString,CString > const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VPair) {
  {
    std::vector< std::pair< CString,CString > > *arg1 = (std::vector< std::pair< CString,CString > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VPair(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VPair" "', argument " "1"" of type '" "std::vector< std::pair< CString,CString > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::pair< CString,CString > > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VWebSubPages__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< TWebSubPage > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VWebSubPages(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VWebSubPages__SWIG_1) {
  {
    int argvi = 0;
    std::vector< TWebSubPage > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_VWebSubPages();");
    }
    result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_VWebSubPages__SWIG_2) {
  {
    unsigned int arg1 ;
    CSmartPtr< CWebSubPage > *arg2 = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::vector< TWebSubPage > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_VWebSubPages(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_VWebSubPages" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VWebSubPages" "', argument " "2"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VWebSubPages" "', argument " "2"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    arg2 = reinterpret_cast< CSmartPtr< CWebSubPage > * >(argp2);
    result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >(arg1,(CSmartPtr< CWebSubPage > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VWebSubPages__SWIG_3) {
  {
    std::vector< CSmartPtr< CWebSubPage > > *arg1 = 0 ;
    std::vector< CSmartPtr< CWebSubPage > > temp1 ;
    std::vector< CSmartPtr< CWebSubPage > > *v1 ;
    int argvi = 0;
    std::vector< TWebSubPage > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_VWebSubPages(std::vector< CSmartPtr< CWebSubPage > > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_VWebSubPages. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
        SV **tv;
        I32 len = av_len(av) + 1;
        CSmartPtr< CWebSubPage >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_VWebSubPages. "
              "Expected an array of " "CSmartPtr< CWebSubPage >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_VWebSubPages. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
      }
    }
    result = (std::vector< TWebSubPage > *)new std::vector< TWebSubPage >((std::vector< CSmartPtr< CWebSubPage > > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_VWebSubPages) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<CSmartPtr< CWebSubPage > >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  CSmartPtr< CWebSubPage >* obj;
                  SV **tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VWebSubPages__SWIG_1); return;
    case 2:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VWebSubPages__SWIG_0); return;
    case 3:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VWebSubPages__SWIG_3); return;
    case 4:
      PUSHMARK(MARK); SWIG_CALLXS(_wrap_new_VWebSubPages__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_VWebSubPages'");
  XSRETURN(0);
}


XS(_wrap_VWebSubPages_size) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    std::vector< CSmartPtr< CWebSubPage > > temp1 ;
    std::vector< CSmartPtr< CWebSubPage > > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VWebSubPages_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VWebSubPages_size. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
        SV **tv;
        I32 len = av_len(av) + 1;
        CSmartPtr< CWebSubPage >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VWebSubPages_size. "
              "Expected an array of " "CSmartPtr< CWebSubPage >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VWebSubPages_size. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
      }
    }
    result = (unsigned int)((std::vector< TWebSubPage > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_empty) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    std::vector< CSmartPtr< CWebSubPage > > temp1 ;
    std::vector< CSmartPtr< CWebSubPage > > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VWebSubPages_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of VWebSubPages_empty. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
        SV **tv;
        I32 len = av_len(av) + 1;
        CSmartPtr< CWebSubPage >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "VWebSubPages_empty. "
              "Expected an array of " "CSmartPtr< CWebSubPage >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of VWebSubPages_empty. "
          "Expected an array of " "CSmartPtr< CWebSubPage >");
      }
    }
    result = (bool)((std::vector< TWebSubPage > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_clear) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VWebSubPages_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_clear" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_push) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    CSmartPtr< CWebSubPage > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VWebSubPages_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_push" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VWebSubPages_push" "', argument " "2"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_push" "', argument " "2"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    arg2 = reinterpret_cast< CSmartPtr< CWebSubPage > * >(argp2);
    (arg1)->push_back((CSmartPtr< CWebSubPage > const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_pop) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< CSmartPtr< CWebSubPage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: VWebSubPages_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_pop" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    try {
      result = std_vector_Sl_TWebSubPage_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj((new CSmartPtr< CWebSubPage >(static_cast< const CSmartPtr< CWebSubPage >& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_get) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    CSmartPtr< CWebSubPage > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: VWebSubPages_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_get" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (CSmartPtr< CWebSubPage > *) &std_vector_Sl_TWebSubPage_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_VWebSubPages_set) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    int arg2 ;
    CSmartPtr< CWebSubPage > *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: VWebSubPages_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VWebSubPages_set" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VWebSubPages_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_CSmartPtrT_CWebSubPage_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VWebSubPages_set" "', argument " "3"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VWebSubPages_set" "', argument " "3"" of type '" "CSmartPtr< CWebSubPage > const &""'"); 
    }
    arg3 = reinterpret_cast< CSmartPtr< CWebSubPage > * >(argp3);
    try {
      std_vector_Sl_TWebSubPage_Sg__set(arg1,arg2,(CSmartPtr< CWebSubPage > const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_VWebSubPages) {
  {
    std::vector< TWebSubPage > *arg1 = (std::vector< TWebSubPage > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_VWebSubPages(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VWebSubPages" "', argument " "1"" of type '" "std::vector< TWebSubPage > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< TWebSubPage > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap__VPair_Add2Str) {
  {
    VPair *arg1 = (VPair *) 0 ;
    CString *arg2 = 0 ;
    CString *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: _VPair_Add2Str(self,a,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_VPair_Add2Str" "', argument " "1"" of type '" "VPair *""'"); 
    }
    arg1 = reinterpret_cast< VPair * >(argp1);
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_VPair_Add2Str" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_VPair_Add2Str" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "_VPair_Add2Str" "', argument " "3"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_VPair_Add2Str" "', argument " "3"" of type '" "CString const &""'"); 
      }
      arg3 = ptr;
    }
    _VPair_Add2Str(arg1,(CString const &)*arg2,(CString const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    if (SWIG_IsNewObj(res3)) free((char*)arg3);
    SWIG_croak_null();
  }
}


XS(_wrap__CreateWebSubPage) {
  {
    CString *arg1 = 0 ;
    CString *arg2 = 0 ;
    VPair *arg3 = 0 ;
    unsigned int arg4 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    std::vector< std::pair< CString,CString > > temp3 ;
    std::vector< std::pair< CString,CString > > *v3 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< CSmartPtr< CWebSubPage > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: _CreateWebSubPage(sName,sTitle,vParams,uFlags);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_CreateWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_CreateWebSubPage" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    {
      CString *ptr = (CString *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "_CreateWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_CreateWebSubPage" "', argument " "2"" of type '" "CString const &""'"); 
      }
      arg2 = ptr;
    }
    {
      if (SWIG_ConvertPtr(ST(2),(void **) &v3, 
          SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t,1) != -1) {
        arg3 = v3;
      } else if (SvROK(ST(2))) {
        AV *av = (AV *)SvRV(ST(2));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 3 of _CreateWebSubPage. "
          "Expected an array of " "std::pair< CString,CString >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::pair< CString,CString >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__pairT_CString_CString_t,0) != -1) {
            temp3.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 3 of "
              "_CreateWebSubPage. "
              "Expected an array of " "std::pair< CString,CString >");
          }
        }
        arg3 = &temp3;
      } else {
        SWIG_croak("Type error in argument 3 of _CreateWebSubPage. "
          "Expected an array of " "std::pair< CString,CString >");
      }
    }
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "_CreateWebSubPage" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = _CreateWebSubPage((CString const &)*arg1,(CString const &)*arg2,(std::vector< std::pair< CString,CString > > const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj((new TWebSubPage(static_cast< const TWebSubPage& >(result))), SWIGTYPE_p_CSmartPtrT_CWebSubPage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    if (SWIG_IsNewObj(res2)) free((char*)arg2);
    
    
    SWIG_croak_null();
  }
}


XS(_wrap__CleanupStash) {
  {
    CString *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: _CleanupStash(sModname);");
    }
    {
      CString *ptr = (CString *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_CleanupStash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "_CleanupStash" "', argument " "1"" of type '" "CString const &""'"); 
      }
      arg1 = ptr;
    }
    _CleanupStash((CString const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) free((char*)arg1);
    SWIG_croak_null();
  }
}



/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CTableTo_p_std__vectorT_std__vectorT_CString_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::vector< std::vector< CString > > *)  ((CTable *) x));
}
static void *_p_CSSSLConnectionTo_p_CSConnection(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSConnection *)  ((CSSSLConnection *) x));
}
static void *_p_StringTo_p_CString(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CString *)  ((String *) x));
}
static void *_p_CTemplateTo_p_MCString(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((MCString *)  ((CTemplate *) x));
}
static void *_p_CFPTimerTo_p_CTimer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTimer *)  ((CFPTimer *) x));
}
static void *_p_CPerlTimerTo_p_CTimer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTimer *)  ((CPerlTimer *) x));
}
static void *_p_CBufferTo_p_std__dequeT_CBufLine_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::deque< CBufLine > *)  ((CBuffer *) x));
}
static void *_p_CPerlModuleTo_p_CModule(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CModule *)  ((CPerlModule *) x));
}
static void *_p_CTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *)  ((CTimer *) x));
}
static void *_p_CFPTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *) (CTimer *) ((CFPTimer *) x));
}
static void *_p_CPerlTimerTo_p_CCron(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CCron *) (CTimer *) ((CPerlTimer *) x));
}
static void *_p_CSocketManagerTo_p_std__vectorT_Csock_p_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::vector< Csock * > *)  ((CSocketManager *) x));
}
static void *_p_CSocketTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CSocket *) x));
}
static void *_p_CClientTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CClient *) x));
}
static void *_p_CIRCSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CIRCSock *) x));
}
static void *_p_CRealListenerTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CRealListener *) x));
}
static void *_p_CExecSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CExecSock *) x));
}
static void *_p_CIncomingConnectionTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *)  ((CIncomingConnection *) x));
}
static void *_p_CHTTPSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *) ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CPerlSocketTo_p_CZNCSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CZNCSock *) (CSocket *) ((CPerlSocket *) x));
}
static void *_p_CTemplateTo_p_std__mapT_CString_CString_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::map< CString,CString > *) (MCString *) ((CTemplate *) x));
}
static void *_p_MCStringTo_p_std__mapT_CString_CString_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::map< CString,CString > *)  ((MCString *) x));
}
static void *_p_CSockManagerTo_p_TSocketManagerT_CZNCSock_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((TSocketManager< CZNCSock > *)  ((CSockManager *) x));
}
static void *_p_CZNCTagHandlerTo_p_CTemplateTagHandler(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CTemplateTagHandler *)  ((CZNCTagHandler *) x));
}
static void *_p_CSocketTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CSocket *) x));
}
static void *_p_CClientTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CClient *) x));
}
static void *_p_CIRCSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CIRCSock *) x));
}
static void *_p_CRealListenerTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CRealListener *) x));
}
static void *_p_CExecSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CExecSock *) x));
}
static void *_p_CZNCSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *)  ((CZNCSock *) x));
}
static void *_p_CIncomingConnectionTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *) ((CIncomingConnection *) x));
}
static void *_p_CHTTPSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *) ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CPerlSocketTo_p_Csock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Csock *) (CZNCSock *)(CSocket *) ((CPerlSocket *) x));
}
static void *_p_CHTTPSockTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *)  ((CHTTPSock *) x));
}
static void *_p_CWebSockTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *) (CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CPerlSocketTo_p_CSocket(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocket *)  ((CPerlSocket *) x));
}
static void *_p_CWebSockTo_p_CHTTPSock(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CHTTPSock *)  ((CWebSock *) x));
}
static void *_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModuleTo_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &))  ((CPerlModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &)) x));
}
static void *_p_CClientAuthTo_p_CAuthBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CAuthBase *)  ((CClientAuth *) x));
}
static void *_p_CClientTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CClient *) x));
}
static void *_p_CSocketTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CSocket *) x));
}
static void *_p_CIncomingConnectionTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CIncomingConnection *) x));
}
static void *_p_CSockManagerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (CSocketManager *)(TSocketManager< CZNCSock > *) ((CSockManager *) x));
}
static void *_p_CSocketManagerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *)  ((CSocketManager *) x));
}
static void *_p_CPerlSocketTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *) ((CPerlSocket *) x));
}
static void *_p_CExecSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CExecSock *) x));
}
static void *_p_CHTTPSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *) ((CHTTPSock *) x));
}
static void *_p_CZNCSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *) ((CZNCSock *) x));
}
static void *_p_CWebSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *)(CSocket *)(CHTTPSock *) ((CWebSock *) x));
}
static void *_p_CRealListenerTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CRealListener *) x));
}
static void *_p_CIRCSockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (Csock *)(CZNCSock *) ((CIRCSock *) x));
}
static void *_p_CsockTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *)  ((Csock *) x));
}
static void *_p_TSocketManagerT_CZNCSock_tTo_p_CSockCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSockCommon *) (CSocketManager *) ((TSocketManager< CZNCSock > *) x));
}
static void *_p_TSocketManagerT_CZNCSock_tTo_p_CSocketManager(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocketManager *)  ((TSocketManager< CZNCSock > *) x));
}
static void *_p_CSockManagerTo_p_CSocketManager(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CSocketManager *) (TSocketManager< CZNCSock > *) ((CSockManager *) x));
}
static swig_type_info _swigt__m_CModule__f_r_q_const__CString__void = {"_m_CModule__f_r_q_const__CString__void", "void (CModule::*)(CString const &)|CModCommand::ModCmdFunc", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CAuthBase = {"_p_CAuthBase", "CAuthBase *", 0, 0, (void*)"ZNC::CAuthBase", 0};
static swig_type_info _swigt__p_CBufLine = {"_p_CBufLine", "std::deque< CBufLine >::value_type *|CBufLine *", 0, 0, (void*)"ZNC::CBufLine", 0};
static swig_type_info _swigt__p_CBuffer = {"_p_CBuffer", "CBuffer *", 0, 0, (void*)"ZNC::CBuffer", 0};
static swig_type_info _swigt__p_CChan = {"_p_CChan", "CChan *", 0, 0, (void*)"ZNC::CChan", 0};
static swig_type_info _swigt__p_CClient = {"_p_CClient", "CClient *", 0, 0, (void*)"ZNC::CClient", 0};
static swig_type_info _swigt__p_CClientAuth = {"_p_CClientAuth", "CClientAuth *", 0, 0, (void*)"ZNC::CClientAuth", 0};
static swig_type_info _swigt__p_CConfig = {"_p_CConfig", "CConfig *", 0, 0, (void*)"ZNC::CConfig", 0};
static swig_type_info _swigt__p_CConfigEntry = {"_p_CConfigEntry", "CConfigEntry *", 0, 0, (void*)"ZNC::CConfigEntry", 0};
static swig_type_info _swigt__p_CConnectQueueTimer = {"_p_CConnectQueueTimer", "CConnectQueueTimer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CCron = {"_p_CCron", "CCron *", 0, 0, (void*)"ZNC::CCron", 0};
static swig_type_info _swigt__p_CDebug = {"_p_CDebug", "CDebug *", 0, 0, (void*)"ZNC::CDebug", 0};
static swig_type_info _swigt__p_CDebugStream = {"_p_CDebugStream", "CDebugStream *", 0, 0, (void*)"ZNC::CDebugStream", 0};
static swig_type_info _swigt__p_CDir = {"_p_CDir", "CDir *", 0, 0, (void*)"ZNC::CDir", 0};
static swig_type_info _swigt__p_CException = {"_p_CException", "CException *", 0, 0, (void*)"ZNC::CException", 0};
static swig_type_info _swigt__p_CExecSock = {"_p_CExecSock", "CExecSock *", 0, 0, (void*)"ZNC::CExecSock", 0};
static swig_type_info _swigt__p_CFPTimer = {"_p_CFPTimer", "CFPTimer *", 0, 0, (void*)"ZNC::CFPTimer", 0};
static swig_type_info _swigt__p_CFile = {"_p_CFile", "CFile *", 0, 0, (void*)"ZNC::CFile", 0};
static swig_type_info _swigt__p_CGetAddrInfo = {"_p_CGetAddrInfo", "CGetAddrInfo *", 0, 0, (void*)"ZNC::CGetAddrInfo", 0};
static swig_type_info _swigt__p_CHTTPSock = {"_p_CHTTPSock", "CHTTPSock *", 0, 0, (void*)"ZNC::CHTTPSock", 0};
static swig_type_info _swigt__p_CIRCNetwork = {"_p_CIRCNetwork", "CIRCNetwork *", 0, 0, (void*)"ZNC::CIRCNetwork", 0};
static swig_type_info _swigt__p_CIRCSock = {"_p_CIRCSock", "CIRCSock *", 0, 0, (void*)"ZNC::CIRCSock", 0};
static swig_type_info _swigt__p_CIncomingConnection = {"_p_CIncomingConnection", "CIncomingConnection *", 0, 0, (void*)"ZNC::CIncomingConnection", 0};
static swig_type_info _swigt__p_CListener = {"_p_CListener", "CListener *", 0, 0, (void*)"ZNC::CListener", 0};
static swig_type_info _swigt__p_CModCommand = {"_p_CModCommand", "CModCommand *", 0, 0, (void*)"ZNC::CModCommand", 0};
static swig_type_info _swigt__p_CModInfo = {"_p_CModInfo", "CModInfo *", 0, 0, (void*)"ZNC::CModInfo", 0};
static swig_type_info _swigt__p_CModule = {"_p_CModule", "CModule *", 0, 0, (void*)"ZNC::CModule", 0};
static swig_type_info _swigt__p_CModules = {"_p_CModules", "CModules *", 0, 0, (void*)"ZNC::CModules", 0};
static swig_type_info _swigt__p_CNick = {"_p_CNick", "CNick *", 0, 0, (void*)"ZNC::CNick", 0};
static swig_type_info _swigt__p_CPerlModule = {"_p_CPerlModule", "CPerlModule *", 0, 0, (void*)"ZNC::CPerlModule", 0};
static swig_type_info _swigt__p_CPerlSocket = {"_p_CPerlSocket", "CPerlSocket *", 0, 0, (void*)"ZNC::CPerlSocket", 0};
static swig_type_info _swigt__p_CPerlTimer = {"_p_CPerlTimer", "CPerlTimer *", 0, 0, (void*)"ZNC::CPerlTimer", 0};
static swig_type_info _swigt__p_CRealListener = {"_p_CRealListener", "CRealListener *", 0, 0, (void*)"ZNC::CRealListener", 0};
static swig_type_info _swigt__p_CSCharBuffer = {"_p_CSCharBuffer", "CSCharBuffer *", 0, 0, (void*)"ZNC::CSCharBuffer", 0};
static swig_type_info _swigt__p_CSConnection = {"_p_CSConnection", "CSConnection *", 0, 0, (void*)"ZNC::CSConnection", 0};
static swig_type_info _swigt__p_CSListener = {"_p_CSListener", "CSListener *", 0, 0, (void*)"ZNC::CSListener", 0};
static swig_type_info _swigt__p_CSMonitorFD = {"_p_CSMonitorFD", "CSMonitorFD *", 0, 0, (void*)"ZNC::CSMonitorFD", 0};
static swig_type_info _swigt__p_CSSSLConnection = {"_p_CSSSLConnection", "CSSSLConnection *", 0, 0, (void*)"ZNC::CSSSLConnection", 0};
static swig_type_info _swigt__p_CSSockAddr = {"_p_CSSockAddr", "CSSockAddr *", 0, 0, (void*)"ZNC::CSSockAddr", 0};
static swig_type_info _swigt__p_CServer = {"_p_CServer", "CServer *", 0, 0, (void*)"ZNC::CServer", 0};
static swig_type_info _swigt__p_CSmartPtrT_CAuthBase_t = {"_p_CSmartPtrT_CAuthBase_t", "CSmartPtr< CAuthBase > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CTemplateOptions_t = {"_p_CSmartPtrT_CTemplateOptions_t", "CSmartPtr< CTemplateOptions > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CTemplateTagHandler_t = {"_p_CSmartPtrT_CTemplateTagHandler_t", "CSmartPtr< CTemplateTagHandler > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CWebSession_t = {"_p_CSmartPtrT_CWebSession_t", "CSmartPtr< CWebSession > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSmartPtrT_CWebSubPage_t = {"_p_CSmartPtrT_CWebSubPage_t", "CSmartPtr< CWebSubPage > *|TWebSubPage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSockCommon = {"_p_CSockCommon", "CSockCommon *", 0, 0, (void*)"ZNC::CSockCommon", 0};
static swig_type_info _swigt__p_CSockManager = {"_p_CSockManager", "CSockManager *", 0, 0, (void*)"ZNC::CSockManager", 0};
static swig_type_info _swigt__p_CSocket = {"_p_CSocket", "CSocket *", 0, 0, (void*)"ZNC::CSocket", 0};
static swig_type_info _swigt__p_CSocketManager = {"_p_CSocketManager", "CSocketManager *", 0, 0, (void*)"ZNC::CSocketManager", 0};
static swig_type_info _swigt__p_CString = {"_p_CString", "CString *", 0, 0, (void*)"ZNC::CString", 0};
static swig_type_info _swigt__p_CString__EEscape = {"_p_CString__EEscape", "CString::EEscape *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CTable = {"_p_CTable", "CTable *", 0, 0, (void*)"ZNC::CTable", 0};
static swig_type_info _swigt__p_CTemplate = {"_p_CTemplate", "CTemplate *", 0, 0, (void*)"ZNC::CTemplate", 0};
static swig_type_info _swigt__p_CTemplateLoopContext = {"_p_CTemplateLoopContext", "CTemplateLoopContext *", 0, 0, (void*)"ZNC::CTemplateLoopContext", 0};
static swig_type_info _swigt__p_CTemplateOptions = {"_p_CTemplateOptions", "CTemplateOptions *", 0, 0, (void*)"ZNC::CTemplateOptions", 0};
static swig_type_info _swigt__p_CTemplateTagHandler = {"_p_CTemplateTagHandler", "CTemplateTagHandler *", 0, 0, (void*)"ZNC::CTemplateTagHandler", 0};
static swig_type_info _swigt__p_CTimer = {"_p_CTimer", "CTimer *", 0, 0, (void*)"ZNC::CTimer", 0};
static swig_type_info _swigt__p_CUser = {"_p_CUser", "CUser *", 0, 0, (void*)"ZNC::CUser", 0};
static swig_type_info _swigt__p_CUtils = {"_p_CUtils", "CUtils *", 0, 0, (void*)"ZNC::CUtils", 0};
static swig_type_info _swigt__p_CWebSession = {"_p_CWebSession", "CWebSession *", 0, 0, (void*)"ZNC::CWebSession", 0};
static swig_type_info _swigt__p_CWebSessionMap = {"_p_CWebSessionMap", "CWebSessionMap *", 0, 0, (void*)"ZNC::CWebSessionMap", 0};
static swig_type_info _swigt__p_CWebSock = {"_p_CWebSock", "CWebSock *", 0, 0, (void*)"ZNC::CWebSock", 0};
static swig_type_info _swigt__p_CWebSubPage = {"_p_CWebSubPage", "CWebSubPage *", 0, 0, (void*)"ZNC::CWebSubPage", 0};
static swig_type_info _swigt__p_CZNC = {"_p_CZNC", "CZNC *", 0, 0, (void*)"ZNC::CZNC", 0};
static swig_type_info _swigt__p_CZNCSock = {"_p_CZNCSock", "CZNCSock *", 0, 0, (void*)"ZNC::CZNCSock", 0};
static swig_type_info _swigt__p_CZNCTagHandler = {"_p_CZNCTagHandler", "CZNCTagHandler *", 0, 0, (void*)"ZNC::CZNCTagHandler", 0};
static swig_type_info _swigt__p_Csock = {"_p_Csock", "Csock *", 0, 0, (void*)"ZNC::Csock", 0};
static swig_type_info _swigt__p_EAcceptType = {"_p_EAcceptType", "EAcceptType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EChanModeArgs = {"_p_EChanModeArgs", "EChanModeArgs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModException = {"_p_EModException", "EModException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModRet = {"_p_EModRet", "EModRet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModes = {"_p_EModes", "EModes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EModuleType = {"_p_EModuleType", "EModuleType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EType = {"_p_EType", "EType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EUserPerms = {"_p_EUserPerms", "EUserPerms *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EntryMap = {"_p_EntryMap", "EntryMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EntryMapIterator = {"_p_EntryMapIterator", "EntryMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MCString = {"_p_MCString", "MCString *", 0, 0, (void*)"ZNC::MCString", 0};
static swig_type_info _swigt__p_MCString__iterator = {"_p_MCString__iterator", "MCString::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModCmdFunc = {"_p_ModCmdFunc", "ModCmdFunc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModDirList = {"_p_ModDirList", "ModDirList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCString = {"_p_SCString", "SCString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_String = {"_p_String", "String *", 0, 0, (void*)"ZNC::String", 0};
static swig_type_info _swigt__p_SubConfig = {"_p_SubConfig", "SubConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubConfigMap = {"_p_SubConfigMap", "SubConfigMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubConfigMapIterator = {"_p_SubConfigMapIterator", "SubConfigMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TSocketManagerT_CZNCSock_t = {"_p_TSocketManagerT_CZNCSock_t", "TSocketManager< CZNCSock > *", 0, 0, (void*)"ZNC::ZNCSocketManager", 0};
static swig_type_info _swigt__p_TrafficStatsMap = {"_p_TrafficStatsMap", "TrafficStatsMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TrafficStatsPair = {"_p_TrafficStatsPair", "TrafficStatsPair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule = {"_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule", "CModule *(*)(ModHandle,CUser *,CIRCNetwork *,CString const &,CString const &)|CModInfo::ModLoader", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule = {"_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_p_CModule_p_CFPTimer__void = {"_p_f_p_CModule_p_CFPTimer__void", "void (*)(CModule *,CFPTimer *)|FPTimer_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__ostream__r_std__ostream = {"_p_f_r_std__ostream__r_std__ostream", "std::ostream &(*)(std::ostream &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fd_set = {"_p_fd_set", "fd_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gid_t = {"_p_gid_t", "gid_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_in_addr = {"_p_in_addr", "in_addr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "cs_sock_t *|int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int32_t = {"_p_int32_t", "int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mode_t = {"_p_mode_t", "mode_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_in = {"_p_sockaddr_in", "sockaddr_in *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sockaddr_storage = {"_p_sockaddr_storage", "sockaddr_storage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_socklen_t = {"_p_socklen_t", "socklen_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ssize_t = {"_p_ssize_t", "ssize_t *|cs_ssize_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stat = {"_p_stat", "stat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeT_CBufLine_t = {"_p_std__dequeT_CBufLine_t", "std::deque< CBufLine > *", 0, 0, (void*)"ZNC::BufLines", 0};
static swig_type_info _swigt__p_std__listT_CIRCNetwork_p_t = {"_p_std__listT_CIRCNetwork_p_t", "std::list< CIRCNetwork * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_CString_t = {"_p_std__listT_CString_t", "std::list< CString > *", 0, 0, (void*)"ZNC::_stringlist", 0};
static swig_type_info _swigt__p_std__mapT_CString_CConfigEntry_t = {"_p_std__mapT_CString_CConfigEntry_t", "std::map< CString,CConfigEntry > *|CConfig::SubConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_CNick_t = {"_p_std__mapT_CString_CNick_t", "std::map< CString,CNick > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_CString_t = {"_p_std__mapT_CString_CString_t", "std::map< CString,CString > *", 0, 0, (void*)"ZNC::PerlMCString", 0};
static swig_type_info _swigt__p_std__mapT_CString_CUser_p_t = {"_p_std__mapT_CString_CUser_p_t", "std::map< CString,CUser * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator = {"_p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator", "std::map< CString,std::map< CString,CConfigEntry > >::const_iterator *|CConfig::SubConfigMapIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t = {"_p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t", "std::map< CString,std::pair< unsigned long long,unsigned long long > > *|CZNC::TrafficStatsMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_std__vectorT_CString_t_t = {"_p_std__mapT_CString_std__vectorT_CString_t_t", "std::map< CString,std::vector< CString > > *|std::map< CString,VCString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator = {"_p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator", "CConfig::EntryMapIterator *|std::map< CString,std::vector< CString > >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_char_unsigned_int_t = {"_p_std__mapT_char_unsigned_int_t", "std::map< char,unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_short_t = {"_p_std__mapT_int_short_t", "std::map< int,short > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t = {"_p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t", "std::map< unsigned char,CIRCSock::EChanModeArgs > *|std::map< unsigned char,enum CIRCSock::EChanModeArgs > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_char_CString_t = {"_p_std__mapT_unsigned_char_CString_t", "std::map< unsigned char,CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_CString_CString_t = {"_p_std__pairT_CString_CString_t", "std::pair< CString,CString > *", 0, 0, (void*)"ZNC::StrPair", 0};
static swig_type_info _swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t = {"_p_std__pairT_unsigned_long_long_unsigned_long_long_t", "CZNC::TrafficStatsPair *|std::pair< unsigned long long,unsigned long long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__queueT_std__pairT_CString_CString_t_t = {"_p_std__queueT_std__pairT_CString_CString_t_t", "std::queue< std::pair< CString,CString > > *|CModules::ModDirList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_CChan_p_t = {"_p_std__setT_CChan_p_t", "std::set< CChan * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_CModInfo_t = {"_p_std__setT_CModInfo_t", "std::set< CModInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_CSocket_p_t__const_iterator = {"_p_std__setT_CSocket_p_t__const_iterator", "std::set< CSocket * >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_CString_t = {"_p_std__setT_CString_t", "std::set< CString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_CTimer_p_t__const_iterator = {"_p_std__setT_CTimer_p_t__const_iterator", "std::set< CTimer * >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_unsigned_char_t = {"_p_std__setT_unsigned_char_t", "std::set< unsigned char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CChan_p_t = {"_p_std__vectorT_CChan_p_t", "std::vector< CChan * > *", 0, 0, (void*)"ZNC::VChannels", 0};
static swig_type_info _swigt__p_std__vectorT_CClient_p_t = {"_p_std__vectorT_CClient_p_t", "std::vector< CClient * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CCron_p_t = {"_p_std__vectorT_CCron_p_t", "std::vector< CCron * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CIRCNetwork_p_t = {"_p_std__vectorT_CIRCNetwork_p_t", "std::vector< CIRCNetwork * > *", 0, 0, (void*)"ZNC::VIRCNetworks", 0};
static swig_type_info _swigt__p_std__vectorT_CListener_p_t = {"_p_std__vectorT_CListener_p_t", "std::vector< CListener * > *", 0, 0, (void*)"ZNC::VListeners", 0};
static swig_type_info _swigt__p_std__vectorT_CServer_p_t = {"_p_std__vectorT_CServer_p_t", "std::vector< CServer * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t = {"_p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t", "std::vector< CSmartPtr< CTemplateTagHandler > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_t = {"_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t", "std::vector< CSmartPtr< CWebSubPage > > *|std::vector< TWebSubPage > *|VWebSubPages *", 0, 0, (void*)"ZNC::VWebSubPages", 0};
static swig_type_info _swigt__p_std__vectorT_CString_t = {"_p_std__vectorT_CString_t", "std::vector< CString > *|VCString *", 0, 0, (void*)"ZNC::VCString", 0};
static swig_type_info _swigt__p_std__vectorT_CTemplate_p_t = {"_p_std__vectorT_CTemplate_p_t", "std::vector< CTemplate * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_Csock_p_t = {"_p_std__vectorT_Csock_p_t", "std::vector< Csock * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__pairT_CString_CString_t_t = {"_p_std__vectorT_std__pairT_CString_CString_t_t", "std::vector< std::pair< CString,CString > > *|VPair *", 0, 0, (void*)"ZNC::VPair", 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_CString_t_t = {"_p_std__vectorT_std__vectorT_CString_t_t", "std::vector< std::vector< CString > > *|std::vector< VCString > *", 0, 0, (void*)"ZNC::VVString", 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_timeval = {"_p_timeval", "timeval *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uid_t = {"_p_uid_t", "uid_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "ModHandle|void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__m_CModule__f_r_q_const__CString__void,
  &_swigt__p_CAuthBase,
  &_swigt__p_CBufLine,
  &_swigt__p_CBuffer,
  &_swigt__p_CChan,
  &_swigt__p_CClient,
  &_swigt__p_CClientAuth,
  &_swigt__p_CConfig,
  &_swigt__p_CConfigEntry,
  &_swigt__p_CConnectQueueTimer,
  &_swigt__p_CCron,
  &_swigt__p_CDebug,
  &_swigt__p_CDebugStream,
  &_swigt__p_CDir,
  &_swigt__p_CException,
  &_swigt__p_CExecSock,
  &_swigt__p_CFPTimer,
  &_swigt__p_CFile,
  &_swigt__p_CGetAddrInfo,
  &_swigt__p_CHTTPSock,
  &_swigt__p_CIRCNetwork,
  &_swigt__p_CIRCSock,
  &_swigt__p_CIncomingConnection,
  &_swigt__p_CListener,
  &_swigt__p_CModCommand,
  &_swigt__p_CModInfo,
  &_swigt__p_CModule,
  &_swigt__p_CModules,
  &_swigt__p_CNick,
  &_swigt__p_CPerlModule,
  &_swigt__p_CPerlSocket,
  &_swigt__p_CPerlTimer,
  &_swigt__p_CRealListener,
  &_swigt__p_CSCharBuffer,
  &_swigt__p_CSConnection,
  &_swigt__p_CSListener,
  &_swigt__p_CSMonitorFD,
  &_swigt__p_CSSSLConnection,
  &_swigt__p_CSSockAddr,
  &_swigt__p_CServer,
  &_swigt__p_CSmartPtrT_CAuthBase_t,
  &_swigt__p_CSmartPtrT_CTemplateOptions_t,
  &_swigt__p_CSmartPtrT_CTemplateTagHandler_t,
  &_swigt__p_CSmartPtrT_CWebSession_t,
  &_swigt__p_CSmartPtrT_CWebSubPage_t,
  &_swigt__p_CSockCommon,
  &_swigt__p_CSockManager,
  &_swigt__p_CSocket,
  &_swigt__p_CSocketManager,
  &_swigt__p_CString,
  &_swigt__p_CString__EEscape,
  &_swigt__p_CTable,
  &_swigt__p_CTemplate,
  &_swigt__p_CTemplateLoopContext,
  &_swigt__p_CTemplateOptions,
  &_swigt__p_CTemplateTagHandler,
  &_swigt__p_CTimer,
  &_swigt__p_CUser,
  &_swigt__p_CUtils,
  &_swigt__p_CWebSession,
  &_swigt__p_CWebSessionMap,
  &_swigt__p_CWebSock,
  &_swigt__p_CWebSubPage,
  &_swigt__p_CZNC,
  &_swigt__p_CZNCSock,
  &_swigt__p_CZNCTagHandler,
  &_swigt__p_Csock,
  &_swigt__p_EAcceptType,
  &_swigt__p_EChanModeArgs,
  &_swigt__p_EModException,
  &_swigt__p_EModRet,
  &_swigt__p_EModes,
  &_swigt__p_EModuleType,
  &_swigt__p_EType,
  &_swigt__p_EUserPerms,
  &_swigt__p_EntryMap,
  &_swigt__p_EntryMapIterator,
  &_swigt__p_MCString,
  &_swigt__p_MCString__iterator,
  &_swigt__p_ModCmdFunc,
  &_swigt__p_ModDirList,
  &_swigt__p_SCString,
  &_swigt__p_String,
  &_swigt__p_SubConfig,
  &_swigt__p_SubConfigMap,
  &_swigt__p_SubConfigMapIterator,
  &_swigt__p_TSocketManagerT_CZNCSock_t,
  &_swigt__p_TrafficStatsMap,
  &_swigt__p_TrafficStatsPair,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule,
  &_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule,
  &_swigt__p_f_p_CModule_p_CFPTimer__void,
  &_swigt__p_f_r_std__ostream__r_std__ostream,
  &_swigt__p_fd_set,
  &_swigt__p_gid_t,
  &_swigt__p_in_addr,
  &_swigt__p_int,
  &_swigt__p_int32_t,
  &_swigt__p_int64_t,
  &_swigt__p_key_type,
  &_swigt__p_long,
  &_swigt__p_mapped_type,
  &_swigt__p_mode_t,
  &_swigt__p_size_type,
  &_swigt__p_sockaddr_in,
  &_swigt__p_sockaddr_storage,
  &_swigt__p_socklen_t,
  &_swigt__p_ssize_t,
  &_swigt__p_stat,
  &_swigt__p_std__dequeT_CBufLine_t,
  &_swigt__p_std__listT_CIRCNetwork_p_t,
  &_swigt__p_std__listT_CString_t,
  &_swigt__p_std__mapT_CString_CConfigEntry_t,
  &_swigt__p_std__mapT_CString_CNick_t,
  &_swigt__p_std__mapT_CString_CString_t,
  &_swigt__p_std__mapT_CString_CUser_p_t,
  &_swigt__p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator,
  &_swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t,
  &_swigt__p_std__mapT_CString_std__vectorT_CString_t_t,
  &_swigt__p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator,
  &_swigt__p_std__mapT_char_unsigned_int_t,
  &_swigt__p_std__mapT_int_short_t,
  &_swigt__p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t,
  &_swigt__p_std__mapT_unsigned_char_CString_t,
  &_swigt__p_std__ostream,
  &_swigt__p_std__pairT_CString_CString_t,
  &_swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t,
  &_swigt__p_std__queueT_std__pairT_CString_CString_t_t,
  &_swigt__p_std__setT_CChan_p_t,
  &_swigt__p_std__setT_CModInfo_t,
  &_swigt__p_std__setT_CSocket_p_t__const_iterator,
  &_swigt__p_std__setT_CString_t,
  &_swigt__p_std__setT_CTimer_p_t__const_iterator,
  &_swigt__p_std__setT_unsigned_char_t,
  &_swigt__p_std__vectorT_CChan_p_t,
  &_swigt__p_std__vectorT_CClient_p_t,
  &_swigt__p_std__vectorT_CCron_p_t,
  &_swigt__p_std__vectorT_CIRCNetwork_p_t,
  &_swigt__p_std__vectorT_CListener_p_t,
  &_swigt__p_std__vectorT_CServer_p_t,
  &_swigt__p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t,
  &_swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,
  &_swigt__p_std__vectorT_CString_t,
  &_swigt__p_std__vectorT_CTemplate_p_t,
  &_swigt__p_std__vectorT_Csock_p_t,
  &_swigt__p_std__vectorT_std__pairT_CString_CString_t_t,
  &_swigt__p_std__vectorT_std__vectorT_CString_t_t,
  &_swigt__p_time_t,
  &_swigt__p_timeval,
  &_swigt__p_uid_t,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_void,
};

static swig_cast_info _swigc__m_CModule__f_r_q_const__CString__void[] = {  {&_swigt__m_CModule__f_r_q_const__CString__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CAuthBase[] = {  {&_swigt__p_CClientAuth, _p_CClientAuthTo_p_CAuthBase, 0, 0},  {&_swigt__p_CAuthBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBufLine[] = {  {&_swigt__p_CBufLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBuffer[] = {  {&_swigt__p_CBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CChan[] = {  {&_swigt__p_CChan, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CClient[] = {  {&_swigt__p_CClient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CClientAuth[] = {  {&_swigt__p_CClientAuth, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfig[] = {  {&_swigt__p_CConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConfigEntry[] = {  {&_swigt__p_CConfigEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CConnectQueueTimer[] = {  {&_swigt__p_CConnectQueueTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CCron[] = {  {&_swigt__p_CTimer, _p_CTimerTo_p_CCron, 0, 0},  {&_swigt__p_CCron, 0, 0, 0},  {&_swigt__p_CFPTimer, _p_CFPTimerTo_p_CCron, 0, 0},  {&_swigt__p_CPerlTimer, _p_CPerlTimerTo_p_CCron, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CDebug[] = {  {&_swigt__p_CDebug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CDebugStream[] = {  {&_swigt__p_CDebugStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CDir[] = {  {&_swigt__p_CDir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CException[] = {  {&_swigt__p_CException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CExecSock[] = {  {&_swigt__p_CExecSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CFPTimer[] = {  {&_swigt__p_CFPTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CFile[] = {  {&_swigt__p_CFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CGetAddrInfo[] = {  {&_swigt__p_CGetAddrInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CHTTPSock[] = {  {&_swigt__p_CHTTPSock, 0, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CHTTPSock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIRCNetwork[] = {  {&_swigt__p_CIRCNetwork, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIRCSock[] = {  {&_swigt__p_CIRCSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CIncomingConnection[] = {  {&_swigt__p_CIncomingConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CListener[] = {  {&_swigt__p_CListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModCommand[] = {  {&_swigt__p_CModCommand, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModInfo[] = {  {&_swigt__p_CModInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModule[] = {  {&_swigt__p_CPerlModule, _p_CPerlModuleTo_p_CModule, 0, 0},  {&_swigt__p_CModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CModules[] = {  {&_swigt__p_CModules, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CNick[] = {  {&_swigt__p_CNick, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPerlModule[] = {  {&_swigt__p_CPerlModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPerlSocket[] = {  {&_swigt__p_CPerlSocket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPerlTimer[] = {  {&_swigt__p_CPerlTimer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CRealListener[] = {  {&_swigt__p_CRealListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSCharBuffer[] = {  {&_swigt__p_CSCharBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSConnection[] = {  {&_swigt__p_CSConnection, 0, 0, 0},  {&_swigt__p_CSSSLConnection, _p_CSSSLConnectionTo_p_CSConnection, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSListener[] = {  {&_swigt__p_CSListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSMonitorFD[] = {  {&_swigt__p_CSMonitorFD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSSSLConnection[] = {  {&_swigt__p_CSSSLConnection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSSockAddr[] = {  {&_swigt__p_CSSockAddr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CServer[] = {  {&_swigt__p_CServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CAuthBase_t[] = {  {&_swigt__p_CSmartPtrT_CAuthBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CTemplateOptions_t[] = {  {&_swigt__p_CSmartPtrT_CTemplateOptions_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CTemplateTagHandler_t[] = {  {&_swigt__p_CSmartPtrT_CTemplateTagHandler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CWebSession_t[] = {  {&_swigt__p_CSmartPtrT_CWebSession_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSmartPtrT_CWebSubPage_t[] = {  {&_swigt__p_CSmartPtrT_CWebSubPage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSockCommon[] = {  {&_swigt__p_CClient, _p_CClientTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSocket, _p_CSocketTo_p_CSockCommon, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSocketManager, _p_CSocketManagerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CPerlSocket, _p_CPerlSocketTo_p_CSockCommon, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CSockCommon, 0, 0, 0},  {&_swigt__p_Csock, _p_CsockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CZNCSock, _p_CZNCSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_CSockCommon, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_CSockCommon, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, _p_TSocketManagerT_CZNCSock_tTo_p_CSockCommon, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSockManager[] = {  {&_swigt__p_CSockManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSocket[] = {  {&_swigt__p_CSocket, 0, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CSocket, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CSocket, 0, 0},  {&_swigt__p_CPerlSocket, _p_CPerlSocketTo_p_CSocket, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSocketManager[] = {  {&_swigt__p_CSocketManager, 0, 0, 0},  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_CSocketManager, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, _p_TSocketManagerT_CZNCSock_tTo_p_CSocketManager, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CString[] = {  {&_swigt__p_CString, 0, 0, 0},  {&_swigt__p_String, _p_StringTo_p_CString, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CString__EEscape[] = {  {&_swigt__p_CString__EEscape, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTable[] = {  {&_swigt__p_CTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplate[] = {  {&_swigt__p_CTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateLoopContext[] = {  {&_swigt__p_CTemplateLoopContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateOptions[] = {  {&_swigt__p_CTemplateOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTemplateTagHandler[] = {  {&_swigt__p_CTemplateTagHandler, 0, 0, 0},  {&_swigt__p_CZNCTagHandler, _p_CZNCTagHandlerTo_p_CTemplateTagHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTimer[] = {  {&_swigt__p_CTimer, 0, 0, 0},  {&_swigt__p_CFPTimer, _p_CFPTimerTo_p_CTimer, 0, 0},  {&_swigt__p_CPerlTimer, _p_CPerlTimerTo_p_CTimer, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CUser[] = {  {&_swigt__p_CUser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CUtils[] = {  {&_swigt__p_CUtils, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSession[] = {  {&_swigt__p_CWebSession, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSessionMap[] = {  {&_swigt__p_CWebSessionMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSock[] = {  {&_swigt__p_CWebSock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWebSubPage[] = {  {&_swigt__p_CWebSubPage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNC[] = {  {&_swigt__p_CZNC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNCSock[] = {  {&_swigt__p_CSocket, _p_CSocketTo_p_CZNCSock, 0, 0},  {&_swigt__p_CClient, _p_CClientTo_p_CZNCSock, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_CZNCSock, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CZNCSock, 0, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_CZNCSock, 0, 0},  {&_swigt__p_CPerlSocket, _p_CPerlSocketTo_p_CZNCSock, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_CZNCSock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CZNCTagHandler[] = {  {&_swigt__p_CZNCTagHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Csock[] = {  {&_swigt__p_CSocket, _p_CSocketTo_p_Csock, 0, 0},  {&_swigt__p_CClient, _p_CClientTo_p_Csock, 0, 0},  {&_swigt__p_CIRCSock, _p_CIRCSockTo_p_Csock, 0, 0},  {&_swigt__p_Csock, 0, 0, 0},  {&_swigt__p_CRealListener, _p_CRealListenerTo_p_Csock, 0, 0},  {&_swigt__p_CExecSock, _p_CExecSockTo_p_Csock, 0, 0},  {&_swigt__p_CZNCSock, _p_CZNCSockTo_p_Csock, 0, 0},  {&_swigt__p_CHTTPSock, _p_CHTTPSockTo_p_Csock, 0, 0},  {&_swigt__p_CWebSock, _p_CWebSockTo_p_Csock, 0, 0},  {&_swigt__p_CPerlSocket, _p_CPerlSocketTo_p_Csock, 0, 0},  {&_swigt__p_CIncomingConnection, _p_CIncomingConnectionTo_p_Csock, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EAcceptType[] = {  {&_swigt__p_EAcceptType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EChanModeArgs[] = {  {&_swigt__p_EChanModeArgs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModException[] = {  {&_swigt__p_EModException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModRet[] = {  {&_swigt__p_EModRet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModes[] = {  {&_swigt__p_EModes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EModuleType[] = {  {&_swigt__p_EModuleType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EType[] = {  {&_swigt__p_EType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EUserPerms[] = {  {&_swigt__p_EUserPerms, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EntryMap[] = {  {&_swigt__p_EntryMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EntryMapIterator[] = {  {&_swigt__p_EntryMapIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MCString[] = {  {&_swigt__p_CTemplate, _p_CTemplateTo_p_MCString, 0, 0},  {&_swigt__p_MCString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MCString__iterator[] = {  {&_swigt__p_MCString__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModCmdFunc[] = {  {&_swigt__p_ModCmdFunc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModDirList[] = {  {&_swigt__p_ModDirList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCString[] = {  {&_swigt__p_SCString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_String[] = {  {&_swigt__p_String, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfig[] = {  {&_swigt__p_SubConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfigMap[] = {  {&_swigt__p_SubConfigMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubConfigMapIterator[] = {  {&_swigt__p_SubConfigMapIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TSocketManagerT_CZNCSock_t[] = {  {&_swigt__p_CSockManager, _p_CSockManagerTo_p_TSocketManagerT_CZNCSock_t, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrafficStatsMap[] = {  {&_swigt__p_TrafficStatsMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrafficStatsPair[] = {  {&_swigt__p_TrafficStatsPair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule[] = {{&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule[] = {  {&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule, 0, 0, 0},  {&_swigt__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule, _p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModuleTo_p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_CModule_p_CFPTimer__void[] = {  {&_swigt__p_f_p_CModule_p_CFPTimer__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ostream__r_std__ostream[] = {  {&_swigt__p_f_r_std__ostream__r_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fd_set[] = {  {&_swigt__p_fd_set, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gid_t[] = {  {&_swigt__p_gid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_in_addr[] = {  {&_swigt__p_in_addr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int32_t[] = {  {&_swigt__p_int32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mode_t[] = {  {&_swigt__p_mode_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_in[] = {  {&_swigt__p_sockaddr_in, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sockaddr_storage[] = {  {&_swigt__p_sockaddr_storage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_socklen_t[] = {  {&_swigt__p_socklen_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ssize_t[] = {  {&_swigt__p_ssize_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stat[] = {  {&_swigt__p_stat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeT_CBufLine_t[] = {  {&_swigt__p_CBuffer, _p_CBufferTo_p_std__dequeT_CBufLine_t, 0, 0},  {&_swigt__p_std__dequeT_CBufLine_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_CIRCNetwork_p_t[] = {  {&_swigt__p_std__listT_CIRCNetwork_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_CString_t[] = {  {&_swigt__p_std__listT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_CConfigEntry_t[] = {  {&_swigt__p_std__mapT_CString_CConfigEntry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_CNick_t[] = {  {&_swigt__p_std__mapT_CString_CNick_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_CString_t[] = {  {&_swigt__p_std__mapT_CString_CString_t, 0, 0, 0},  {&_swigt__p_CTemplate, _p_CTemplateTo_p_std__mapT_CString_CString_t, 0, 0},  {&_swigt__p_MCString, _p_MCStringTo_p_std__mapT_CString_CString_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_CUser_p_t[] = {  {&_swigt__p_std__mapT_CString_CUser_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator[] = {  {&_swigt__p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t[] = {  {&_swigt__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_std__vectorT_CString_t_t[] = {  {&_swigt__p_std__mapT_CString_std__vectorT_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator[] = {  {&_swigt__p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_char_unsigned_int_t[] = {  {&_swigt__p_std__mapT_char_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_short_t[] = {  {&_swigt__p_std__mapT_int_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t[] = {  {&_swigt__p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_char_CString_t[] = {  {&_swigt__p_std__mapT_unsigned_char_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_CString_CString_t[] = {  {&_swigt__p_std__pairT_CString_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_unsigned_long_long_unsigned_long_long_t[] = {  {&_swigt__p_std__pairT_unsigned_long_long_unsigned_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__queueT_std__pairT_CString_CString_t_t[] = {  {&_swigt__p_std__queueT_std__pairT_CString_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_CChan_p_t[] = {  {&_swigt__p_std__setT_CChan_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_CModInfo_t[] = {  {&_swigt__p_std__setT_CModInfo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_CSocket_p_t__const_iterator[] = {  {&_swigt__p_std__setT_CSocket_p_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_CString_t[] = {  {&_swigt__p_std__setT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_CTimer_p_t__const_iterator[] = {  {&_swigt__p_std__setT_CTimer_p_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_unsigned_char_t[] = {  {&_swigt__p_std__setT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CChan_p_t[] = {  {&_swigt__p_std__vectorT_CChan_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CClient_p_t[] = {  {&_swigt__p_std__vectorT_CClient_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CCron_p_t[] = {  {&_swigt__p_std__vectorT_CCron_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CIRCNetwork_p_t[] = {  {&_swigt__p_std__vectorT_CIRCNetwork_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CListener_p_t[] = {  {&_swigt__p_std__vectorT_CListener_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CServer_p_t[] = {  {&_swigt__p_std__vectorT_CServer_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t[] = {  {&_swigt__p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CSmartPtrT_CWebSubPage_t_t[] = {  {&_swigt__p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CString_t[] = {  {&_swigt__p_std__vectorT_CString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_CTemplate_p_t[] = {  {&_swigt__p_std__vectorT_CTemplate_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_Csock_p_t[] = {  {&_swigt__p_std__vectorT_Csock_p_t, 0, 0, 0},  {&_swigt__p_CSocketManager, _p_CSocketManagerTo_p_std__vectorT_Csock_p_t, 0, 0},  {&_swigt__p_CSockManager, 0, 0, 0},  {&_swigt__p_TSocketManagerT_CZNCSock_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__pairT_CString_CString_t_t[] = {  {&_swigt__p_std__vectorT_std__pairT_CString_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_CString_t_t[] = {  {&_swigt__p_CTable, _p_CTableTo_p_std__vectorT_std__vectorT_CString_t_t, 0, 0},  {&_swigt__p_std__vectorT_std__vectorT_CString_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_timeval[] = {  {&_swigt__p_timeval, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uid_t[] = {  {&_swigt__p_uid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__m_CModule__f_r_q_const__CString__void,
  _swigc__p_CAuthBase,
  _swigc__p_CBufLine,
  _swigc__p_CBuffer,
  _swigc__p_CChan,
  _swigc__p_CClient,
  _swigc__p_CClientAuth,
  _swigc__p_CConfig,
  _swigc__p_CConfigEntry,
  _swigc__p_CConnectQueueTimer,
  _swigc__p_CCron,
  _swigc__p_CDebug,
  _swigc__p_CDebugStream,
  _swigc__p_CDir,
  _swigc__p_CException,
  _swigc__p_CExecSock,
  _swigc__p_CFPTimer,
  _swigc__p_CFile,
  _swigc__p_CGetAddrInfo,
  _swigc__p_CHTTPSock,
  _swigc__p_CIRCNetwork,
  _swigc__p_CIRCSock,
  _swigc__p_CIncomingConnection,
  _swigc__p_CListener,
  _swigc__p_CModCommand,
  _swigc__p_CModInfo,
  _swigc__p_CModule,
  _swigc__p_CModules,
  _swigc__p_CNick,
  _swigc__p_CPerlModule,
  _swigc__p_CPerlSocket,
  _swigc__p_CPerlTimer,
  _swigc__p_CRealListener,
  _swigc__p_CSCharBuffer,
  _swigc__p_CSConnection,
  _swigc__p_CSListener,
  _swigc__p_CSMonitorFD,
  _swigc__p_CSSSLConnection,
  _swigc__p_CSSockAddr,
  _swigc__p_CServer,
  _swigc__p_CSmartPtrT_CAuthBase_t,
  _swigc__p_CSmartPtrT_CTemplateOptions_t,
  _swigc__p_CSmartPtrT_CTemplateTagHandler_t,
  _swigc__p_CSmartPtrT_CWebSession_t,
  _swigc__p_CSmartPtrT_CWebSubPage_t,
  _swigc__p_CSockCommon,
  _swigc__p_CSockManager,
  _swigc__p_CSocket,
  _swigc__p_CSocketManager,
  _swigc__p_CString,
  _swigc__p_CString__EEscape,
  _swigc__p_CTable,
  _swigc__p_CTemplate,
  _swigc__p_CTemplateLoopContext,
  _swigc__p_CTemplateOptions,
  _swigc__p_CTemplateTagHandler,
  _swigc__p_CTimer,
  _swigc__p_CUser,
  _swigc__p_CUtils,
  _swigc__p_CWebSession,
  _swigc__p_CWebSessionMap,
  _swigc__p_CWebSock,
  _swigc__p_CWebSubPage,
  _swigc__p_CZNC,
  _swigc__p_CZNCSock,
  _swigc__p_CZNCTagHandler,
  _swigc__p_Csock,
  _swigc__p_EAcceptType,
  _swigc__p_EChanModeArgs,
  _swigc__p_EModException,
  _swigc__p_EModRet,
  _swigc__p_EModes,
  _swigc__p_EModuleType,
  _swigc__p_EType,
  _swigc__p_EUserPerms,
  _swigc__p_EntryMap,
  _swigc__p_EntryMapIterator,
  _swigc__p_MCString,
  _swigc__p_MCString__iterator,
  _swigc__p_ModCmdFunc,
  _swigc__p_ModDirList,
  _swigc__p_SCString,
  _swigc__p_String,
  _swigc__p_SubConfig,
  _swigc__p_SubConfigMap,
  _swigc__p_SubConfigMapIterator,
  _swigc__p_TSocketManagerT_CZNCSock_t,
  _swigc__p_TrafficStatsMap,
  _swigc__p_TrafficStatsPair,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CModule,
  _swigc__p_f_ModHandle_p_CUser_p_CIRCNetwork_r_q_const__CString_r_q_const__CString__p_CPerlModule,
  _swigc__p_f_p_CModule_p_CFPTimer__void,
  _swigc__p_f_r_std__ostream__r_std__ostream,
  _swigc__p_fd_set,
  _swigc__p_gid_t,
  _swigc__p_in_addr,
  _swigc__p_int,
  _swigc__p_int32_t,
  _swigc__p_int64_t,
  _swigc__p_key_type,
  _swigc__p_long,
  _swigc__p_mapped_type,
  _swigc__p_mode_t,
  _swigc__p_size_type,
  _swigc__p_sockaddr_in,
  _swigc__p_sockaddr_storage,
  _swigc__p_socklen_t,
  _swigc__p_ssize_t,
  _swigc__p_stat,
  _swigc__p_std__dequeT_CBufLine_t,
  _swigc__p_std__listT_CIRCNetwork_p_t,
  _swigc__p_std__listT_CString_t,
  _swigc__p_std__mapT_CString_CConfigEntry_t,
  _swigc__p_std__mapT_CString_CNick_t,
  _swigc__p_std__mapT_CString_CString_t,
  _swigc__p_std__mapT_CString_CUser_p_t,
  _swigc__p_std__mapT_CString_std__mapT_CString_CConfigEntry_t_t__const_iterator,
  _swigc__p_std__mapT_CString_std__pairT_unsigned_long_long_unsigned_long_long_t_t,
  _swigc__p_std__mapT_CString_std__vectorT_CString_t_t,
  _swigc__p_std__mapT_CString_std__vectorT_CString_t_t__const_iterator,
  _swigc__p_std__mapT_char_unsigned_int_t,
  _swigc__p_std__mapT_int_short_t,
  _swigc__p_std__mapT_unsigned_char_CIRCSock__EChanModeArgs_t,
  _swigc__p_std__mapT_unsigned_char_CString_t,
  _swigc__p_std__ostream,
  _swigc__p_std__pairT_CString_CString_t,
  _swigc__p_std__pairT_unsigned_long_long_unsigned_long_long_t,
  _swigc__p_std__queueT_std__pairT_CString_CString_t_t,
  _swigc__p_std__setT_CChan_p_t,
  _swigc__p_std__setT_CModInfo_t,
  _swigc__p_std__setT_CSocket_p_t__const_iterator,
  _swigc__p_std__setT_CString_t,
  _swigc__p_std__setT_CTimer_p_t__const_iterator,
  _swigc__p_std__setT_unsigned_char_t,
  _swigc__p_std__vectorT_CChan_p_t,
  _swigc__p_std__vectorT_CClient_p_t,
  _swigc__p_std__vectorT_CCron_p_t,
  _swigc__p_std__vectorT_CIRCNetwork_p_t,
  _swigc__p_std__vectorT_CListener_p_t,
  _swigc__p_std__vectorT_CServer_p_t,
  _swigc__p_std__vectorT_CSmartPtrT_CTemplateTagHandler_t_t,
  _swigc__p_std__vectorT_CSmartPtrT_CWebSubPage_t_t,
  _swigc__p_std__vectorT_CString_t,
  _swigc__p_std__vectorT_CTemplate_p_t,
  _swigc__p_std__vectorT_Csock_p_t,
  _swigc__p_std__vectorT_std__pairT_CString_CString_t_t,
  _swigc__p_std__vectorT_std__vectorT_CString_t_t,
  _swigc__p_time_t,
  _swigc__p_timeval,
  _swigc__p_uid_t,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_constant_info swig_constants[] = {
{0,0,0,0,0,0}
};
#ifdef __cplusplus
}
#endif
static swig_variable_info swig_variables[] = {
    { "ZNCc::g_HexDigits", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_g_HexDigits_get,0 },
    { "ZNCc::CS_BLOCKSIZE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CS_BLOCKSIZE_get,&SWIGTYPE_p_uint32_t },
{0,0,0,0}
};
static swig_command_info swig_commands[] = {
{"ZNCc::new_CString", _wrap_new_CString},
{"ZNCc::delete_CString", _wrap_delete_CString},
{"ZNCc::new__stringlist", _wrap_new__stringlist},
{"ZNCc::_stringlist_size", _wrap__stringlist_size},
{"ZNCc::_stringlist_empty", _wrap__stringlist_empty},
{"ZNCc::_stringlist_clear", _wrap__stringlist_clear},
{"ZNCc::_stringlist_push", _wrap__stringlist_push},
{"ZNCc::delete__stringlist", _wrap_delete__stringlist},
{"ZNCc::new_VIRCNetworks", _wrap_new_VIRCNetworks},
{"ZNCc::VIRCNetworks_size", _wrap_VIRCNetworks_size},
{"ZNCc::VIRCNetworks_empty", _wrap_VIRCNetworks_empty},
{"ZNCc::VIRCNetworks_clear", _wrap_VIRCNetworks_clear},
{"ZNCc::VIRCNetworks_push", _wrap_VIRCNetworks_push},
{"ZNCc::VIRCNetworks_pop", _wrap_VIRCNetworks_pop},
{"ZNCc::VIRCNetworks_get", _wrap_VIRCNetworks_get},
{"ZNCc::VIRCNetworks_set", _wrap_VIRCNetworks_set},
{"ZNCc::delete_VIRCNetworks", _wrap_delete_VIRCNetworks},
{"ZNCc::new_VChannels", _wrap_new_VChannels},
{"ZNCc::VChannels_size", _wrap_VChannels_size},
{"ZNCc::VChannels_empty", _wrap_VChannels_empty},
{"ZNCc::VChannels_clear", _wrap_VChannels_clear},
{"ZNCc::VChannels_push", _wrap_VChannels_push},
{"ZNCc::VChannels_pop", _wrap_VChannels_pop},
{"ZNCc::VChannels_get", _wrap_VChannels_get},
{"ZNCc::VChannels_set", _wrap_VChannels_set},
{"ZNCc::delete_VChannels", _wrap_delete_VChannels},
{"ZNCc::new_VCString", _wrap_new_VCString},
{"ZNCc::VCString_size", _wrap_VCString_size},
{"ZNCc::VCString_empty", _wrap_VCString_empty},
{"ZNCc::VCString_clear", _wrap_VCString_clear},
{"ZNCc::VCString_push", _wrap_VCString_push},
{"ZNCc::VCString_pop", _wrap_VCString_pop},
{"ZNCc::VCString_get", _wrap_VCString_get},
{"ZNCc::VCString_set", _wrap_VCString_set},
{"ZNCc::delete_VCString", _wrap_delete_VCString},
{"ZNCc::new_PerlMCString", _wrap_new_PerlMCString},
{"ZNCc::PerlMCString_size", _wrap_PerlMCString_size},
{"ZNCc::PerlMCString_empty", _wrap_PerlMCString_empty},
{"ZNCc::PerlMCString_clear", _wrap_PerlMCString_clear},
{"ZNCc::PerlMCString_get", _wrap_PerlMCString_get},
{"ZNCc::PerlMCString_set", _wrap_PerlMCString_set},
{"ZNCc::PerlMCString_del", _wrap_PerlMCString_del},
{"ZNCc::PerlMCString_has_key", _wrap_PerlMCString_has_key},
{"ZNCc::delete_PerlMCString", _wrap_delete_PerlMCString},
{"ZNCc::new_MCString", _wrap_new_MCString},
{"ZNCc::delete_MCString", _wrap_delete_MCString},
{"ZNCc::new_VListeners", _wrap_new_VListeners},
{"ZNCc::VListeners_size", _wrap_VListeners_size},
{"ZNCc::VListeners_empty", _wrap_VListeners_empty},
{"ZNCc::VListeners_clear", _wrap_VListeners_clear},
{"ZNCc::VListeners_push", _wrap_VListeners_push},
{"ZNCc::VListeners_pop", _wrap_VListeners_pop},
{"ZNCc::VListeners_get", _wrap_VListeners_get},
{"ZNCc::VListeners_set", _wrap_VListeners_set},
{"ZNCc::delete_VListeners", _wrap_delete_VListeners},
{"ZNCc::BufLines_empty", _wrap_BufLines_empty},
{"ZNCc::new_BufLines", _wrap_new_BufLines},
{"ZNCc::delete_BufLines", _wrap_delete_BufLines},
{"ZNCc::BufLines_assign", _wrap_BufLines_assign},
{"ZNCc::BufLines_swap", _wrap_BufLines_swap},
{"ZNCc::BufLines_size", _wrap_BufLines_size},
{"ZNCc::BufLines_max_size", _wrap_BufLines_max_size},
{"ZNCc::BufLines_resize", _wrap_BufLines_resize},
{"ZNCc::BufLines_front", _wrap_BufLines_front},
{"ZNCc::BufLines_back", _wrap_BufLines_back},
{"ZNCc::BufLines_push_front", _wrap_BufLines_push_front},
{"ZNCc::BufLines_push_back", _wrap_BufLines_push_back},
{"ZNCc::BufLines_pop_front", _wrap_BufLines_pop_front},
{"ZNCc::BufLines_pop_back", _wrap_BufLines_pop_back},
{"ZNCc::BufLines_clear", _wrap_BufLines_clear},
{"ZNCc::BufLines_getitem", _wrap_BufLines_getitem},
{"ZNCc::BufLines_setitem", _wrap_BufLines_setitem},
{"ZNCc::BufLines_delitem", _wrap_BufLines_delitem},
{"ZNCc::BufLines_getslice", _wrap_BufLines_getslice},
{"ZNCc::BufLines_setslice", _wrap_BufLines_setslice},
{"ZNCc::BufLines_delslice", _wrap_BufLines_delslice},
{"ZNCc::new_VVString", _wrap_new_VVString},
{"ZNCc::VVString_size", _wrap_VVString_size},
{"ZNCc::VVString_empty", _wrap_VVString_empty},
{"ZNCc::VVString_clear", _wrap_VVString_clear},
{"ZNCc::VVString_push", _wrap_VVString_push},
{"ZNCc::VVString_pop", _wrap_VVString_pop},
{"ZNCc::VVString_get", _wrap_VVString_get},
{"ZNCc::VVString_set", _wrap_VVString_set},
{"ZNCc::delete_VVString", _wrap_delete_VVString},
{"ZNCc::SetFdCloseOnExec", _wrap_SetFdCloseOnExec},
{"ZNCc::new_CUtils", _wrap_new_CUtils},
{"ZNCc::delete_CUtils", _wrap_delete_CUtils},
{"ZNCc::CUtils_GetIP", _wrap_CUtils_GetIP},
{"ZNCc::CUtils_GetLongIP", _wrap_CUtils_GetLongIP},
{"ZNCc::CUtils_PrintError", _wrap_CUtils_PrintError},
{"ZNCc::CUtils_PrintMessage", _wrap_CUtils_PrintMessage},
{"ZNCc::CUtils_PrintPrompt", _wrap_CUtils_PrintPrompt},
{"ZNCc::CUtils_PrintAction", _wrap_CUtils_PrintAction},
{"ZNCc::CUtils_PrintStatus", _wrap_CUtils_PrintStatus},
{"ZNCc::CUtils_GetSaltedHashPass", _wrap_CUtils_GetSaltedHashPass},
{"ZNCc::CUtils_GetSalt", _wrap_CUtils_GetSalt},
{"ZNCc::CUtils_SaltedMD5Hash", _wrap_CUtils_SaltedMD5Hash},
{"ZNCc::CUtils_SaltedSHA256Hash", _wrap_CUtils_SaltedSHA256Hash},
{"ZNCc::CUtils_GetPass", _wrap_CUtils_GetPass},
{"ZNCc::CUtils_GetInput", _wrap_CUtils_GetInput},
{"ZNCc::CUtils_GetBoolInput", _wrap_CUtils_GetBoolInput},
{"ZNCc::CUtils_GetNumInput", _wrap_CUtils_GetNumInput},
{"ZNCc::CUtils_GetMillTime", _wrap_CUtils_GetMillTime},
{"ZNCc::CUtils_CTime", _wrap_CUtils_CTime},
{"ZNCc::CUtils_FormatTime", _wrap_CUtils_FormatTime},
{"ZNCc::CUtils_GetTimezones", _wrap_CUtils_GetTimezones},
{"ZNCc::new_CException", _wrap_new_CException},
{"ZNCc::delete_CException", _wrap_delete_CException},
{"ZNCc::CException_GetType", _wrap_CException_GetType},
{"ZNCc::new_CTable", _wrap_new_CTable},
{"ZNCc::delete_CTable", _wrap_delete_CTable},
{"ZNCc::CTable_AddColumn", _wrap_CTable_AddColumn},
{"ZNCc::CTable_AddRow", _wrap_CTable_AddRow},
{"ZNCc::CTable_SetCell", _wrap_CTable_SetCell},
{"ZNCc::CTable_GetLine", _wrap_CTable_GetLine},
{"ZNCc::CTable_GetColumnWidth", _wrap_CTable_GetColumnWidth},
{"ZNCc::CTable_Clear", _wrap_CTable_Clear},
{"ZNCc::new_CConfigEntry", _wrap_new_CConfigEntry},
{"ZNCc::delete_CConfigEntry", _wrap_delete_CConfigEntry},
{"ZNCc::CConfigEntry_m_pSubConfig_set", _wrap_CConfigEntry_m_pSubConfig_set},
{"ZNCc::CConfigEntry_m_pSubConfig_get", _wrap_CConfigEntry_m_pSubConfig_get},
{"ZNCc::CConfig_BeginEntries", _wrap_CConfig_BeginEntries},
{"ZNCc::CConfig_EndEntries", _wrap_CConfig_EndEntries},
{"ZNCc::CConfig_BeginSubConfigs", _wrap_CConfig_BeginSubConfigs},
{"ZNCc::CConfig_EndSubConfigs", _wrap_CConfig_EndSubConfigs},
{"ZNCc::CConfig_AddKeyValuePair", _wrap_CConfig_AddKeyValuePair},
{"ZNCc::CConfig_AddSubConfig", _wrap_CConfig_AddSubConfig},
{"ZNCc::CConfig_FindStringVector", _wrap_CConfig_FindStringVector},
{"ZNCc::CConfig_FindStringEntry", _wrap_CConfig_FindStringEntry},
{"ZNCc::CConfig_FindBoolEntry", _wrap_CConfig_FindBoolEntry},
{"ZNCc::CConfig_FindUIntEntry", _wrap_CConfig_FindUIntEntry},
{"ZNCc::CConfig_FindUShortEntry", _wrap_CConfig_FindUShortEntry},
{"ZNCc::CConfig_FindDoubleEntry", _wrap_CConfig_FindDoubleEntry},
{"ZNCc::CConfig_FindSubConfig", _wrap_CConfig_FindSubConfig},
{"ZNCc::CConfig_empty", _wrap_CConfig_empty},
{"ZNCc::CConfig_Parse", _wrap_CConfig_Parse},
{"ZNCc::CConfig_Write", _wrap_CConfig_Write},
{"ZNCc::new_CConfig", _wrap_new_CConfig},
{"ZNCc::delete_CConfig", _wrap_delete_CConfig},
{"ZNCc::new_CSCharBuffer", _wrap_new_CSCharBuffer},
{"ZNCc::delete_CSCharBuffer", _wrap_delete_CSCharBuffer},
{"ZNCc::CSCharBuffer___call__", _wrap_CSCharBuffer___call__},
{"ZNCc::new_CSSockAddr", _wrap_new_CSSockAddr},
{"ZNCc::delete_CSSockAddr", _wrap_delete_CSSockAddr},
{"ZNCc::CSSockAddr_SinFamily", _wrap_CSSockAddr_SinFamily},
{"ZNCc::CSSockAddr_SinPort", _wrap_CSSockAddr_SinPort},
{"ZNCc::CSSockAddr_SetIPv6", _wrap_CSSockAddr_SetIPv6},
{"ZNCc::CSSockAddr_GetIPv6", _wrap_CSSockAddr_GetIPv6},
{"ZNCc::CSSockAddr_GetSockAddrLen", _wrap_CSSockAddr_GetSockAddrLen},
{"ZNCc::CSSockAddr_GetSockAddr", _wrap_CSSockAddr_GetSockAddr},
{"ZNCc::CSSockAddr_GetAddr", _wrap_CSSockAddr_GetAddr},
{"ZNCc::CSSockAddr_SetAFRequire", _wrap_CSSockAddr_SetAFRequire},
{"ZNCc::CSSockAddr_GetAFRequire", _wrap_CSSockAddr_GetAFRequire},
{"ZNCc::new_CGetAddrInfo", _wrap_new_CGetAddrInfo},
{"ZNCc::delete_CGetAddrInfo", _wrap_delete_CGetAddrInfo},
{"ZNCc::CGetAddrInfo_Init", _wrap_CGetAddrInfo_Init},
{"ZNCc::CGetAddrInfo_Process", _wrap_CGetAddrInfo_Process},
{"ZNCc::CGetAddrInfo_Finish", _wrap_CGetAddrInfo_Finish},
{"ZNCc::GetAddrInfo", _wrap_GetAddrInfo},
{"ZNCc::GetCsockClassIdx", _wrap_GetCsockClassIdx},
{"ZNCc::InitCsocket", _wrap_InitCsocket},
{"ZNCc::ShutdownCsocket", _wrap_ShutdownCsocket},
{"ZNCc::GetSockError", _wrap_GetSockError},
{"ZNCc::TFD_ZERO", _wrap_TFD_ZERO},
{"ZNCc::TFD_SET", _wrap_TFD_SET},
{"ZNCc::TFD_ISSET", _wrap_TFD_ISSET},
{"ZNCc::TFD_CLR", _wrap_TFD_CLR},
{"ZNCc::__Perror", _wrap___Perror},
{"ZNCc::millitime", _wrap_millitime},
{"ZNCc::new_CCron", _wrap_new_CCron},
{"ZNCc::delete_CCron", _wrap_delete_CCron},
{"ZNCc::CCron_run", _wrap_CCron_run},
{"ZNCc::CCron_StartMaxCycles", _wrap_CCron_StartMaxCycles},
{"ZNCc::CCron_Start", _wrap_CCron_Start},
{"ZNCc::CCron_Stop", _wrap_CCron_Stop},
{"ZNCc::CCron_Pause", _wrap_CCron_Pause},
{"ZNCc::CCron_UnPause", _wrap_CCron_UnPause},
{"ZNCc::CCron_GetInterval", _wrap_CCron_GetInterval},
{"ZNCc::CCron_GetMaxCycles", _wrap_CCron_GetMaxCycles},
{"ZNCc::CCron_GetCyclesLeft", _wrap_CCron_GetCyclesLeft},
{"ZNCc::CCron_isValid", _wrap_CCron_isValid},
{"ZNCc::CCron_GetName", _wrap_CCron_GetName},
{"ZNCc::CCron_SetName", _wrap_CCron_SetName},
{"ZNCc::CCron_GetNextRun", _wrap_CCron_GetNextRun},
{"ZNCc::CCron_RunJob", _wrap_CCron_RunJob},
{"ZNCc::new_CSMonitorFD", _wrap_new_CSMonitorFD},
{"ZNCc::delete_CSMonitorFD", _wrap_delete_CSMonitorFD},
{"ZNCc::CSMonitorFD_GatherFDsForSelect", _wrap_CSMonitorFD_GatherFDsForSelect},
{"ZNCc::CSMonitorFD_FDsThatTriggered", _wrap_CSMonitorFD_FDsThatTriggered},
{"ZNCc::CSMonitorFD_CheckFDs", _wrap_CSMonitorFD_CheckFDs},
{"ZNCc::CSMonitorFD_Add", _wrap_CSMonitorFD_Add},
{"ZNCc::CSMonitorFD_Remove", _wrap_CSMonitorFD_Remove},
{"ZNCc::CSMonitorFD_DisableMonitor", _wrap_CSMonitorFD_DisableMonitor},
{"ZNCc::CSMonitorFD_IsEnabled", _wrap_CSMonitorFD_IsEnabled},
{"ZNCc::new_CSockCommon", _wrap_new_CSockCommon},
{"ZNCc::delete_CSockCommon", _wrap_delete_CSockCommon},
{"ZNCc::CSockCommon_CleanupCrons", _wrap_CSockCommon_CleanupCrons},
{"ZNCc::CSockCommon_CleanupFDMonitors", _wrap_CSockCommon_CleanupFDMonitors},
{"ZNCc::CSockCommon_GetCrons", _wrap_CSockCommon_GetCrons},
{"ZNCc::CSockCommon_Cron", _wrap_CSockCommon_Cron},
{"ZNCc::CSockCommon_AddCron", _wrap_CSockCommon_AddCron},
{"ZNCc::CSockCommon_DelCron", _wrap_CSockCommon_DelCron},
{"ZNCc::CSockCommon_DelCronByAddr", _wrap_CSockCommon_DelCronByAddr},
{"ZNCc::CSockCommon_CheckFDs", _wrap_CSockCommon_CheckFDs},
{"ZNCc::CSockCommon_AssignFDs", _wrap_CSockCommon_AssignFDs},
{"ZNCc::CSockCommon_MonitorFD", _wrap_CSockCommon_MonitorFD},
{"ZNCc::new_Csock", _wrap_new_Csock},
{"ZNCc::Csock_GetSockObj", _wrap_Csock_GetSockObj},
{"ZNCc::delete_Csock", _wrap_delete_Csock},
{"ZNCc::Csock_Dereference", _wrap_Csock_Dereference},
{"ZNCc::Csock_Copy", _wrap_Csock_Copy},
{"ZNCc::Csock___lshift__", _wrap_Csock___lshift__},
{"ZNCc::Csock_Connect", _wrap_Csock_Connect},
{"ZNCc::Csock_Listen", _wrap_Csock_Listen},
{"ZNCc::Csock_Accept", _wrap_Csock_Accept},
{"ZNCc::Csock_AcceptSSL", _wrap_Csock_AcceptSSL},
{"ZNCc::Csock_SSLClientSetup", _wrap_Csock_SSLClientSetup},
{"ZNCc::Csock_SSLServerSetup", _wrap_Csock_SSLServerSetup},
{"ZNCc::Csock_ConnectSSL", _wrap_Csock_ConnectSSL},
{"ZNCc::Csock_StartTLS", _wrap_Csock_StartTLS},
{"ZNCc::Csock_Write", _wrap_Csock_Write},
{"ZNCc::Csock_Read", _wrap_Csock_Read},
{"ZNCc::Csock_GetLocalIP", _wrap_Csock_GetLocalIP},
{"ZNCc::Csock_GetRemoteIP", _wrap_Csock_GetRemoteIP},
{"ZNCc::Csock_IsConnected", _wrap_Csock_IsConnected},
{"ZNCc::Csock_SetIsConnected", _wrap_Csock_SetIsConnected},
{"ZNCc::Csock_GetRSock", _wrap_Csock_GetRSock},
{"ZNCc::Csock_SetRSock", _wrap_Csock_SetRSock},
{"ZNCc::Csock_GetWSock", _wrap_Csock_GetWSock},
{"ZNCc::Csock_SetWSock", _wrap_Csock_SetWSock},
{"ZNCc::Csock_SetSock", _wrap_Csock_SetSock},
{"ZNCc::Csock_GetSock", _wrap_Csock_GetSock},
{"ZNCc::Csock_CallSockError", _wrap_Csock_CallSockError},
{"ZNCc::Csock_ResetTimer", _wrap_Csock_ResetTimer},
{"ZNCc::Csock_PauseRead", _wrap_Csock_PauseRead},
{"ZNCc::Csock_UnPauseRead", _wrap_Csock_UnPauseRead},
{"ZNCc::Csock_IsReadPaused", _wrap_Csock_IsReadPaused},
{"ZNCc::Csock_SetTimeout", _wrap_Csock_SetTimeout},
{"ZNCc::Csock_SetTimeoutType", _wrap_Csock_SetTimeoutType},
{"ZNCc::Csock_GetTimeout", _wrap_Csock_GetTimeout},
{"ZNCc::Csock_GetTimeoutType", _wrap_Csock_GetTimeoutType},
{"ZNCc::Csock_CheckTimeout", _wrap_Csock_CheckTimeout},
{"ZNCc::Csock_PushBuff", _wrap_Csock_PushBuff},
{"ZNCc::Csock_GetInternalReadBuffer", _wrap_Csock_GetInternalReadBuffer},
{"ZNCc::Csock_GetInternalWriteBuffer", _wrap_Csock_GetInternalWriteBuffer},
{"ZNCc::Csock_SetMaxBufferThreshold", _wrap_Csock_SetMaxBufferThreshold},
{"ZNCc::Csock_GetMaxBufferThreshold", _wrap_Csock_GetMaxBufferThreshold},
{"ZNCc::Csock_GetType", _wrap_Csock_GetType},
{"ZNCc::Csock_SetType", _wrap_Csock_SetType},
{"ZNCc::Csock_GetSockName", _wrap_Csock_GetSockName},
{"ZNCc::Csock_SetSockName", _wrap_Csock_SetSockName},
{"ZNCc::Csock_GetHostName", _wrap_Csock_GetHostName},
{"ZNCc::Csock_SetHostName", _wrap_Csock_SetHostName},
{"ZNCc::Csock_GetStartTime", _wrap_Csock_GetStartTime},
{"ZNCc::Csock_ResetStartTime", _wrap_Csock_ResetStartTime},
{"ZNCc::Csock_GetBytesRead", _wrap_Csock_GetBytesRead},
{"ZNCc::Csock_ResetBytesRead", _wrap_Csock_ResetBytesRead},
{"ZNCc::Csock_GetBytesWritten", _wrap_Csock_GetBytesWritten},
{"ZNCc::Csock_ResetBytesWritten", _wrap_Csock_ResetBytesWritten},
{"ZNCc::Csock_GetAvgRead", _wrap_Csock_GetAvgRead},
{"ZNCc::Csock_GetAvgWrite", _wrap_Csock_GetAvgWrite},
{"ZNCc::Csock_GetRemotePort", _wrap_Csock_GetRemotePort},
{"ZNCc::Csock_GetLocalPort", _wrap_Csock_GetLocalPort},
{"ZNCc::Csock_GetPort", _wrap_Csock_GetPort},
{"ZNCc::Csock_SetPort", _wrap_Csock_SetPort},
{"ZNCc::Csock_Close", _wrap_Csock_Close},
{"ZNCc::Csock_GetCloseType", _wrap_Csock_GetCloseType},
{"ZNCc::Csock_IsClosed", _wrap_Csock_IsClosed},
{"ZNCc::Csock_NonBlockingIO", _wrap_Csock_NonBlockingIO},
{"ZNCc::Csock_GetSSL", _wrap_Csock_GetSSL},
{"ZNCc::Csock_SetSSL", _wrap_Csock_SetSSL},
{"ZNCc::Csock_GetWriteBuffer", _wrap_Csock_GetWriteBuffer},
{"ZNCc::Csock_ClearWriteBuffer", _wrap_Csock_ClearWriteBuffer},
{"ZNCc::Csock_SslIsEstablished", _wrap_Csock_SslIsEstablished},
{"ZNCc::Csock_ConnectInetd", _wrap_Csock_ConnectInetd},
{"ZNCc::Csock_ConnectFD", _wrap_Csock_ConnectFD},
{"ZNCc::Csock_SetParentSockName", _wrap_Csock_SetParentSockName},
{"ZNCc::Csock_GetParentSockName", _wrap_Csock_GetParentSockName},
{"ZNCc::Csock_SetRate", _wrap_Csock_SetRate},
{"ZNCc::Csock_GetRateBytes", _wrap_Csock_GetRateBytes},
{"ZNCc::Csock_GetRateTime", _wrap_Csock_GetRateTime},
{"ZNCc::Csock_Connected", _wrap_Csock_Connected},
{"ZNCc::Csock_Disconnected", _wrap_Csock_Disconnected},
{"ZNCc::Csock_Timeout", _wrap_Csock_Timeout},
{"ZNCc::Csock_ReadData", _wrap_Csock_ReadData},
{"ZNCc::Csock_ReadLine", _wrap_Csock_ReadLine},
{"ZNCc::Csock_EnableReadLine", _wrap_Csock_EnableReadLine},
{"ZNCc::Csock_DisableReadLine", _wrap_Csock_DisableReadLine},
{"ZNCc::Csock_HasReadLine", _wrap_Csock_HasReadLine},
{"ZNCc::Csock_ReachedMaxBuffer", _wrap_Csock_ReachedMaxBuffer},
{"ZNCc::Csock_SockError", _wrap_Csock_SockError},
{"ZNCc::Csock_ConnectionFrom", _wrap_Csock_ConnectionFrom},
{"ZNCc::Csock_Listening", _wrap_Csock_Listening},
{"ZNCc::Csock_ConnectionRefused", _wrap_Csock_ConnectionRefused},
{"ZNCc::Csock_ReadPaused", _wrap_Csock_ReadPaused},
{"ZNCc::Csock_GetTimeSinceLastDataTransaction", _wrap_Csock_GetTimeSinceLastDataTransaction},
{"ZNCc::Csock_GetLastCheckTimeout", _wrap_Csock_GetLastCheckTimeout},
{"ZNCc::Csock_GetNextCheckTimeout", _wrap_Csock_GetNextCheckTimeout},
{"ZNCc::Csock_GetPending", _wrap_Csock_GetPending},
{"ZNCc::Csock_GetConState", _wrap_Csock_GetConState},
{"ZNCc::Csock_SetConState", _wrap_Csock_SetConState},
{"ZNCc::Csock_CreateSocksFD", _wrap_Csock_CreateSocksFD},
{"ZNCc::Csock_CloseSocksFD", _wrap_Csock_CloseSocksFD},
{"ZNCc::Csock_GetBindHost", _wrap_Csock_GetBindHost},
{"ZNCc::Csock_SetBindHost", _wrap_Csock_SetBindHost},
{"ZNCc::Csock_DNSLookup", _wrap_Csock_DNSLookup},
{"ZNCc::Csock_SetupVHost", _wrap_Csock_SetupVHost},
{"ZNCc::Csock_GetIPv6", _wrap_Csock_GetIPv6},
{"ZNCc::Csock_SetIPv6", _wrap_Csock_SetIPv6},
{"ZNCc::Csock_SetAFRequire", _wrap_Csock_SetAFRequire},
{"ZNCc::Csock_AllowWrite", _wrap_Csock_AllowWrite},
{"ZNCc::Csock_SetSkipConnect", _wrap_Csock_SetSkipConnect},
{"ZNCc::Csock_GetAddrInfo", _wrap_Csock_GetAddrInfo},
{"ZNCc::Csock_ConvertAddress", _wrap_Csock_ConvertAddress},
{"ZNCc::Csock_GetMaxConns", _wrap_Csock_GetMaxConns},
{"ZNCc::new_CSConnection", _wrap_new_CSConnection},
{"ZNCc::delete_CSConnection", _wrap_delete_CSConnection},
{"ZNCc::CSConnection_GetHostname", _wrap_CSConnection_GetHostname},
{"ZNCc::CSConnection_GetSockName", _wrap_CSConnection_GetSockName},
{"ZNCc::CSConnection_GetBindHost", _wrap_CSConnection_GetBindHost},
{"ZNCc::CSConnection_GetPort", _wrap_CSConnection_GetPort},
{"ZNCc::CSConnection_GetTimeout", _wrap_CSConnection_GetTimeout},
{"ZNCc::CSConnection_GetIsSSL", _wrap_CSConnection_GetIsSSL},
{"ZNCc::CSConnection_GetAFRequire", _wrap_CSConnection_GetAFRequire},
{"ZNCc::CSConnection_SetHostname", _wrap_CSConnection_SetHostname},
{"ZNCc::CSConnection_SetSockName", _wrap_CSConnection_SetSockName},
{"ZNCc::CSConnection_SetBindHost", _wrap_CSConnection_SetBindHost},
{"ZNCc::CSConnection_SetPort", _wrap_CSConnection_SetPort},
{"ZNCc::CSConnection_SetTimeout", _wrap_CSConnection_SetTimeout},
{"ZNCc::CSConnection_SetIsSSL", _wrap_CSConnection_SetIsSSL},
{"ZNCc::CSConnection_SetAFRequire", _wrap_CSConnection_SetAFRequire},
{"ZNCc::new_CSSSLConnection", _wrap_new_CSSSLConnection},
{"ZNCc::delete_CSSSLConnection", _wrap_delete_CSSSLConnection},
{"ZNCc::new_CSListener", _wrap_new_CSListener},
{"ZNCc::delete_CSListener", _wrap_delete_CSListener},
{"ZNCc::CSListener_SetDetach", _wrap_CSListener_SetDetach},
{"ZNCc::CSListener_GetDetach", _wrap_CSListener_GetDetach},
{"ZNCc::CSListener_GetPort", _wrap_CSListener_GetPort},
{"ZNCc::CSListener_GetSockName", _wrap_CSListener_GetSockName},
{"ZNCc::CSListener_GetBindHost", _wrap_CSListener_GetBindHost},
{"ZNCc::CSListener_GetIsSSL", _wrap_CSListener_GetIsSSL},
{"ZNCc::CSListener_GetMaxConns", _wrap_CSListener_GetMaxConns},
{"ZNCc::CSListener_GetTimeout", _wrap_CSListener_GetTimeout},
{"ZNCc::CSListener_GetAFRequire", _wrap_CSListener_GetAFRequire},
{"ZNCc::CSListener_SetPort", _wrap_CSListener_SetPort},
{"ZNCc::CSListener_SetSockName", _wrap_CSListener_SetSockName},
{"ZNCc::CSListener_SetBindHost", _wrap_CSListener_SetBindHost},
{"ZNCc::CSListener_SetIsSSL", _wrap_CSListener_SetIsSSL},
{"ZNCc::CSListener_SetMaxConns", _wrap_CSListener_SetMaxConns},
{"ZNCc::CSListener_SetTimeout", _wrap_CSListener_SetTimeout},
{"ZNCc::CSListener_SetAFRequire", _wrap_CSListener_SetAFRequire},
{"ZNCc::new_CSocketManager", _wrap_new_CSocketManager},
{"ZNCc::delete_CSocketManager", _wrap_delete_CSocketManager},
{"ZNCc::CSocketManager_clear", _wrap_CSocketManager_clear},
{"ZNCc::CSocketManager_Cleanup", _wrap_CSocketManager_Cleanup},
{"ZNCc::CSocketManager_GetSockObj", _wrap_CSocketManager_GetSockObj},
{"ZNCc::CSocketManager_Connect", _wrap_CSocketManager_Connect},
{"ZNCc::CSocketManager_Listen", _wrap_CSocketManager_Listen},
{"ZNCc::CSocketManager_HasFDs", _wrap_CSocketManager_HasFDs},
{"ZNCc::CSocketManager_Loop", _wrap_CSocketManager_Loop},
{"ZNCc::CSocketManager_DynamicSelectLoop", _wrap_CSocketManager_DynamicSelectLoop},
{"ZNCc::CSocketManager_AddSock", _wrap_CSocketManager_AddSock},
{"ZNCc::CSocketManager_FindSockByRemotePort", _wrap_CSocketManager_FindSockByRemotePort},
{"ZNCc::CSocketManager_FindSockByLocalPort", _wrap_CSocketManager_FindSockByLocalPort},
{"ZNCc::CSocketManager_FindSockByName", _wrap_CSocketManager_FindSockByName},
{"ZNCc::CSocketManager_FindSockByFD", _wrap_CSocketManager_FindSockByFD},
{"ZNCc::CSocketManager_FindSocksByName", _wrap_CSocketManager_FindSocksByName},
{"ZNCc::CSocketManager_FindSocksByRemoteHost", _wrap_CSocketManager_FindSocksByRemoteHost},
{"ZNCc::CSocketManager_GetErrno", _wrap_CSocketManager_GetErrno},
{"ZNCc::CSocketManager_GetSelectTimeout", _wrap_CSocketManager_GetSelectTimeout},
{"ZNCc::CSocketManager_SetSelectTimeout", _wrap_CSocketManager_SetSelectTimeout},
{"ZNCc::CSocketManager_DelSockByAddr", _wrap_CSocketManager_DelSockByAddr},
{"ZNCc::CSocketManager_DelSock", _wrap_CSocketManager_DelSock},
{"ZNCc::CSocketManager_SwapSockByIdx", _wrap_CSocketManager_SwapSockByIdx},
{"ZNCc::CSocketManager_SwapSockByAddr", _wrap_CSocketManager_SwapSockByAddr},
{"ZNCc::CSocketManager_GetBytesRead", _wrap_CSocketManager_GetBytesRead},
{"ZNCc::CSocketManager_GetBytesWritten", _wrap_CSocketManager_GetBytesWritten},
{"ZNCc::CSocketManager_FDSetCheck", _wrap_CSocketManager_FDSetCheck},
{"ZNCc::CSocketManager_FDHasCheck", _wrap_CSocketManager_FDHasCheck},
{"ZNCc::new_ZNCSocketManager", _wrap_new_ZNCSocketManager},
{"ZNCc::delete_ZNCSocketManager", _wrap_delete_ZNCSocketManager},
{"ZNCc::ZNCSocketManager_GetSockObj", _wrap_ZNCSocketManager_GetSockObj},
{"ZNCc::new_CZNCSock", _wrap_new_CZNCSock},
{"ZNCc::delete_CZNCSock", _wrap_delete_CZNCSock},
{"ZNCc::CZNCSock_ConvertAddress", _wrap_CZNCSock_ConvertAddress},
{"ZNCc::new_CSockManager", _wrap_new_CSockManager},
{"ZNCc::delete_CSockManager", _wrap_delete_CSockManager},
{"ZNCc::CSockManager_ListenHost", _wrap_CSockManager_ListenHost},
{"ZNCc::CSockManager_ListenAll", _wrap_CSockManager_ListenAll},
{"ZNCc::CSockManager_ListenRand", _wrap_CSockManager_ListenRand},
{"ZNCc::CSockManager_ListenAllRand", _wrap_CSockManager_ListenAllRand},
{"ZNCc::CSockManager_Connect", _wrap_CSockManager_Connect},
{"ZNCc::CSockManager_GetAnonConnectionCount", _wrap_CSockManager_GetAnonConnectionCount},
{"ZNCc::new_CSocket", _wrap_new_CSocket},
{"ZNCc::delete_CSocket", _wrap_delete_CSocket},
{"ZNCc::CSocket_ReachedMaxBuffer", _wrap_CSocket_ReachedMaxBuffer},
{"ZNCc::CSocket_SockError", _wrap_CSocket_SockError},
{"ZNCc::CSocket_ConnectionFrom", _wrap_CSocket_ConnectionFrom},
{"ZNCc::CSocket_Connect", _wrap_CSocket_Connect},
{"ZNCc::CSocket_Listen", _wrap_CSocket_Listen},
{"ZNCc::CSocket_GetModule", _wrap_CSocket_GetModule},
{"ZNCc::new_CFile", _wrap_new_CFile},
{"ZNCc::delete_CFile", _wrap_delete_CFile},
{"ZNCc::CFile_SetFileName", _wrap_CFile_SetFileName},
{"ZNCc::CFile_IsReg", _wrap_CFile_IsReg},
{"ZNCc::CFile_IsDir", _wrap_CFile_IsDir},
{"ZNCc::CFile_IsChr", _wrap_CFile_IsChr},
{"ZNCc::CFile_IsBlk", _wrap_CFile_IsBlk},
{"ZNCc::CFile_IsFifo", _wrap_CFile_IsFifo},
{"ZNCc::CFile_IsLnk", _wrap_CFile_IsLnk},
{"ZNCc::CFile_IsSock", _wrap_CFile_IsSock},
{"ZNCc::CFile_FType", _wrap_CFile_FType},
{"ZNCc::CFile_Exists", _wrap_CFile_Exists},
{"ZNCc::CFile_GetSize", _wrap_CFile_GetSize},
{"ZNCc::CFile_GetATime", _wrap_CFile_GetATime},
{"ZNCc::CFile_GetMTime", _wrap_CFile_GetMTime},
{"ZNCc::CFile_GetCTime", _wrap_CFile_GetCTime},
{"ZNCc::CFile_GetUID", _wrap_CFile_GetUID},
{"ZNCc::CFile_GetGID", _wrap_CFile_GetGID},
{"ZNCc::CFile_GetInfo", _wrap_CFile_GetInfo},
{"ZNCc::CFile_Delete", _wrap_CFile_Delete},
{"ZNCc::CFile_Move", _wrap_CFile_Move},
{"ZNCc::CFile_Copy", _wrap_CFile_Copy},
{"ZNCc::CFile_Chmod", _wrap_CFile_Chmod},
{"ZNCc::CFile_Seek", _wrap_CFile_Seek},
{"ZNCc::CFile_Truncate", _wrap_CFile_Truncate},
{"ZNCc::CFile_Sync", _wrap_CFile_Sync},
{"ZNCc::CFile_Open", _wrap_CFile_Open},
{"ZNCc::CFile_Read", _wrap_CFile_Read},
{"ZNCc::CFile_ReadLine", _wrap_CFile_ReadLine},
{"ZNCc::CFile_ReadFile", _wrap_CFile_ReadFile},
{"ZNCc::CFile_Write", _wrap_CFile_Write},
{"ZNCc::CFile_Close", _wrap_CFile_Close},
{"ZNCc::CFile_ClearBuffer", _wrap_CFile_ClearBuffer},
{"ZNCc::CFile_TryExLock", _wrap_CFile_TryExLock},
{"ZNCc::CFile_ExLock", _wrap_CFile_ExLock},
{"ZNCc::CFile_UnLock", _wrap_CFile_UnLock},
{"ZNCc::CFile_IsOpen", _wrap_CFile_IsOpen},
{"ZNCc::CFile_GetLongName", _wrap_CFile_GetLongName},
{"ZNCc::CFile_GetShortName", _wrap_CFile_GetShortName},
{"ZNCc::CFile_GetDir", _wrap_CFile_GetDir},
{"ZNCc::CFile_HadError", _wrap_CFile_HadError},
{"ZNCc::CFile_ResetError", _wrap_CFile_ResetError},
{"ZNCc::CFile_InitHomePath", _wrap_CFile_InitHomePath},
{"ZNCc::CFile_GetHomePath", _wrap_CFile_GetHomePath},
{"ZNCc::new_CDir", _wrap_new_CDir},
{"ZNCc::delete_CDir", _wrap_delete_CDir},
{"ZNCc::CDir_CleanUp", _wrap_CDir_CleanUp},
{"ZNCc::CDir_Fill", _wrap_CDir_Fill},
{"ZNCc::CDir_FillByWildcard", _wrap_CDir_FillByWildcard},
{"ZNCc::CDir_Chmod", _wrap_CDir_Chmod},
{"ZNCc::CDir_Delete", _wrap_CDir_Delete},
{"ZNCc::CDir_GetSortAttr", _wrap_CDir_GetSortAttr},
{"ZNCc::CDir_IsDescending", _wrap_CDir_IsDescending},
{"ZNCc::CDir_CheckPathPrefix", _wrap_CDir_CheckPathPrefix},
{"ZNCc::CDir_ChangeDir", _wrap_CDir_ChangeDir},
{"ZNCc::CDir_MakeDir", _wrap_CDir_MakeDir},
{"ZNCc::CDir_GetCWD", _wrap_CDir_GetCWD},
{"ZNCc::new_CTimer", _wrap_new_CTimer},
{"ZNCc::delete_CTimer", _wrap_delete_CTimer},
{"ZNCc::CTimer_SetModule", _wrap_CTimer_SetModule},
{"ZNCc::CTimer_SetDescription", _wrap_CTimer_SetDescription},
{"ZNCc::CTimer_GetModule", _wrap_CTimer_GetModule},
{"ZNCc::CTimer_GetDescription", _wrap_CTimer_GetDescription},
{"ZNCc::new_CFPTimer", _wrap_new_CFPTimer},
{"ZNCc::delete_CFPTimer", _wrap_delete_CFPTimer},
{"ZNCc::CFPTimer_SetFPCallback", _wrap_CFPTimer_SetFPCallback},
{"ZNCc::new_CModInfo", _wrap_new_CModInfo},
{"ZNCc::delete_CModInfo", _wrap_delete_CModInfo},
{"ZNCc::CModInfo___lt__", _wrap_CModInfo___lt__},
{"ZNCc::CModInfo_SupportsType", _wrap_CModInfo_SupportsType},
{"ZNCc::CModInfo_AddType", _wrap_CModInfo_AddType},
{"ZNCc::CModInfo_ModuleTypeToString", _wrap_CModInfo_ModuleTypeToString},
{"ZNCc::CModInfo_GetName", _wrap_CModInfo_GetName},
{"ZNCc::CModInfo_GetPath", _wrap_CModInfo_GetPath},
{"ZNCc::CModInfo_GetDescription", _wrap_CModInfo_GetDescription},
{"ZNCc::CModInfo_GetWikiPage", _wrap_CModInfo_GetWikiPage},
{"ZNCc::CModInfo_GetArgsHelpText", _wrap_CModInfo_GetArgsHelpText},
{"ZNCc::CModInfo_GetHasArgs", _wrap_CModInfo_GetHasArgs},
{"ZNCc::CModInfo_GetLoader", _wrap_CModInfo_GetLoader},
{"ZNCc::CModInfo_GetDefaultType", _wrap_CModInfo_GetDefaultType},
{"ZNCc::CModInfo_SetName", _wrap_CModInfo_SetName},
{"ZNCc::CModInfo_SetPath", _wrap_CModInfo_SetPath},
{"ZNCc::CModInfo_SetDescription", _wrap_CModInfo_SetDescription},
{"ZNCc::CModInfo_SetWikiPage", _wrap_CModInfo_SetWikiPage},
{"ZNCc::CModInfo_SetArgsHelpText", _wrap_CModInfo_SetArgsHelpText},
{"ZNCc::CModInfo_SetHasArgs", _wrap_CModInfo_SetHasArgs},
{"ZNCc::CModInfo_SetLoader", _wrap_CModInfo_SetLoader},
{"ZNCc::CModInfo_SetDefaultType", _wrap_CModInfo_SetDefaultType},
{"ZNCc::new_CModCommand", _wrap_new_CModCommand},
{"ZNCc::CModCommand_InitHelp", _wrap_CModCommand_InitHelp},
{"ZNCc::CModCommand_AddHelp", _wrap_CModCommand_AddHelp},
{"ZNCc::CModCommand_GetCommand", _wrap_CModCommand_GetCommand},
{"ZNCc::CModCommand_GetFunction", _wrap_CModCommand_GetFunction},
{"ZNCc::CModCommand_GetArgs", _wrap_CModCommand_GetArgs},
{"ZNCc::CModCommand_GetDescription", _wrap_CModCommand_GetDescription},
{"ZNCc::CModCommand_Call", _wrap_CModCommand_Call},
{"ZNCc::delete_CModCommand", _wrap_delete_CModCommand},
{"ZNCc::new_CModule", _wrap_new_CModule},
{"ZNCc::delete_CModule", _wrap_delete_CModule},
{"ZNCc::CModule_SetUser", _wrap_CModule_SetUser},
{"ZNCc::CModule_SetNetwork", _wrap_CModule_SetNetwork},
{"ZNCc::CModule_SetClient", _wrap_CModule_SetClient},
{"ZNCc::CModule_Unload", _wrap_CModule_Unload},
{"ZNCc::CModule_OnLoad", _wrap_CModule_OnLoad},
{"ZNCc::CModule_OnBoot", _wrap_CModule_OnBoot},
{"ZNCc::CModule_WebRequiresLogin", _wrap_CModule_WebRequiresLogin},
{"ZNCc::CModule_WebRequiresAdmin", _wrap_CModule_WebRequiresAdmin},
{"ZNCc::CModule_GetWebMenuTitle", _wrap_CModule_GetWebMenuTitle},
{"ZNCc::CModule_GetWebPath", _wrap_CModule_GetWebPath},
{"ZNCc::CModule_GetWebFilesPath", _wrap_CModule_GetWebFilesPath},
{"ZNCc::CModule_OnWebPreRequest", _wrap_CModule_OnWebPreRequest},
{"ZNCc::CModule_OnWebRequest", _wrap_CModule_OnWebRequest},
{"ZNCc::CModule_AddSubPage", _wrap_CModule_AddSubPage},
{"ZNCc::CModule_ClearSubPages", _wrap_CModule_ClearSubPages},
{"ZNCc::CModule_GetSubPages", _wrap_CModule_GetSubPages},
{"ZNCc::CModule_OnEmbeddedWebRequest", _wrap_CModule_OnEmbeddedWebRequest},
{"ZNCc::CModule_OnPreRehash", _wrap_CModule_OnPreRehash},
{"ZNCc::CModule_OnPostRehash", _wrap_CModule_OnPostRehash},
{"ZNCc::CModule_OnIRCDisconnected", _wrap_CModule_OnIRCDisconnected},
{"ZNCc::CModule_OnIRCConnected", _wrap_CModule_OnIRCConnected},
{"ZNCc::CModule_OnIRCConnecting", _wrap_CModule_OnIRCConnecting},
{"ZNCc::CModule_OnIRCConnectionError", _wrap_CModule_OnIRCConnectionError},
{"ZNCc::CModule_OnIRCRegistration", _wrap_CModule_OnIRCRegistration},
{"ZNCc::CModule_OnBroadcast", _wrap_CModule_OnBroadcast},
{"ZNCc::CModule_OnChanPermission", _wrap_CModule_OnChanPermission},
{"ZNCc::CModule_OnOp", _wrap_CModule_OnOp},
{"ZNCc::CModule_OnDeop", _wrap_CModule_OnDeop},
{"ZNCc::CModule_OnVoice", _wrap_CModule_OnVoice},
{"ZNCc::CModule_OnDevoice", _wrap_CModule_OnDevoice},
{"ZNCc::CModule_OnMode", _wrap_CModule_OnMode},
{"ZNCc::CModule_OnRawMode", _wrap_CModule_OnRawMode},
{"ZNCc::CModule_OnRaw", _wrap_CModule_OnRaw},
{"ZNCc::CModule_OnStatusCommand", _wrap_CModule_OnStatusCommand},
{"ZNCc::CModule_OnModCommand", _wrap_CModule_OnModCommand},
{"ZNCc::CModule_OnUnknownModCommand", _wrap_CModule_OnUnknownModCommand},
{"ZNCc::CModule_OnModNotice", _wrap_CModule_OnModNotice},
{"ZNCc::CModule_OnModCTCP", _wrap_CModule_OnModCTCP},
{"ZNCc::CModule_OnQuit", _wrap_CModule_OnQuit},
{"ZNCc::CModule_OnNick", _wrap_CModule_OnNick},
{"ZNCc::CModule_OnKick", _wrap_CModule_OnKick},
{"ZNCc::CModule_OnJoin", _wrap_CModule_OnJoin},
{"ZNCc::CModule_OnPart", _wrap_CModule_OnPart},
{"ZNCc::CModule_OnInvite", _wrap_CModule_OnInvite},
{"ZNCc::CModule_OnChanBufferStarting", _wrap_CModule_OnChanBufferStarting},
{"ZNCc::CModule_OnChanBufferEnding", _wrap_CModule_OnChanBufferEnding},
{"ZNCc::CModule_OnChanBufferPlayLine", _wrap_CModule_OnChanBufferPlayLine},
{"ZNCc::CModule_OnPrivBufferPlayLine", _wrap_CModule_OnPrivBufferPlayLine},
{"ZNCc::CModule_OnClientLogin", _wrap_CModule_OnClientLogin},
{"ZNCc::CModule_OnClientDisconnect", _wrap_CModule_OnClientDisconnect},
{"ZNCc::CModule_OnUserRaw", _wrap_CModule_OnUserRaw},
{"ZNCc::CModule_OnUserCTCPReply", _wrap_CModule_OnUserCTCPReply},
{"ZNCc::CModule_OnUserCTCP", _wrap_CModule_OnUserCTCP},
{"ZNCc::CModule_OnUserAction", _wrap_CModule_OnUserAction},
{"ZNCc::CModule_OnUserMsg", _wrap_CModule_OnUserMsg},
{"ZNCc::CModule_OnUserNotice", _wrap_CModule_OnUserNotice},
{"ZNCc::CModule_OnUserJoin", _wrap_CModule_OnUserJoin},
{"ZNCc::CModule_OnUserPart", _wrap_CModule_OnUserPart},
{"ZNCc::CModule_OnUserTopic", _wrap_CModule_OnUserTopic},
{"ZNCc::CModule_OnUserTopicRequest", _wrap_CModule_OnUserTopicRequest},
{"ZNCc::CModule_OnCTCPReply", _wrap_CModule_OnCTCPReply},
{"ZNCc::CModule_OnPrivCTCP", _wrap_CModule_OnPrivCTCP},
{"ZNCc::CModule_OnChanCTCP", _wrap_CModule_OnChanCTCP},
{"ZNCc::CModule_OnPrivAction", _wrap_CModule_OnPrivAction},
{"ZNCc::CModule_OnChanAction", _wrap_CModule_OnChanAction},
{"ZNCc::CModule_OnPrivMsg", _wrap_CModule_OnPrivMsg},
{"ZNCc::CModule_OnChanMsg", _wrap_CModule_OnChanMsg},
{"ZNCc::CModule_OnPrivNotice", _wrap_CModule_OnPrivNotice},
{"ZNCc::CModule_OnChanNotice", _wrap_CModule_OnChanNotice},
{"ZNCc::CModule_OnTopic", _wrap_CModule_OnTopic},
{"ZNCc::CModule_OnServerCapAvailable", _wrap_CModule_OnServerCapAvailable},
{"ZNCc::CModule_OnServerCapResult", _wrap_CModule_OnServerCapResult},
{"ZNCc::CModule_OnTimerAutoJoin", _wrap_CModule_OnTimerAutoJoin},
{"ZNCc::CModule_OnAddNetwork", _wrap_CModule_OnAddNetwork},
{"ZNCc::CModule_OnDeleteNetwork", _wrap_CModule_OnDeleteNetwork},
{"ZNCc::CModule_GetDLL", _wrap_CModule_GetDLL},
{"ZNCc::CModule_GetCoreVersion", _wrap_CModule_GetCoreVersion},
{"ZNCc::CModule_PutIRC", _wrap_CModule_PutIRC},
{"ZNCc::CModule_PutUser", _wrap_CModule_PutUser},
{"ZNCc::CModule_PutStatus", _wrap_CModule_PutStatus},
{"ZNCc::CModule_PutModule", _wrap_CModule_PutModule},
{"ZNCc::CModule_PutModNotice", _wrap_CModule_PutModNotice},
{"ZNCc::CModule_GetModName", _wrap_CModule_GetModName},
{"ZNCc::CModule_GetModNick", _wrap_CModule_GetModNick},
{"ZNCc::CModule_GetModDataDir", _wrap_CModule_GetModDataDir},
{"ZNCc::CModule_AddTimer", _wrap_CModule_AddTimer},
{"ZNCc::CModule_RemTimer", _wrap_CModule_RemTimer},
{"ZNCc::CModule_UnlinkTimer", _wrap_CModule_UnlinkTimer},
{"ZNCc::CModule_FindTimer", _wrap_CModule_FindTimer},
{"ZNCc::CModule_BeginTimers", _wrap_CModule_BeginTimers},
{"ZNCc::CModule_EndTimers", _wrap_CModule_EndTimers},
{"ZNCc::CModule_ListTimers", _wrap_CModule_ListTimers},
{"ZNCc::CModule_AddSocket", _wrap_CModule_AddSocket},
{"ZNCc::CModule_RemSocket", _wrap_CModule_RemSocket},
{"ZNCc::CModule_UnlinkSocket", _wrap_CModule_UnlinkSocket},
{"ZNCc::CModule_FindSocket", _wrap_CModule_FindSocket},
{"ZNCc::CModule_BeginSockets", _wrap_CModule_BeginSockets},
{"ZNCc::CModule_EndSockets", _wrap_CModule_EndSockets},
{"ZNCc::CModule_ListSockets", _wrap_CModule_ListSockets},
{"ZNCc::CModule_AddHelpCommand", _wrap_CModule_AddHelpCommand},
{"ZNCc::CModule_AddCommand", _wrap_CModule_AddCommand},
{"ZNCc::CModule_RemCommand", _wrap_CModule_RemCommand},
{"ZNCc::CModule_FindCommand", _wrap_CModule_FindCommand},
{"ZNCc::CModule_HandleCommand", _wrap_CModule_HandleCommand},
{"ZNCc::CModule_HandleHelpCommand", _wrap_CModule_HandleHelpCommand},
{"ZNCc::CModule_LoadRegistry", _wrap_CModule_LoadRegistry},
{"ZNCc::CModule_SaveRegistry", _wrap_CModule_SaveRegistry},
{"ZNCc::CModule_SetNV", _wrap_CModule_SetNV},
{"ZNCc::CModule_GetNV", _wrap_CModule_GetNV},
{"ZNCc::CModule_FindNV", _wrap_CModule_FindNV},
{"ZNCc::CModule_EndNV", _wrap_CModule_EndNV},
{"ZNCc::CModule_BeginNV", _wrap_CModule_BeginNV},
{"ZNCc::CModule_DelNV", _wrap_CModule_DelNV},
{"ZNCc::CModule_ClearNV", _wrap_CModule_ClearNV},
{"ZNCc::CModule_GetSavePath", _wrap_CModule_GetSavePath},
{"ZNCc::CModule_ExpandString", _wrap_CModule_ExpandString},
{"ZNCc::CModule_SetType", _wrap_CModule_SetType},
{"ZNCc::CModule_SetDescription", _wrap_CModule_SetDescription},
{"ZNCc::CModule_SetModPath", _wrap_CModule_SetModPath},
{"ZNCc::CModule_SetArgs", _wrap_CModule_SetArgs},
{"ZNCc::CModule_GetType", _wrap_CModule_GetType},
{"ZNCc::CModule_GetDescription", _wrap_CModule_GetDescription},
{"ZNCc::CModule_GetArgs", _wrap_CModule_GetArgs},
{"ZNCc::CModule_GetModPath", _wrap_CModule_GetModPath},
{"ZNCc::CModule_GetUser", _wrap_CModule_GetUser},
{"ZNCc::CModule_GetNetwork", _wrap_CModule_GetNetwork},
{"ZNCc::CModule_GetClient", _wrap_CModule_GetClient},
{"ZNCc::CModule_GetManager", _wrap_CModule_GetManager},
{"ZNCc::CModule_OnAddUser", _wrap_CModule_OnAddUser},
{"ZNCc::CModule_OnDeleteUser", _wrap_CModule_OnDeleteUser},
{"ZNCc::CModule_OnClientConnect", _wrap_CModule_OnClientConnect},
{"ZNCc::CModule_OnLoginAttempt", _wrap_CModule_OnLoginAttempt},
{"ZNCc::CModule_OnFailedLogin", _wrap_CModule_OnFailedLogin},
{"ZNCc::CModule_OnUnknownUserRaw", _wrap_CModule_OnUnknownUserRaw},
{"ZNCc::CModule_OnClientCapLs", _wrap_CModule_OnClientCapLs},
{"ZNCc::CModule_IsClientCapSupported", _wrap_CModule_IsClientCapSupported},
{"ZNCc::CModule_OnClientCapRequest", _wrap_CModule_OnClientCapRequest},
{"ZNCc::CModule_OnModuleLoading", _wrap_CModule_OnModuleLoading},
{"ZNCc::CModule_OnModuleUnloading", _wrap_CModule_OnModuleUnloading},
{"ZNCc::CModule_OnGetModInfo", _wrap_CModule_OnGetModInfo},
{"ZNCc::CModule_OnGetAvailableMods", _wrap_CModule_OnGetAvailableMods},
{"ZNCc::CModule__GetNVKeys", _wrap_CModule__GetNVKeys},
{"ZNCc::CModule_ExistsNV", _wrap_CModule_ExistsNV},
{"ZNCc::new_CModules", _wrap_new_CModules},
{"ZNCc::delete_CModules", _wrap_delete_CModules},
{"ZNCc::CModules_SetUser", _wrap_CModules_SetUser},
{"ZNCc::CModules_SetNetwork", _wrap_CModules_SetNetwork},
{"ZNCc::CModules_SetClient", _wrap_CModules_SetClient},
{"ZNCc::CModules_GetUser", _wrap_CModules_GetUser},
{"ZNCc::CModules_GetNetwork", _wrap_CModules_GetNetwork},
{"ZNCc::CModules_GetClient", _wrap_CModules_GetClient},
{"ZNCc::CModules_UnloadAll", _wrap_CModules_UnloadAll},
{"ZNCc::CModules_OnBoot", _wrap_CModules_OnBoot},
{"ZNCc::CModules_OnPreRehash", _wrap_CModules_OnPreRehash},
{"ZNCc::CModules_OnPostRehash", _wrap_CModules_OnPostRehash},
{"ZNCc::CModules_OnIRCDisconnected", _wrap_CModules_OnIRCDisconnected},
{"ZNCc::CModules_OnIRCConnected", _wrap_CModules_OnIRCConnected},
{"ZNCc::CModules_OnIRCConnecting", _wrap_CModules_OnIRCConnecting},
{"ZNCc::CModules_OnIRCConnectionError", _wrap_CModules_OnIRCConnectionError},
{"ZNCc::CModules_OnIRCRegistration", _wrap_CModules_OnIRCRegistration},
{"ZNCc::CModules_OnBroadcast", _wrap_CModules_OnBroadcast},
{"ZNCc::CModules_OnChanPermission", _wrap_CModules_OnChanPermission},
{"ZNCc::CModules_OnOp", _wrap_CModules_OnOp},
{"ZNCc::CModules_OnDeop", _wrap_CModules_OnDeop},
{"ZNCc::CModules_OnVoice", _wrap_CModules_OnVoice},
{"ZNCc::CModules_OnDevoice", _wrap_CModules_OnDevoice},
{"ZNCc::CModules_OnRawMode", _wrap_CModules_OnRawMode},
{"ZNCc::CModules_OnMode", _wrap_CModules_OnMode},
{"ZNCc::CModules_OnRaw", _wrap_CModules_OnRaw},
{"ZNCc::CModules_OnStatusCommand", _wrap_CModules_OnStatusCommand},
{"ZNCc::CModules_OnModCommand", _wrap_CModules_OnModCommand},
{"ZNCc::CModules_OnModNotice", _wrap_CModules_OnModNotice},
{"ZNCc::CModules_OnModCTCP", _wrap_CModules_OnModCTCP},
{"ZNCc::CModules_OnQuit", _wrap_CModules_OnQuit},
{"ZNCc::CModules_OnNick", _wrap_CModules_OnNick},
{"ZNCc::CModules_OnKick", _wrap_CModules_OnKick},
{"ZNCc::CModules_OnJoin", _wrap_CModules_OnJoin},
{"ZNCc::CModules_OnPart", _wrap_CModules_OnPart},
{"ZNCc::CModules_OnInvite", _wrap_CModules_OnInvite},
{"ZNCc::CModules_OnChanBufferStarting", _wrap_CModules_OnChanBufferStarting},
{"ZNCc::CModules_OnChanBufferEnding", _wrap_CModules_OnChanBufferEnding},
{"ZNCc::CModules_OnChanBufferPlayLine", _wrap_CModules_OnChanBufferPlayLine},
{"ZNCc::CModules_OnPrivBufferPlayLine", _wrap_CModules_OnPrivBufferPlayLine},
{"ZNCc::CModules_OnClientLogin", _wrap_CModules_OnClientLogin},
{"ZNCc::CModules_OnClientDisconnect", _wrap_CModules_OnClientDisconnect},
{"ZNCc::CModules_OnUserRaw", _wrap_CModules_OnUserRaw},
{"ZNCc::CModules_OnUserCTCPReply", _wrap_CModules_OnUserCTCPReply},
{"ZNCc::CModules_OnUserCTCP", _wrap_CModules_OnUserCTCP},
{"ZNCc::CModules_OnUserAction", _wrap_CModules_OnUserAction},
{"ZNCc::CModules_OnUserMsg", _wrap_CModules_OnUserMsg},
{"ZNCc::CModules_OnUserNotice", _wrap_CModules_OnUserNotice},
{"ZNCc::CModules_OnUserJoin", _wrap_CModules_OnUserJoin},
{"ZNCc::CModules_OnUserPart", _wrap_CModules_OnUserPart},
{"ZNCc::CModules_OnUserTopic", _wrap_CModules_OnUserTopic},
{"ZNCc::CModules_OnUserTopicRequest", _wrap_CModules_OnUserTopicRequest},
{"ZNCc::CModules_OnCTCPReply", _wrap_CModules_OnCTCPReply},
{"ZNCc::CModules_OnPrivCTCP", _wrap_CModules_OnPrivCTCP},
{"ZNCc::CModules_OnChanCTCP", _wrap_CModules_OnChanCTCP},
{"ZNCc::CModules_OnPrivAction", _wrap_CModules_OnPrivAction},
{"ZNCc::CModules_OnChanAction", _wrap_CModules_OnChanAction},
{"ZNCc::CModules_OnPrivMsg", _wrap_CModules_OnPrivMsg},
{"ZNCc::CModules_OnChanMsg", _wrap_CModules_OnChanMsg},
{"ZNCc::CModules_OnPrivNotice", _wrap_CModules_OnPrivNotice},
{"ZNCc::CModules_OnChanNotice", _wrap_CModules_OnChanNotice},
{"ZNCc::CModules_OnTopic", _wrap_CModules_OnTopic},
{"ZNCc::CModules_OnTimerAutoJoin", _wrap_CModules_OnTimerAutoJoin},
{"ZNCc::CModules_OnAddNetwork", _wrap_CModules_OnAddNetwork},
{"ZNCc::CModules_OnDeleteNetwork", _wrap_CModules_OnDeleteNetwork},
{"ZNCc::CModules_OnServerCapAvailable", _wrap_CModules_OnServerCapAvailable},
{"ZNCc::CModules_OnServerCapResult", _wrap_CModules_OnServerCapResult},
{"ZNCc::CModules_FindModule", _wrap_CModules_FindModule},
{"ZNCc::CModules_LoadModule", _wrap_CModules_LoadModule},
{"ZNCc::CModules_UnloadModule", _wrap_CModules_UnloadModule},
{"ZNCc::CModules_ReloadModule", _wrap_CModules_ReloadModule},
{"ZNCc::CModules_GetModInfo", _wrap_CModules_GetModInfo},
{"ZNCc::CModules_GetModPathInfo", _wrap_CModules_GetModPathInfo},
{"ZNCc::CModules_GetAvailableMods", _wrap_CModules_GetAvailableMods},
{"ZNCc::CModules_FindModPath", _wrap_CModules_FindModPath},
{"ZNCc::CModules_GetModDirs", _wrap_CModules_GetModDirs},
{"ZNCc::CModules_OnAddUser", _wrap_CModules_OnAddUser},
{"ZNCc::CModules_OnDeleteUser", _wrap_CModules_OnDeleteUser},
{"ZNCc::CModules_OnClientConnect", _wrap_CModules_OnClientConnect},
{"ZNCc::CModules_OnLoginAttempt", _wrap_CModules_OnLoginAttempt},
{"ZNCc::CModules_OnFailedLogin", _wrap_CModules_OnFailedLogin},
{"ZNCc::CModules_OnUnknownUserRaw", _wrap_CModules_OnUnknownUserRaw},
{"ZNCc::CModules_OnClientCapLs", _wrap_CModules_OnClientCapLs},
{"ZNCc::CModules_IsClientCapSupported", _wrap_CModules_IsClientCapSupported},
{"ZNCc::CModules_OnClientCapRequest", _wrap_CModules_OnClientCapRequest},
{"ZNCc::CModules_OnModuleLoading", _wrap_CModules_OnModuleLoading},
{"ZNCc::CModules_OnModuleUnloading", _wrap_CModules_OnModuleUnloading},
{"ZNCc::CModules_OnGetModInfo", _wrap_CModules_OnGetModInfo},
{"ZNCc::CModules_OnGetAvailableMods", _wrap_CModules_OnGetAvailableMods},
{"ZNCc::CModules_push_back", _wrap_CModules_push_back},
{"ZNCc::CModules_removeModule", _wrap_CModules_removeModule},
{"ZNCc::new_CNick", _wrap_new_CNick},
{"ZNCc::delete_CNick", _wrap_delete_CNick},
{"ZNCc::CNick_Reset", _wrap_CNick_Reset},
{"ZNCc::CNick_Parse", _wrap_CNick_Parse},
{"ZNCc::CNick_GetHostMask", _wrap_CNick_GetHostMask},
{"ZNCc::CNick_GetCommonChans", _wrap_CNick_GetCommonChans},
{"ZNCc::CNick_NickEquals", _wrap_CNick_NickEquals},
{"ZNCc::CNick_SetNetwork", _wrap_CNick_SetNetwork},
{"ZNCc::CNick_SetNick", _wrap_CNick_SetNick},
{"ZNCc::CNick_SetIdent", _wrap_CNick_SetIdent},
{"ZNCc::CNick_SetHost", _wrap_CNick_SetHost},
{"ZNCc::CNick_AddPerm", _wrap_CNick_AddPerm},
{"ZNCc::CNick_RemPerm", _wrap_CNick_RemPerm},
{"ZNCc::CNick_GetPermStr", _wrap_CNick_GetPermStr},
{"ZNCc::CNick_GetPermChar", _wrap_CNick_GetPermChar},
{"ZNCc::CNick_HasPerm", _wrap_CNick_HasPerm},
{"ZNCc::CNick_GetNick", _wrap_CNick_GetNick},
{"ZNCc::CNick_GetIdent", _wrap_CNick_GetIdent},
{"ZNCc::CNick_GetHost", _wrap_CNick_GetHost},
{"ZNCc::CNick_GetNickMask", _wrap_CNick_GetNickMask},
{"ZNCc::CNick_Clone", _wrap_CNick_Clone},
{"ZNCc::new_CChan", _wrap_new_CChan},
{"ZNCc::delete_CChan", _wrap_delete_CChan},
{"ZNCc::CChan_Reset", _wrap_CChan_Reset},
{"ZNCc::CChan_ToConfig", _wrap_CChan_ToConfig},
{"ZNCc::CChan_Clone", _wrap_CChan_Clone},
{"ZNCc::CChan_Cycle", _wrap_CChan_Cycle},
{"ZNCc::CChan_JoinUser", _wrap_CChan_JoinUser},
{"ZNCc::CChan_DetachUser", _wrap_CChan_DetachUser},
{"ZNCc::CChan_AttachUser", _wrap_CChan_AttachUser},
{"ZNCc::CChan_OnWho", _wrap_CChan_OnWho},
{"ZNCc::CChan_SetModes", _wrap_CChan_SetModes},
{"ZNCc::CChan_ModeChange", _wrap_CChan_ModeChange},
{"ZNCc::CChan_AddMode", _wrap_CChan_AddMode},
{"ZNCc::CChan_RemMode", _wrap_CChan_RemMode},
{"ZNCc::CChan_GetModeString", _wrap_CChan_GetModeString},
{"ZNCc::CChan_GetModeForNames", _wrap_CChan_GetModeForNames},
{"ZNCc::CChan_ClearNicks", _wrap_CChan_ClearNicks},
{"ZNCc::CChan_FindNick", _wrap_CChan_FindNick},
{"ZNCc::CChan_AddNicks", _wrap_CChan_AddNicks},
{"ZNCc::CChan_AddNick", _wrap_CChan_AddNick},
{"ZNCc::CChan_RemNick", _wrap_CChan_RemNick},
{"ZNCc::CChan_ChangeNick", _wrap_CChan_ChangeNick},
{"ZNCc::CChan_GetBuffer", _wrap_CChan_GetBuffer},
{"ZNCc::CChan_GetBufferCount", _wrap_CChan_GetBufferCount},
{"ZNCc::CChan_SetBufferCount", _wrap_CChan_SetBufferCount},
{"ZNCc::CChan_AddBuffer", _wrap_CChan_AddBuffer},
{"ZNCc::CChan_ClearBuffer", _wrap_CChan_ClearBuffer},
{"ZNCc::CChan_SendBuffer", _wrap_CChan_SendBuffer},
{"ZNCc::CChan_GetPermStr", _wrap_CChan_GetPermStr},
{"ZNCc::CChan_HasPerm", _wrap_CChan_HasPerm},
{"ZNCc::CChan_AddPerm", _wrap_CChan_AddPerm},
{"ZNCc::CChan_RemPerm", _wrap_CChan_RemPerm},
{"ZNCc::CChan_SetModeKnown", _wrap_CChan_SetModeKnown},
{"ZNCc::CChan_SetIsOn", _wrap_CChan_SetIsOn},
{"ZNCc::CChan_SetKey", _wrap_CChan_SetKey},
{"ZNCc::CChan_SetTopic", _wrap_CChan_SetTopic},
{"ZNCc::CChan_SetTopicOwner", _wrap_CChan_SetTopicOwner},
{"ZNCc::CChan_SetTopicDate", _wrap_CChan_SetTopicDate},
{"ZNCc::CChan_SetDefaultModes", _wrap_CChan_SetDefaultModes},
{"ZNCc::CChan_SetAutoClearChanBuffer", _wrap_CChan_SetAutoClearChanBuffer},
{"ZNCc::CChan_SetDetached", _wrap_CChan_SetDetached},
{"ZNCc::CChan_SetInConfig", _wrap_CChan_SetInConfig},
{"ZNCc::CChan_SetCreationDate", _wrap_CChan_SetCreationDate},
{"ZNCc::CChan_Disable", _wrap_CChan_Disable},
{"ZNCc::CChan_Enable", _wrap_CChan_Enable},
{"ZNCc::CChan_IncJoinTries", _wrap_CChan_IncJoinTries},
{"ZNCc::CChan_ResetJoinTries", _wrap_CChan_ResetJoinTries},
{"ZNCc::CChan_IsModeKnown", _wrap_CChan_IsModeKnown},
{"ZNCc::CChan_HasMode", _wrap_CChan_HasMode},
{"ZNCc::CChan_GetOptions", _wrap_CChan_GetOptions},
{"ZNCc::CChan_GetModeArg", _wrap_CChan_GetModeArg},
{"ZNCc::CChan_GetPermCounts", _wrap_CChan_GetPermCounts},
{"ZNCc::CChan_IsOn", _wrap_CChan_IsOn},
{"ZNCc::CChan_GetName", _wrap_CChan_GetName},
{"ZNCc::CChan_GetModes", _wrap_CChan_GetModes},
{"ZNCc::CChan_GetKey", _wrap_CChan_GetKey},
{"ZNCc::CChan_GetTopic", _wrap_CChan_GetTopic},
{"ZNCc::CChan_GetTopicOwner", _wrap_CChan_GetTopicOwner},
{"ZNCc::CChan_GetTopicDate", _wrap_CChan_GetTopicDate},
{"ZNCc::CChan_GetDefaultModes", _wrap_CChan_GetDefaultModes},
{"ZNCc::CChan_GetNicks", _wrap_CChan_GetNicks},
{"ZNCc::CChan_GetNickCount", _wrap_CChan_GetNickCount},
{"ZNCc::CChan_AutoClearChanBuffer", _wrap_CChan_AutoClearChanBuffer},
{"ZNCc::CChan_IsDetached", _wrap_CChan_IsDetached},
{"ZNCc::CChan_InConfig", _wrap_CChan_InConfig},
{"ZNCc::CChan_GetCreationDate", _wrap_CChan_GetCreationDate},
{"ZNCc::CChan_IsDisabled", _wrap_CChan_IsDisabled},
{"ZNCc::CChan_GetJoinTries", _wrap_CChan_GetJoinTries},
{"ZNCc::CChan_GetNicks_", _wrap_CChan_GetNicks_},
{"ZNCc::new_CUser", _wrap_new_CUser},
{"ZNCc::delete_CUser", _wrap_delete_CUser},
{"ZNCc::CUser_ParseConfig", _wrap_CUser_ParseConfig},
{"ZNCc::CUser_SaltedHash", _wrap_CUser_SaltedHash},
{"ZNCc::CUser_ToConfig", _wrap_CUser_ToConfig},
{"ZNCc::CUser_CheckPass", _wrap_CUser_CheckPass},
{"ZNCc::CUser_AddAllowedHost", _wrap_CUser_AddAllowedHost},
{"ZNCc::CUser_IsHostAllowed", _wrap_CUser_IsHostAllowed},
{"ZNCc::CUser_IsValid", _wrap_CUser_IsValid},
{"ZNCc::CUser_IsValidUserName", _wrap_CUser_IsValidUserName},
{"ZNCc::CUser_MakeCleanUserName", _wrap_CUser_MakeCleanUserName},
{"ZNCc::CUser_GetModules", _wrap_CUser_GetModules},
{"ZNCc::CUser_DeleteNetwork", _wrap_CUser_DeleteNetwork},
{"ZNCc::CUser_AddNetwork", _wrap_CUser_AddNetwork},
{"ZNCc::CUser_RemoveNetwork", _wrap_CUser_RemoveNetwork},
{"ZNCc::CUser_FindNetwork", _wrap_CUser_FindNetwork},
{"ZNCc::CUser_GetNetworks", _wrap_CUser_GetNetworks},
{"ZNCc::CUser_HasSpaceForNewNetwork", _wrap_CUser_HasSpaceForNewNetwork},
{"ZNCc::CUser_PutUser", _wrap_CUser_PutUser},
{"ZNCc::CUser_PutAllUser", _wrap_CUser_PutAllUser},
{"ZNCc::CUser_PutStatus", _wrap_CUser_PutStatus},
{"ZNCc::CUser_PutStatusNotice", _wrap_CUser_PutStatusNotice},
{"ZNCc::CUser_PutModule", _wrap_CUser_PutModule},
{"ZNCc::CUser_PutModNotice", _wrap_CUser_PutModNotice},
{"ZNCc::CUser_IsUserAttached", _wrap_CUser_IsUserAttached},
{"ZNCc::CUser_UserConnected", _wrap_CUser_UserConnected},
{"ZNCc::CUser_UserDisconnected", _wrap_CUser_UserDisconnected},
{"ZNCc::CUser_GetLocalDCCIP", _wrap_CUser_GetLocalDCCIP},
{"ZNCc::CUser_ExpandString", _wrap_CUser_ExpandString},
{"ZNCc::CUser_AddTimestamp", _wrap_CUser_AddTimestamp},
{"ZNCc::CUser_CloneNetworks", _wrap_CUser_CloneNetworks},
{"ZNCc::CUser_Clone", _wrap_CUser_Clone},
{"ZNCc::CUser_BounceAllClients", _wrap_CUser_BounceAllClients},
{"ZNCc::CUser_AddBytesRead", _wrap_CUser_AddBytesRead},
{"ZNCc::CUser_AddBytesWritten", _wrap_CUser_AddBytesWritten},
{"ZNCc::CUser_SetNick", _wrap_CUser_SetNick},
{"ZNCc::CUser_SetAltNick", _wrap_CUser_SetAltNick},
{"ZNCc::CUser_SetIdent", _wrap_CUser_SetIdent},
{"ZNCc::CUser_SetRealName", _wrap_CUser_SetRealName},
{"ZNCc::CUser_SetBindHost", _wrap_CUser_SetBindHost},
{"ZNCc::CUser_SetDCCBindHost", _wrap_CUser_SetDCCBindHost},
{"ZNCc::CUser_SetPass", _wrap_CUser_SetPass},
{"ZNCc::CUser_SetMultiClients", _wrap_CUser_SetMultiClients},
{"ZNCc::CUser_SetDenyLoadMod", _wrap_CUser_SetDenyLoadMod},
{"ZNCc::CUser_SetAdmin", _wrap_CUser_SetAdmin},
{"ZNCc::CUser_SetDenySetBindHost", _wrap_CUser_SetDenySetBindHost},
{"ZNCc::CUser_SetStatusPrefix", _wrap_CUser_SetStatusPrefix},
{"ZNCc::CUser_SetDefaultChanModes", _wrap_CUser_SetDefaultChanModes},
{"ZNCc::CUser_SetQuitMsg", _wrap_CUser_SetQuitMsg},
{"ZNCc::CUser_AddCTCPReply", _wrap_CUser_AddCTCPReply},
{"ZNCc::CUser_DelCTCPReply", _wrap_CUser_DelCTCPReply},
{"ZNCc::CUser_SetBufferCount", _wrap_CUser_SetBufferCount},
{"ZNCc::CUser_SetAutoClearChanBuffer", _wrap_CUser_SetAutoClearChanBuffer},
{"ZNCc::CUser_SetBeingDeleted", _wrap_CUser_SetBeingDeleted},
{"ZNCc::CUser_SetTimestampFormat", _wrap_CUser_SetTimestampFormat},
{"ZNCc::CUser_SetTimestampAppend", _wrap_CUser_SetTimestampAppend},
{"ZNCc::CUser_SetTimestampPrepend", _wrap_CUser_SetTimestampPrepend},
{"ZNCc::CUser_SetTimezone", _wrap_CUser_SetTimezone},
{"ZNCc::CUser_SetJoinTries", _wrap_CUser_SetJoinTries},
{"ZNCc::CUser_SetMaxJoins", _wrap_CUser_SetMaxJoins},
{"ZNCc::CUser_SetSkinName", _wrap_CUser_SetSkinName},
{"ZNCc::CUser_SetMaxNetworks", _wrap_CUser_SetMaxNetworks},
{"ZNCc::CUser_GetUserClients", _wrap_CUser_GetUserClients},
{"ZNCc::CUser_GetAllClients", _wrap_CUser_GetAllClients},
{"ZNCc::CUser_GetUserName", _wrap_CUser_GetUserName},
{"ZNCc::CUser_GetCleanUserName", _wrap_CUser_GetCleanUserName},
{"ZNCc::CUser_GetNick", _wrap_CUser_GetNick},
{"ZNCc::CUser_GetAltNick", _wrap_CUser_GetAltNick},
{"ZNCc::CUser_GetIdent", _wrap_CUser_GetIdent},
{"ZNCc::CUser_GetRealName", _wrap_CUser_GetRealName},
{"ZNCc::CUser_GetBindHost", _wrap_CUser_GetBindHost},
{"ZNCc::CUser_GetDCCBindHost", _wrap_CUser_GetDCCBindHost},
{"ZNCc::CUser_GetPass", _wrap_CUser_GetPass},
{"ZNCc::CUser_GetPassHashType", _wrap_CUser_GetPassHashType},
{"ZNCc::CUser_GetPassSalt", _wrap_CUser_GetPassSalt},
{"ZNCc::CUser_GetAllowedHosts", _wrap_CUser_GetAllowedHosts},
{"ZNCc::CUser_GetTimestampFormat", _wrap_CUser_GetTimestampFormat},
{"ZNCc::CUser_GetTimestampAppend", _wrap_CUser_GetTimestampAppend},
{"ZNCc::CUser_GetTimestampPrepend", _wrap_CUser_GetTimestampPrepend},
{"ZNCc::CUser_GetUserPath", _wrap_CUser_GetUserPath},
{"ZNCc::CUser_DenyLoadMod", _wrap_CUser_DenyLoadMod},
{"ZNCc::CUser_IsAdmin", _wrap_CUser_IsAdmin},
{"ZNCc::CUser_DenySetBindHost", _wrap_CUser_DenySetBindHost},
{"ZNCc::CUser_MultiClients", _wrap_CUser_MultiClients},
{"ZNCc::CUser_GetStatusPrefix", _wrap_CUser_GetStatusPrefix},
{"ZNCc::CUser_GetDefaultChanModes", _wrap_CUser_GetDefaultChanModes},
{"ZNCc::CUser_GetQuitMsg", _wrap_CUser_GetQuitMsg},
{"ZNCc::CUser_GetCTCPReplies", _wrap_CUser_GetCTCPReplies},
{"ZNCc::CUser_GetBufferCount", _wrap_CUser_GetBufferCount},
{"ZNCc::CUser_AutoClearChanBuffer", _wrap_CUser_AutoClearChanBuffer},
{"ZNCc::CUser_IsBeingDeleted", _wrap_CUser_IsBeingDeleted},
{"ZNCc::CUser_GetTimezone", _wrap_CUser_GetTimezone},
{"ZNCc::CUser_BytesRead", _wrap_CUser_BytesRead},
{"ZNCc::CUser_BytesWritten", _wrap_CUser_BytesWritten},
{"ZNCc::CUser_JoinTries", _wrap_CUser_JoinTries},
{"ZNCc::CUser_MaxJoins", _wrap_CUser_MaxJoins},
{"ZNCc::CUser_GetSkinName", _wrap_CUser_GetSkinName},
{"ZNCc::CUser_MaxNetworks", _wrap_CUser_MaxNetworks},
{"ZNCc::CUser_GetNetworks_", _wrap_CUser_GetNetworks_},
{"ZNCc::CIRCNetwork_IsValidNetwork", _wrap_CIRCNetwork_IsValidNetwork},
{"ZNCc::new_CIRCNetwork", _wrap_new_CIRCNetwork},
{"ZNCc::delete_CIRCNetwork", _wrap_delete_CIRCNetwork},
{"ZNCc::CIRCNetwork_Clone", _wrap_CIRCNetwork_Clone},
{"ZNCc::CIRCNetwork_GetNetworkPath", _wrap_CIRCNetwork_GetNetworkPath},
{"ZNCc::CIRCNetwork_DelServers", _wrap_CIRCNetwork_DelServers},
{"ZNCc::CIRCNetwork_ParseConfig", _wrap_CIRCNetwork_ParseConfig},
{"ZNCc::CIRCNetwork_ToConfig", _wrap_CIRCNetwork_ToConfig},
{"ZNCc::CIRCNetwork_BounceAllClients", _wrap_CIRCNetwork_BounceAllClients},
{"ZNCc::CIRCNetwork_IsUserAttached", _wrap_CIRCNetwork_IsUserAttached},
{"ZNCc::CIRCNetwork_IsUserOnline", _wrap_CIRCNetwork_IsUserOnline},
{"ZNCc::CIRCNetwork_ClientConnected", _wrap_CIRCNetwork_ClientConnected},
{"ZNCc::CIRCNetwork_ClientDisconnected", _wrap_CIRCNetwork_ClientDisconnected},
{"ZNCc::CIRCNetwork_GetUser", _wrap_CIRCNetwork_GetUser},
{"ZNCc::CIRCNetwork_GetName", _wrap_CIRCNetwork_GetName},
{"ZNCc::CIRCNetwork_IsNetworkAttached", _wrap_CIRCNetwork_IsNetworkAttached},
{"ZNCc::CIRCNetwork_GetClients", _wrap_CIRCNetwork_GetClients},
{"ZNCc::CIRCNetwork_SetUser", _wrap_CIRCNetwork_SetUser},
{"ZNCc::CIRCNetwork_SetName", _wrap_CIRCNetwork_SetName},
{"ZNCc::CIRCNetwork_GetModules", _wrap_CIRCNetwork_GetModules},
{"ZNCc::CIRCNetwork_PutUser", _wrap_CIRCNetwork_PutUser},
{"ZNCc::CIRCNetwork_PutStatus", _wrap_CIRCNetwork_PutStatus},
{"ZNCc::CIRCNetwork_PutModule", _wrap_CIRCNetwork_PutModule},
{"ZNCc::CIRCNetwork_GetChans", _wrap_CIRCNetwork_GetChans},
{"ZNCc::CIRCNetwork_FindChan", _wrap_CIRCNetwork_FindChan},
{"ZNCc::CIRCNetwork_AddChan", _wrap_CIRCNetwork_AddChan},
{"ZNCc::CIRCNetwork_DelChan", _wrap_CIRCNetwork_DelChan},
{"ZNCc::CIRCNetwork_JoinChans", _wrap_CIRCNetwork_JoinChans},
{"ZNCc::CIRCNetwork_GetChanPrefixes", _wrap_CIRCNetwork_GetChanPrefixes},
{"ZNCc::CIRCNetwork_SetChanPrefixes", _wrap_CIRCNetwork_SetChanPrefixes},
{"ZNCc::CIRCNetwork_IsChan", _wrap_CIRCNetwork_IsChan},
{"ZNCc::CIRCNetwork_GetServers", _wrap_CIRCNetwork_GetServers},
{"ZNCc::CIRCNetwork_HasServers", _wrap_CIRCNetwork_HasServers},
{"ZNCc::CIRCNetwork_FindServer", _wrap_CIRCNetwork_FindServer},
{"ZNCc::CIRCNetwork_DelServer", _wrap_CIRCNetwork_DelServer},
{"ZNCc::CIRCNetwork_AddServer", _wrap_CIRCNetwork_AddServer},
{"ZNCc::CIRCNetwork_GetNextServer", _wrap_CIRCNetwork_GetNextServer},
{"ZNCc::CIRCNetwork_GetCurrentServer", _wrap_CIRCNetwork_GetCurrentServer},
{"ZNCc::CIRCNetwork_SetIRCServer", _wrap_CIRCNetwork_SetIRCServer},
{"ZNCc::CIRCNetwork_SetNextServer", _wrap_CIRCNetwork_SetNextServer},
{"ZNCc::CIRCNetwork_IsLastServer", _wrap_CIRCNetwork_IsLastServer},
{"ZNCc::CIRCNetwork_SetIRCConnectEnabled", _wrap_CIRCNetwork_SetIRCConnectEnabled},
{"ZNCc::CIRCNetwork_GetIRCConnectEnabled", _wrap_CIRCNetwork_GetIRCConnectEnabled},
{"ZNCc::CIRCNetwork_GetIRCSock", _wrap_CIRCNetwork_GetIRCSock},
{"ZNCc::CIRCNetwork_GetIRCServer", _wrap_CIRCNetwork_GetIRCServer},
{"ZNCc::CIRCNetwork_GetIRCNick", _wrap_CIRCNetwork_GetIRCNick},
{"ZNCc::CIRCNetwork_SetIRCNick", _wrap_CIRCNetwork_SetIRCNick},
{"ZNCc::CIRCNetwork_GetCurNick", _wrap_CIRCNetwork_GetCurNick},
{"ZNCc::CIRCNetwork_IsIRCAway", _wrap_CIRCNetwork_IsIRCAway},
{"ZNCc::CIRCNetwork_SetIRCAway", _wrap_CIRCNetwork_SetIRCAway},
{"ZNCc::CIRCNetwork_Connect", _wrap_CIRCNetwork_Connect},
{"ZNCc::CIRCNetwork_IsIRCConnected", _wrap_CIRCNetwork_IsIRCConnected},
{"ZNCc::CIRCNetwork_SetIRCSocket", _wrap_CIRCNetwork_SetIRCSocket},
{"ZNCc::CIRCNetwork_IRCDisconnected", _wrap_CIRCNetwork_IRCDisconnected},
{"ZNCc::CIRCNetwork_CheckIRCConnect", _wrap_CIRCNetwork_CheckIRCConnect},
{"ZNCc::CIRCNetwork_PutIRC", _wrap_CIRCNetwork_PutIRC},
{"ZNCc::CIRCNetwork_AddRawBuffer", _wrap_CIRCNetwork_AddRawBuffer},
{"ZNCc::CIRCNetwork_UpdateRawBuffer", _wrap_CIRCNetwork_UpdateRawBuffer},
{"ZNCc::CIRCNetwork_UpdateExactRawBuffer", _wrap_CIRCNetwork_UpdateExactRawBuffer},
{"ZNCc::CIRCNetwork_ClearRawBuffer", _wrap_CIRCNetwork_ClearRawBuffer},
{"ZNCc::CIRCNetwork_AddMotdBuffer", _wrap_CIRCNetwork_AddMotdBuffer},
{"ZNCc::CIRCNetwork_UpdateMotdBuffer", _wrap_CIRCNetwork_UpdateMotdBuffer},
{"ZNCc::CIRCNetwork_ClearMotdBuffer", _wrap_CIRCNetwork_ClearMotdBuffer},
{"ZNCc::CIRCNetwork_AddQueryBuffer", _wrap_CIRCNetwork_AddQueryBuffer},
{"ZNCc::CIRCNetwork_UpdateQueryBuffer", _wrap_CIRCNetwork_UpdateQueryBuffer},
{"ZNCc::CIRCNetwork_ClearQueryBuffer", _wrap_CIRCNetwork_ClearQueryBuffer},
{"ZNCc::CIRCNetwork_GetNick", _wrap_CIRCNetwork_GetNick},
{"ZNCc::CIRCNetwork_GetAltNick", _wrap_CIRCNetwork_GetAltNick},
{"ZNCc::CIRCNetwork_GetIdent", _wrap_CIRCNetwork_GetIdent},
{"ZNCc::CIRCNetwork_GetRealName", _wrap_CIRCNetwork_GetRealName},
{"ZNCc::CIRCNetwork_GetBindHost", _wrap_CIRCNetwork_GetBindHost},
{"ZNCc::CIRCNetwork_SetNick", _wrap_CIRCNetwork_SetNick},
{"ZNCc::CIRCNetwork_SetAltNick", _wrap_CIRCNetwork_SetAltNick},
{"ZNCc::CIRCNetwork_SetIdent", _wrap_CIRCNetwork_SetIdent},
{"ZNCc::CIRCNetwork_SetRealName", _wrap_CIRCNetwork_SetRealName},
{"ZNCc::CIRCNetwork_SetBindHost", _wrap_CIRCNetwork_SetBindHost},
{"ZNCc::CIRCNetwork_GetFloodRate", _wrap_CIRCNetwork_GetFloodRate},
{"ZNCc::CIRCNetwork_GetFloodBurst", _wrap_CIRCNetwork_GetFloodBurst},
{"ZNCc::CIRCNetwork_SetFloodRate", _wrap_CIRCNetwork_SetFloodRate},
{"ZNCc::CIRCNetwork_SetFloodBurst", _wrap_CIRCNetwork_SetFloodBurst},
{"ZNCc::CIRCNetwork_ExpandString", _wrap_CIRCNetwork_ExpandString},
{"ZNCc::CIRCNetwork_GetChans_", _wrap_CIRCNetwork_GetChans_},
{"ZNCc::delete_CAuthBase", _wrap_delete_CAuthBase},
{"ZNCc::CAuthBase_SetLoginInfo", _wrap_CAuthBase_SetLoginInfo},
{"ZNCc::CAuthBase_AcceptLogin", _wrap_CAuthBase_AcceptLogin},
{"ZNCc::CAuthBase_RefuseLogin", _wrap_CAuthBase_RefuseLogin},
{"ZNCc::CAuthBase_GetUsername", _wrap_CAuthBase_GetUsername},
{"ZNCc::CAuthBase_GetPassword", _wrap_CAuthBase_GetPassword},
{"ZNCc::CAuthBase_GetSocket", _wrap_CAuthBase_GetSocket},
{"ZNCc::CAuthBase_GetRemoteIP", _wrap_CAuthBase_GetRemoteIP},
{"ZNCc::CAuthBase_Invalidate", _wrap_CAuthBase_Invalidate},
{"ZNCc::new_CClientAuth", _wrap_new_CClientAuth},
{"ZNCc::delete_CClientAuth", _wrap_delete_CClientAuth},
{"ZNCc::CClientAuth_Invalidate", _wrap_CClientAuth_Invalidate},
{"ZNCc::CClientAuth_AcceptedLogin", _wrap_CClientAuth_AcceptedLogin},
{"ZNCc::CClientAuth_RefusedLogin", _wrap_CClientAuth_RefusedLogin},
{"ZNCc::new_CClient", _wrap_new_CClient},
{"ZNCc::delete_CClient", _wrap_delete_CClient},
{"ZNCc::CClient_SendRequiredPasswordNotice", _wrap_CClient_SendRequiredPasswordNotice},
{"ZNCc::CClient_AcceptLogin", _wrap_CClient_AcceptLogin},
{"ZNCc::CClient_RefuseLogin", _wrap_CClient_RefuseLogin},
{"ZNCc::CClient_GetNick", _wrap_CClient_GetNick},
{"ZNCc::CClient_GetNickMask", _wrap_CClient_GetNickMask},
{"ZNCc::CClient_HasNamesx", _wrap_CClient_HasNamesx},
{"ZNCc::CClient_HasUHNames", _wrap_CClient_HasUHNames},
{"ZNCc::CClient_IsAway", _wrap_CClient_IsAway},
{"ZNCc::CClient_HasServerTime", _wrap_CClient_HasServerTime},
{"ZNCc::CClient_UserCommand", _wrap_CClient_UserCommand},
{"ZNCc::CClient_UserPortCommand", _wrap_CClient_UserPortCommand},
{"ZNCc::CClient_StatusCTCP", _wrap_CClient_StatusCTCP},
{"ZNCc::CClient_BouncedOff", _wrap_CClient_BouncedOff},
{"ZNCc::CClient_IsAttached", _wrap_CClient_IsAttached},
{"ZNCc::CClient_PutIRC", _wrap_CClient_PutIRC},
{"ZNCc::CClient_PutClient", _wrap_CClient_PutClient},
{"ZNCc::CClient_PutStatus", _wrap_CClient_PutStatus},
{"ZNCc::CClient_PutStatusNotice", _wrap_CClient_PutStatusNotice},
{"ZNCc::CClient_PutModule", _wrap_CClient_PutModule},
{"ZNCc::CClient_PutModNotice", _wrap_CClient_PutModNotice},
{"ZNCc::CClient_IsCapEnabled", _wrap_CClient_IsCapEnabled},
{"ZNCc::CClient_ReadLine", _wrap_CClient_ReadLine},
{"ZNCc::CClient_SendMotd", _wrap_CClient_SendMotd},
{"ZNCc::CClient_HelpUser", _wrap_CClient_HelpUser},
{"ZNCc::CClient_AuthUser", _wrap_CClient_AuthUser},
{"ZNCc::CClient_Connected", _wrap_CClient_Connected},
{"ZNCc::CClient_Timeout", _wrap_CClient_Timeout},
{"ZNCc::CClient_Disconnected", _wrap_CClient_Disconnected},
{"ZNCc::CClient_ConnectionRefused", _wrap_CClient_ConnectionRefused},
{"ZNCc::CClient_ReachedMaxBuffer", _wrap_CClient_ReachedMaxBuffer},
{"ZNCc::CClient_SetNick", _wrap_CClient_SetNick},
{"ZNCc::CClient_SetAway", _wrap_CClient_SetAway},
{"ZNCc::CClient_GetUser", _wrap_CClient_GetUser},
{"ZNCc::CClient_SetNetwork", _wrap_CClient_SetNetwork},
{"ZNCc::CClient_GetNetwork", _wrap_CClient_GetNetwork},
{"ZNCc::CClient_GetClients", _wrap_CClient_GetClients},
{"ZNCc::CClient_GetIRCSock", _wrap_CClient_GetIRCSock},
{"ZNCc::CClient_GetFullName", _wrap_CClient_GetFullName},
{"ZNCc::new_CIRCSock", _wrap_new_CIRCSock},
{"ZNCc::delete_CIRCSock", _wrap_delete_CIRCSock},
{"ZNCc::CIRCSock_OnCTCPReply", _wrap_CIRCSock_OnCTCPReply},
{"ZNCc::CIRCSock_OnPrivCTCP", _wrap_CIRCSock_OnPrivCTCP},
{"ZNCc::CIRCSock_OnChanCTCP", _wrap_CIRCSock_OnChanCTCP},
{"ZNCc::CIRCSock_OnGeneralCTCP", _wrap_CIRCSock_OnGeneralCTCP},
{"ZNCc::CIRCSock_OnPrivMsg", _wrap_CIRCSock_OnPrivMsg},
{"ZNCc::CIRCSock_OnChanMsg", _wrap_CIRCSock_OnChanMsg},
{"ZNCc::CIRCSock_OnPrivNotice", _wrap_CIRCSock_OnPrivNotice},
{"ZNCc::CIRCSock_OnChanNotice", _wrap_CIRCSock_OnChanNotice},
{"ZNCc::CIRCSock_OnServerCapAvailable", _wrap_CIRCSock_OnServerCapAvailable},
{"ZNCc::CIRCSock_ReadLine", _wrap_CIRCSock_ReadLine},
{"ZNCc::CIRCSock_Connected", _wrap_CIRCSock_Connected},
{"ZNCc::CIRCSock_Disconnected", _wrap_CIRCSock_Disconnected},
{"ZNCc::CIRCSock_ConnectionRefused", _wrap_CIRCSock_ConnectionRefused},
{"ZNCc::CIRCSock_SockError", _wrap_CIRCSock_SockError},
{"ZNCc::CIRCSock_Timeout", _wrap_CIRCSock_Timeout},
{"ZNCc::CIRCSock_ReachedMaxBuffer", _wrap_CIRCSock_ReachedMaxBuffer},
{"ZNCc::CIRCSock_PutIRC", _wrap_CIRCSock_PutIRC},
{"ZNCc::CIRCSock_PutIRCQuick", _wrap_CIRCSock_PutIRCQuick},
{"ZNCc::CIRCSock_ResetChans", _wrap_CIRCSock_ResetChans},
{"ZNCc::CIRCSock_Quit", _wrap_CIRCSock_Quit},
{"ZNCc::CIRCSock_PauseCap", _wrap_CIRCSock_PauseCap},
{"ZNCc::CIRCSock_ResumeCap", _wrap_CIRCSock_ResumeCap},
{"ZNCc::CIRCSock_SetPass", _wrap_CIRCSock_SetPass},
{"ZNCc::CIRCSock_GetMaxNickLen", _wrap_CIRCSock_GetMaxNickLen},
{"ZNCc::CIRCSock_GetModeType", _wrap_CIRCSock_GetModeType},
{"ZNCc::CIRCSock_GetPermFromMode", _wrap_CIRCSock_GetPermFromMode},
{"ZNCc::CIRCSock_GetChanModes", _wrap_CIRCSock_GetChanModes},
{"ZNCc::CIRCSock_IsPermChar", _wrap_CIRCSock_IsPermChar},
{"ZNCc::CIRCSock_IsPermMode", _wrap_CIRCSock_IsPermMode},
{"ZNCc::CIRCSock_GetPerms", _wrap_CIRCSock_GetPerms},
{"ZNCc::CIRCSock_GetPermModes", _wrap_CIRCSock_GetPermModes},
{"ZNCc::CIRCSock_GetNickMask", _wrap_CIRCSock_GetNickMask},
{"ZNCc::CIRCSock_GetNick", _wrap_CIRCSock_GetNick},
{"ZNCc::CIRCSock_GetPass", _wrap_CIRCSock_GetPass},
{"ZNCc::CIRCSock_GetNetwork", _wrap_CIRCSock_GetNetwork},
{"ZNCc::CIRCSock_HasNamesx", _wrap_CIRCSock_HasNamesx},
{"ZNCc::CIRCSock_HasUHNames", _wrap_CIRCSock_HasUHNames},
{"ZNCc::CIRCSock_GetUserModes", _wrap_CIRCSock_GetUserModes},
{"ZNCc::CIRCSock_IsAuthed", _wrap_CIRCSock_IsAuthed},
{"ZNCc::CIRCSock_IsCapAccepted", _wrap_CIRCSock_IsCapAccepted},
{"ZNCc::CIRCSock_GetISupport", _wrap_CIRCSock_GetISupport},
{"ZNCc::CIRCSock_ForwardRaw353", _wrap_CIRCSock_ForwardRaw353},
{"ZNCc::CIRCSock_IsFloodProtected", _wrap_CIRCSock_IsFloodProtected},
{"ZNCc::new_CListener", _wrap_new_CListener},
{"ZNCc::delete_CListener", _wrap_delete_CListener},
{"ZNCc::CListener_IsSSL", _wrap_CListener_IsSSL},
{"ZNCc::CListener_GetAddrType", _wrap_CListener_GetAddrType},
{"ZNCc::CListener_GetPort", _wrap_CListener_GetPort},
{"ZNCc::CListener_GetBindHost", _wrap_CListener_GetBindHost},
{"ZNCc::CListener_GetRealListener", _wrap_CListener_GetRealListener},
{"ZNCc::CListener_GetAcceptType", _wrap_CListener_GetAcceptType},
{"ZNCc::CListener_SetAcceptType", _wrap_CListener_SetAcceptType},
{"ZNCc::CListener_Listen", _wrap_CListener_Listen},
{"ZNCc::CListener_ResetRealListener", _wrap_CListener_ResetRealListener},
{"ZNCc::new_CRealListener", _wrap_new_CRealListener},
{"ZNCc::delete_CRealListener", _wrap_delete_CRealListener},
{"ZNCc::CRealListener_ConnectionFrom", _wrap_CRealListener_ConnectionFrom},
{"ZNCc::CRealListener_GetSockObj", _wrap_CRealListener_GetSockObj},
{"ZNCc::CRealListener_SockError", _wrap_CRealListener_SockError},
{"ZNCc::new_CIncomingConnection", _wrap_new_CIncomingConnection},
{"ZNCc::delete_CIncomingConnection", _wrap_delete_CIncomingConnection},
{"ZNCc::CIncomingConnection_ReadLine", _wrap_CIncomingConnection_ReadLine},
{"ZNCc::CIncomingConnection_ReachedMaxBuffer", _wrap_CIncomingConnection_ReachedMaxBuffer},
{"ZNCc::delete_CHTTPSock", _wrap_delete_CHTTPSock},
{"ZNCc::CHTTPSock_ReadData", _wrap_CHTTPSock_ReadData},
{"ZNCc::CHTTPSock_ReadLine", _wrap_CHTTPSock_ReadLine},
{"ZNCc::CHTTPSock_Connected", _wrap_CHTTPSock_Connected},
{"ZNCc::CHTTPSock_GetSockObj", _wrap_CHTTPSock_GetSockObj},
{"ZNCc::CHTTPSock_ForceLogin", _wrap_CHTTPSock_ForceLogin},
{"ZNCc::CHTTPSock_OnLogin", _wrap_CHTTPSock_OnLogin},
{"ZNCc::CHTTPSock_OnPageRequest", _wrap_CHTTPSock_OnPageRequest},
{"ZNCc::CHTTPSock_PrintFile", _wrap_CHTTPSock_PrintFile},
{"ZNCc::CHTTPSock_CheckPost", _wrap_CHTTPSock_CheckPost},
{"ZNCc::CHTTPSock_SentHeader", _wrap_CHTTPSock_SentHeader},
{"ZNCc::CHTTPSock_PrintHeader", _wrap_CHTTPSock_PrintHeader},
{"ZNCc::CHTTPSock_AddHeader", _wrap_CHTTPSock_AddHeader},
{"ZNCc::CHTTPSock_SetContentType", _wrap_CHTTPSock_SetContentType},
{"ZNCc::CHTTPSock_PrintNotFound", _wrap_CHTTPSock_PrintNotFound},
{"ZNCc::CHTTPSock_Redirect", _wrap_CHTTPSock_Redirect},
{"ZNCc::CHTTPSock_PrintErrorPage", _wrap_CHTTPSock_PrintErrorPage},
{"ZNCc::CHTTPSock_ParseParams", _wrap_CHTTPSock_ParseParams},
{"ZNCc::CHTTPSock_ParseURI", _wrap_CHTTPSock_ParseURI},
{"ZNCc::CHTTPSock_GetPage", _wrap_CHTTPSock_GetPage},
{"ZNCc::CHTTPSock_GetDate", _wrap_CHTTPSock_GetDate},
{"ZNCc::CHTTPSock_GetRequestCookie", _wrap_CHTTPSock_GetRequestCookie},
{"ZNCc::CHTTPSock_SendCookie", _wrap_CHTTPSock_SendCookie},
{"ZNCc::CHTTPSock_SetDocRoot", _wrap_CHTTPSock_SetDocRoot},
{"ZNCc::CHTTPSock_SetLoggedIn", _wrap_CHTTPSock_SetLoggedIn},
{"ZNCc::CHTTPSock_GetPath", _wrap_CHTTPSock_GetPath},
{"ZNCc::CHTTPSock_IsLoggedIn", _wrap_CHTTPSock_IsLoggedIn},
{"ZNCc::CHTTPSock_GetDocRoot", _wrap_CHTTPSock_GetDocRoot},
{"ZNCc::CHTTPSock_GetUser", _wrap_CHTTPSock_GetUser},
{"ZNCc::CHTTPSock_GetPass", _wrap_CHTTPSock_GetPass},
{"ZNCc::CHTTPSock_GetParamString", _wrap_CHTTPSock_GetParamString},
{"ZNCc::CHTTPSock_GetContentType", _wrap_CHTTPSock_GetContentType},
{"ZNCc::CHTTPSock_IsPost", _wrap_CHTTPSock_IsPost},
{"ZNCc::CHTTPSock_GetParam", _wrap_CHTTPSock_GetParam},
{"ZNCc::CHTTPSock_GetRawParam", _wrap_CHTTPSock_GetRawParam},
{"ZNCc::CHTTPSock_HasParam", _wrap_CHTTPSock_HasParam},
{"ZNCc::CHTTPSock_GetParams", _wrap_CHTTPSock_GetParams},
{"ZNCc::CHTTPSock_GetParamValues", _wrap_CHTTPSock_GetParamValues},
{"ZNCc::new_CTemplateTagHandler", _wrap_new_CTemplateTagHandler},
{"ZNCc::delete_CTemplateTagHandler", _wrap_delete_CTemplateTagHandler},
{"ZNCc::CTemplateTagHandler_HandleVar", _wrap_CTemplateTagHandler_HandleVar},
{"ZNCc::CTemplateTagHandler_HandleTag", _wrap_CTemplateTagHandler_HandleTag},
{"ZNCc::CTemplateTagHandler_HandleIf", _wrap_CTemplateTagHandler_HandleIf},
{"ZNCc::CTemplateTagHandler_HandleValue", _wrap_CTemplateTagHandler_HandleValue},
{"ZNCc::new_CTemplateOptions", _wrap_new_CTemplateOptions},
{"ZNCc::delete_CTemplateOptions", _wrap_delete_CTemplateOptions},
{"ZNCc::CTemplateOptions_Parse", _wrap_CTemplateOptions_Parse},
{"ZNCc::CTemplateOptions_GetEscapeFrom", _wrap_CTemplateOptions_GetEscapeFrom},
{"ZNCc::CTemplateOptions_GetEscapeTo", _wrap_CTemplateOptions_GetEscapeTo},
{"ZNCc::new_CTemplateLoopContext", _wrap_new_CTemplateLoopContext},
{"ZNCc::delete_CTemplateLoopContext", _wrap_delete_CTemplateLoopContext},
{"ZNCc::CTemplateLoopContext_SetHasData", _wrap_CTemplateLoopContext_SetHasData},
{"ZNCc::CTemplateLoopContext_SetName", _wrap_CTemplateLoopContext_SetName},
{"ZNCc::CTemplateLoopContext_SetRowIndex", _wrap_CTemplateLoopContext_SetRowIndex},
{"ZNCc::CTemplateLoopContext_IncRowIndex", _wrap_CTemplateLoopContext_IncRowIndex},
{"ZNCc::CTemplateLoopContext_DecRowIndex", _wrap_CTemplateLoopContext_DecRowIndex},
{"ZNCc::CTemplateLoopContext_SetFilePosition", _wrap_CTemplateLoopContext_SetFilePosition},
{"ZNCc::CTemplateLoopContext_HasData", _wrap_CTemplateLoopContext_HasData},
{"ZNCc::CTemplateLoopContext_GetName", _wrap_CTemplateLoopContext_GetName},
{"ZNCc::CTemplateLoopContext_GetFilePosition", _wrap_CTemplateLoopContext_GetFilePosition},
{"ZNCc::CTemplateLoopContext_GetRowIndex", _wrap_CTemplateLoopContext_GetRowIndex},
{"ZNCc::CTemplateLoopContext_GetRowCount", _wrap_CTemplateLoopContext_GetRowCount},
{"ZNCc::CTemplateLoopContext_GetRows", _wrap_CTemplateLoopContext_GetRows},
{"ZNCc::CTemplateLoopContext_GetNextRow", _wrap_CTemplateLoopContext_GetNextRow},
{"ZNCc::CTemplateLoopContext_GetCurRow", _wrap_CTemplateLoopContext_GetCurRow},
{"ZNCc::CTemplateLoopContext_GetRow", _wrap_CTemplateLoopContext_GetRow},
{"ZNCc::CTemplateLoopContext_GetValue", _wrap_CTemplateLoopContext_GetValue},
{"ZNCc::new_CTemplate", _wrap_new_CTemplate},
{"ZNCc::delete_CTemplate", _wrap_delete_CTemplate},
{"ZNCc::CTemplate_AddTagHandler", _wrap_CTemplate_AddTagHandler},
{"ZNCc::CTemplate_GetTagHandlers", _wrap_CTemplate_GetTagHandlers},
{"ZNCc::CTemplate_ResolveLiteral", _wrap_CTemplate_ResolveLiteral},
{"ZNCc::CTemplate_Init", _wrap_CTemplate_Init},
{"ZNCc::CTemplate_GetParent", _wrap_CTemplate_GetParent},
{"ZNCc::CTemplate_ExpandFile", _wrap_CTemplate_ExpandFile},
{"ZNCc::CTemplate_SetFile", _wrap_CTemplate_SetFile},
{"ZNCc::CTemplate_SetPath", _wrap_CTemplate_SetPath},
{"ZNCc::CTemplate_MakePath", _wrap_CTemplate_MakePath},
{"ZNCc::CTemplate_PrependPath", _wrap_CTemplate_PrependPath},
{"ZNCc::CTemplate_AppendPath", _wrap_CTemplate_AppendPath},
{"ZNCc::CTemplate_RemovePath", _wrap_CTemplate_RemovePath},
{"ZNCc::CTemplate_ClearPaths", _wrap_CTemplate_ClearPaths},
{"ZNCc::CTemplate_PrintString", _wrap_CTemplate_PrintString},
{"ZNCc::CTemplate_Print", _wrap_CTemplate_Print},
{"ZNCc::CTemplate_ValidIf", _wrap_CTemplate_ValidIf},
{"ZNCc::CTemplate_ValidExpr", _wrap_CTemplate_ValidExpr},
{"ZNCc::CTemplate_IsTrue", _wrap_CTemplate_IsTrue},
{"ZNCc::CTemplate_HasLoop", _wrap_CTemplate_HasLoop},
{"ZNCc::CTemplate_GetValue", _wrap_CTemplate_GetValue},
{"ZNCc::CTemplate_AddRow", _wrap_CTemplate_AddRow},
{"ZNCc::CTemplate_GetRow", _wrap_CTemplate_GetRow},
{"ZNCc::CTemplate_GetLoop", _wrap_CTemplate_GetLoop},
{"ZNCc::CTemplate_DelCurLoopContext", _wrap_CTemplate_DelCurLoopContext},
{"ZNCc::CTemplate_GetCurLoopContext", _wrap_CTemplate_GetCurLoopContext},
{"ZNCc::CTemplate_GetCurTemplate", _wrap_CTemplate_GetCurTemplate},
{"ZNCc::CTemplate_GetFileName", _wrap_CTemplate_GetFileName},
{"ZNCc::CTemplate_set", _wrap_CTemplate_set},
{"ZNCc::new_CZNCTagHandler", _wrap_new_CZNCTagHandler},
{"ZNCc::delete_CZNCTagHandler", _wrap_delete_CZNCTagHandler},
{"ZNCc::CZNCTagHandler_HandleTag", _wrap_CZNCTagHandler_HandleTag},
{"ZNCc::new_CWebSession", _wrap_new_CWebSession},
{"ZNCc::delete_CWebSession", _wrap_delete_CWebSession},
{"ZNCc::CWebSession_GetId", _wrap_CWebSession_GetId},
{"ZNCc::CWebSession_GetIP", _wrap_CWebSession_GetIP},
{"ZNCc::CWebSession_GetUser", _wrap_CWebSession_GetUser},
{"ZNCc::CWebSession_IsLoggedIn", _wrap_CWebSession_IsLoggedIn},
{"ZNCc::CWebSession_IsAdmin", _wrap_CWebSession_IsAdmin},
{"ZNCc::CWebSession_SetUser", _wrap_CWebSession_SetUser},
{"ZNCc::CWebSession_ClearMessageLoops", _wrap_CWebSession_ClearMessageLoops},
{"ZNCc::CWebSession_FillMessageLoops", _wrap_CWebSession_FillMessageLoops},
{"ZNCc::CWebSession_AddError", _wrap_CWebSession_AddError},
{"ZNCc::CWebSession_AddSuccess", _wrap_CWebSession_AddSuccess},
{"ZNCc::new_CWebSubPage", _wrap_new_CWebSubPage},
{"ZNCc::delete_CWebSubPage", _wrap_delete_CWebSubPage},
{"ZNCc::CWebSubPage_SetName", _wrap_CWebSubPage_SetName},
{"ZNCc::CWebSubPage_SetTitle", _wrap_CWebSubPage_SetTitle},
{"ZNCc::CWebSubPage_AddParam", _wrap_CWebSubPage_AddParam},
{"ZNCc::CWebSubPage_RequiresAdmin", _wrap_CWebSubPage_RequiresAdmin},
{"ZNCc::CWebSubPage_GetName", _wrap_CWebSubPage_GetName},
{"ZNCc::CWebSubPage_GetTitle", _wrap_CWebSubPage_GetTitle},
{"ZNCc::CWebSubPage_GetParams", _wrap_CWebSubPage_GetParams},
{"ZNCc::new_CWebSessionMap", _wrap_new_CWebSessionMap},
{"ZNCc::CWebSessionMap_FinishUserSessions", _wrap_CWebSessionMap_FinishUserSessions},
{"ZNCc::delete_CWebSessionMap", _wrap_delete_CWebSessionMap},
{"ZNCc::new_CWebSock", _wrap_new_CWebSock},
{"ZNCc::delete_CWebSock", _wrap_delete_CWebSock},
{"ZNCc::CWebSock_ForceLogin", _wrap_CWebSock_ForceLogin},
{"ZNCc::CWebSock_OnLogin", _wrap_CWebSock_OnLogin},
{"ZNCc::CWebSock_OnPageRequest", _wrap_CWebSock_OnPageRequest},
{"ZNCc::CWebSock_PrintTemplate", _wrap_CWebSock_PrintTemplate},
{"ZNCc::CWebSock_PrintStaticFile", _wrap_CWebSock_PrintStaticFile},
{"ZNCc::CWebSock_FindTmpl", _wrap_CWebSock_FindTmpl},
{"ZNCc::CWebSock_GetSession", _wrap_CWebSock_GetSession},
{"ZNCc::CWebSock_GetSockObj", _wrap_CWebSock_GetSockObj},
{"ZNCc::CWebSock_GetSkinPath", _wrap_CWebSock_GetSkinPath},
{"ZNCc::CWebSock_GetModule", _wrap_CWebSock_GetModule},
{"ZNCc::CWebSock_GetAvailSkins", _wrap_CWebSock_GetAvailSkins},
{"ZNCc::CWebSock_GetSkinName", _wrap_CWebSock_GetSkinName},
{"ZNCc::CWebSock_GetRequestCookie", _wrap_CWebSock_GetRequestCookie},
{"ZNCc::CWebSock_SendCookie", _wrap_CWebSock_SendCookie},
{"ZNCc::CWebSock_FinishUserSessions", _wrap_CWebSock_FinishUserSessions},
{"ZNCc::new_CZNC", _wrap_new_CZNC},
{"ZNCc::delete_CZNC", _wrap_delete_CZNC},
{"ZNCc::CZNC_DeleteUsers", _wrap_CZNC_DeleteUsers},
{"ZNCc::CZNC_Loop", _wrap_CZNC_Loop},
{"ZNCc::CZNC_WritePidFile", _wrap_CZNC_WritePidFile},
{"ZNCc::CZNC_DeletePidFile", _wrap_CZNC_DeletePidFile},
{"ZNCc::CZNC_WaitForChildLock", _wrap_CZNC_WaitForChildLock},
{"ZNCc::CZNC_IsHostAllowed", _wrap_CZNC_IsHostAllowed},
{"ZNCc::CZNC_AllowConnectionFrom", _wrap_CZNC_AllowConnectionFrom},
{"ZNCc::CZNC_InitDirs", _wrap_CZNC_InitDirs},
{"ZNCc::CZNC_OnBoot", _wrap_CZNC_OnBoot},
{"ZNCc::CZNC_ExpandConfigPath", _wrap_CZNC_ExpandConfigPath},
{"ZNCc::CZNC_WriteNewConfig", _wrap_CZNC_WriteNewConfig},
{"ZNCc::CZNC_WriteConfig", _wrap_CZNC_WriteConfig},
{"ZNCc::CZNC_ParseConfig", _wrap_CZNC_ParseConfig},
{"ZNCc::CZNC_RehashConfig", _wrap_CZNC_RehashConfig},
{"ZNCc::CZNC_BackupConfigOnce", _wrap_CZNC_BackupConfigOnce},
{"ZNCc::CZNC_GetVersion", _wrap_CZNC_GetVersion},
{"ZNCc::CZNC_GetTag", _wrap_CZNC_GetTag},
{"ZNCc::CZNC_GetCompileOptionsString", _wrap_CZNC_GetCompileOptionsString},
{"ZNCc::CZNC_GetUptime", _wrap_CZNC_GetUptime},
{"ZNCc::CZNC_ClearBindHosts", _wrap_CZNC_ClearBindHosts},
{"ZNCc::CZNC_AddBindHost", _wrap_CZNC_AddBindHost},
{"ZNCc::CZNC_RemBindHost", _wrap_CZNC_RemBindHost},
{"ZNCc::CZNC_Broadcast", _wrap_CZNC_Broadcast},
{"ZNCc::CZNC_AddBytesRead", _wrap_CZNC_AddBytesRead},
{"ZNCc::CZNC_AddBytesWritten", _wrap_CZNC_AddBytesWritten},
{"ZNCc::CZNC_BytesRead", _wrap_CZNC_BytesRead},
{"ZNCc::CZNC_BytesWritten", _wrap_CZNC_BytesWritten},
{"ZNCc::CZNC_GetTrafficStats", _wrap_CZNC_GetTrafficStats},
{"ZNCc::CZNC_AuthUser", _wrap_CZNC_AuthUser},
{"ZNCc::CZNC_SetConfigState", _wrap_CZNC_SetConfigState},
{"ZNCc::CZNC_SetSkinName", _wrap_CZNC_SetSkinName},
{"ZNCc::CZNC_SetStatusPrefix", _wrap_CZNC_SetStatusPrefix},
{"ZNCc::CZNC_SetMaxBufferSize", _wrap_CZNC_SetMaxBufferSize},
{"ZNCc::CZNC_SetAnonIPLimit", _wrap_CZNC_SetAnonIPLimit},
{"ZNCc::CZNC_SetServerThrottle", _wrap_CZNC_SetServerThrottle},
{"ZNCc::CZNC_SetProtectWebSessions", _wrap_CZNC_SetProtectWebSessions},
{"ZNCc::CZNC_SetConnectDelay", _wrap_CZNC_SetConnectDelay},
{"ZNCc::CZNC_GetConfigState", _wrap_CZNC_GetConfigState},
{"ZNCc::CZNC_GetManager", _wrap_CZNC_GetManager},
{"ZNCc::CZNC_GetModules", _wrap_CZNC_GetModules},
{"ZNCc::CZNC_FilterUncommonModules", _wrap_CZNC_FilterUncommonModules},
{"ZNCc::CZNC_GetSkinName", _wrap_CZNC_GetSkinName},
{"ZNCc::CZNC_GetStatusPrefix", _wrap_CZNC_GetStatusPrefix},
{"ZNCc::CZNC_GetCurPath", _wrap_CZNC_GetCurPath},
{"ZNCc::CZNC_GetHomePath", _wrap_CZNC_GetHomePath},
{"ZNCc::CZNC_GetZNCPath", _wrap_CZNC_GetZNCPath},
{"ZNCc::CZNC_GetConfPath", _wrap_CZNC_GetConfPath},
{"ZNCc::CZNC_GetUserPath", _wrap_CZNC_GetUserPath},
{"ZNCc::CZNC_GetModPath", _wrap_CZNC_GetModPath},
{"ZNCc::CZNC_GetPemLocation", _wrap_CZNC_GetPemLocation},
{"ZNCc::CZNC_GetConfigFile", _wrap_CZNC_GetConfigFile},
{"ZNCc::CZNC_WritePemFile", _wrap_CZNC_WritePemFile},
{"ZNCc::CZNC_GetBindHosts", _wrap_CZNC_GetBindHosts},
{"ZNCc::CZNC_GetListeners", _wrap_CZNC_GetListeners},
{"ZNCc::CZNC_TimeStarted", _wrap_CZNC_TimeStarted},
{"ZNCc::CZNC_GetMaxBufferSize", _wrap_CZNC_GetMaxBufferSize},
{"ZNCc::CZNC_GetAnonIPLimit", _wrap_CZNC_GetAnonIPLimit},
{"ZNCc::CZNC_GetConnectDelay", _wrap_CZNC_GetConnectDelay},
{"ZNCc::CZNC_GetProtectWebSessions", _wrap_CZNC_GetProtectWebSessions},
{"ZNCc::CZNC_Get", _wrap_CZNC_Get},
{"ZNCc::CZNC_FindUser", _wrap_CZNC_FindUser},
{"ZNCc::CZNC_FindModule", _wrap_CZNC_FindModule},
{"ZNCc::CZNC_UpdateModule", _wrap_CZNC_UpdateModule},
{"ZNCc::CZNC_DeleteUser", _wrap_CZNC_DeleteUser},
{"ZNCc::CZNC_AddUser", _wrap_CZNC_AddUser},
{"ZNCc::CZNC_GetUserMap", _wrap_CZNC_GetUserMap},
{"ZNCc::CZNC_FindListener", _wrap_CZNC_FindListener},
{"ZNCc::CZNC_AddListener", _wrap_CZNC_AddListener},
{"ZNCc::CZNC_DelListener", _wrap_CZNC_DelListener},
{"ZNCc::CZNC_SetMotd", _wrap_CZNC_SetMotd},
{"ZNCc::CZNC_AddMotd", _wrap_CZNC_AddMotd},
{"ZNCc::CZNC_ClearMotd", _wrap_CZNC_ClearMotd},
{"ZNCc::CZNC_GetMotd", _wrap_CZNC_GetMotd},
{"ZNCc::CZNC_AddServerThrottle", _wrap_CZNC_AddServerThrottle},
{"ZNCc::CZNC_GetServerThrottle", _wrap_CZNC_GetServerThrottle},
{"ZNCc::CZNC_AddNetworkToQueue", _wrap_CZNC_AddNetworkToQueue},
{"ZNCc::CZNC_GetConnectionQueue", _wrap_CZNC_GetConnectionQueue},
{"ZNCc::CZNC_EnableConnectQueue", _wrap_CZNC_EnableConnectQueue},
{"ZNCc::CZNC_DisableConnectQueue", _wrap_CZNC_DisableConnectQueue},
{"ZNCc::CZNC_PauseConnectQueue", _wrap_CZNC_PauseConnectQueue},
{"ZNCc::CZNC_ResumeConnectQueue", _wrap_CZNC_ResumeConnectQueue},
{"ZNCc::CZNC_LeakConnectQueueTimer", _wrap_CZNC_LeakConnectQueueTimer},
{"ZNCc::CZNC_DumpConfig", _wrap_CZNC_DumpConfig},
{"ZNCc::new_CServer", _wrap_new_CServer},
{"ZNCc::delete_CServer", _wrap_delete_CServer},
{"ZNCc::CServer_GetName", _wrap_CServer_GetName},
{"ZNCc::CServer_GetPort", _wrap_CServer_GetPort},
{"ZNCc::CServer_GetPass", _wrap_CServer_GetPass},
{"ZNCc::CServer_IsSSL", _wrap_CServer_IsSSL},
{"ZNCc::CServer_GetString", _wrap_CServer_GetString},
{"ZNCc::CServer_IsValidHostName", _wrap_CServer_IsValidHostName},
{"ZNCc::CDebug_SetStdoutIsTTY", _wrap_CDebug_SetStdoutIsTTY},
{"ZNCc::CDebug_StdoutIsTTY", _wrap_CDebug_StdoutIsTTY},
{"ZNCc::CDebug_SetDebug", _wrap_CDebug_SetDebug},
{"ZNCc::CDebug_Debug", _wrap_CDebug_Debug},
{"ZNCc::new_CDebug", _wrap_new_CDebug},
{"ZNCc::delete_CDebug", _wrap_delete_CDebug},
{"ZNCc::delete_CDebugStream", _wrap_delete_CDebugStream},
{"ZNCc::new_CDebugStream", _wrap_new_CDebugStream},
{"ZNCc::new_CExecSock", _wrap_new_CExecSock},
{"ZNCc::CExecSock_Execute", _wrap_CExecSock_Execute},
{"ZNCc::CExecSock_Kill", _wrap_CExecSock_Kill},
{"ZNCc::delete_CExecSock", _wrap_delete_CExecSock},
{"ZNCc::CExecSock_popen2", _wrap_CExecSock_popen2},
{"ZNCc::CExecSock_close2", _wrap_CExecSock_close2},
{"ZNCc::new_CBufLine", _wrap_new_CBufLine},
{"ZNCc::delete_CBufLine", _wrap_delete_CBufLine},
{"ZNCc::CBufLine_GetLine", _wrap_CBufLine_GetLine},
{"ZNCc::CBufLine_UpdateTime", _wrap_CBufLine_UpdateTime},
{"ZNCc::CBufLine_SetFormat", _wrap_CBufLine_SetFormat},
{"ZNCc::CBufLine_SetText", _wrap_CBufLine_SetText},
{"ZNCc::CBufLine_SetTime", _wrap_CBufLine_SetTime},
{"ZNCc::CBufLine_GetFormat", _wrap_CBufLine_GetFormat},
{"ZNCc::CBufLine_GetText", _wrap_CBufLine_GetText},
{"ZNCc::CBufLine_GetTime", _wrap_CBufLine_GetTime},
{"ZNCc::new_CBuffer", _wrap_new_CBuffer},
{"ZNCc::delete_CBuffer", _wrap_delete_CBuffer},
{"ZNCc::CBuffer_AddLine", _wrap_CBuffer_AddLine},
{"ZNCc::CBuffer_UpdateLine", _wrap_CBuffer_UpdateLine},
{"ZNCc::CBuffer_UpdateExactLine", _wrap_CBuffer_UpdateExactLine},
{"ZNCc::CBuffer_GetBufLine", _wrap_CBuffer_GetBufLine},
{"ZNCc::CBuffer_GetLine", _wrap_CBuffer_GetLine},
{"ZNCc::CBuffer_Size", _wrap_CBuffer_Size},
{"ZNCc::CBuffer_IsEmpty", _wrap_CBuffer_IsEmpty},
{"ZNCc::CBuffer_Clear", _wrap_CBuffer_Clear},
{"ZNCc::CBuffer_SetLineCount", _wrap_CBuffer_SetLineCount},
{"ZNCc::CBuffer_GetLineCount", _wrap_CBuffer_GetLineCount},
{"ZNCc::new_CPerlModule", _wrap_new_CPerlModule},
{"ZNCc::CPerlModule_GetPerlObj", _wrap_CPerlModule_GetPerlObj},
{"ZNCc::CPerlModule_OnBoot", _wrap_CPerlModule_OnBoot},
{"ZNCc::CPerlModule_WebRequiresLogin", _wrap_CPerlModule_WebRequiresLogin},
{"ZNCc::CPerlModule_WebRequiresAdmin", _wrap_CPerlModule_WebRequiresAdmin},
{"ZNCc::CPerlModule_GetWebMenuTitle", _wrap_CPerlModule_GetWebMenuTitle},
{"ZNCc::CPerlModule_OnWebPreRequest", _wrap_CPerlModule_OnWebPreRequest},
{"ZNCc::CPerlModule_OnWebRequest", _wrap_CPerlModule_OnWebRequest},
{"ZNCc::CPerlModule_GetSubPages", _wrap_CPerlModule_GetSubPages},
{"ZNCc::CPerlModule_OnPreRehash", _wrap_CPerlModule_OnPreRehash},
{"ZNCc::CPerlModule_OnPostRehash", _wrap_CPerlModule_OnPostRehash},
{"ZNCc::CPerlModule_OnIRCDisconnected", _wrap_CPerlModule_OnIRCDisconnected},
{"ZNCc::CPerlModule_OnIRCConnected", _wrap_CPerlModule_OnIRCConnected},
{"ZNCc::CPerlModule_OnIRCConnecting", _wrap_CPerlModule_OnIRCConnecting},
{"ZNCc::CPerlModule_OnIRCConnectionError", _wrap_CPerlModule_OnIRCConnectionError},
{"ZNCc::CPerlModule_OnIRCRegistration", _wrap_CPerlModule_OnIRCRegistration},
{"ZNCc::CPerlModule_OnBroadcast", _wrap_CPerlModule_OnBroadcast},
{"ZNCc::CPerlModule_OnChanPermission", _wrap_CPerlModule_OnChanPermission},
{"ZNCc::CPerlModule_OnOp", _wrap_CPerlModule_OnOp},
{"ZNCc::CPerlModule_OnDeop", _wrap_CPerlModule_OnDeop},
{"ZNCc::CPerlModule_OnVoice", _wrap_CPerlModule_OnVoice},
{"ZNCc::CPerlModule_OnDevoice", _wrap_CPerlModule_OnDevoice},
{"ZNCc::CPerlModule_OnMode", _wrap_CPerlModule_OnMode},
{"ZNCc::CPerlModule_OnRawMode", _wrap_CPerlModule_OnRawMode},
{"ZNCc::CPerlModule_OnRaw", _wrap_CPerlModule_OnRaw},
{"ZNCc::CPerlModule_OnStatusCommand", _wrap_CPerlModule_OnStatusCommand},
{"ZNCc::CPerlModule_OnModCommand", _wrap_CPerlModule_OnModCommand},
{"ZNCc::CPerlModule_OnModNotice", _wrap_CPerlModule_OnModNotice},
{"ZNCc::CPerlModule_OnModCTCP", _wrap_CPerlModule_OnModCTCP},
{"ZNCc::CPerlModule_OnQuit", _wrap_CPerlModule_OnQuit},
{"ZNCc::CPerlModule_OnNick", _wrap_CPerlModule_OnNick},
{"ZNCc::CPerlModule_OnKick", _wrap_CPerlModule_OnKick},
{"ZNCc::CPerlModule_OnJoin", _wrap_CPerlModule_OnJoin},
{"ZNCc::CPerlModule_OnPart", _wrap_CPerlModule_OnPart},
{"ZNCc::CPerlModule_OnChanBufferStarting", _wrap_CPerlModule_OnChanBufferStarting},
{"ZNCc::CPerlModule_OnChanBufferEnding", _wrap_CPerlModule_OnChanBufferEnding},
{"ZNCc::CPerlModule_OnChanBufferPlayLine", _wrap_CPerlModule_OnChanBufferPlayLine},
{"ZNCc::CPerlModule_OnPrivBufferPlayLine", _wrap_CPerlModule_OnPrivBufferPlayLine},
{"ZNCc::CPerlModule_OnClientLogin", _wrap_CPerlModule_OnClientLogin},
{"ZNCc::CPerlModule_OnClientDisconnect", _wrap_CPerlModule_OnClientDisconnect},
{"ZNCc::CPerlModule_OnUserRaw", _wrap_CPerlModule_OnUserRaw},
{"ZNCc::CPerlModule_OnUserCTCPReply", _wrap_CPerlModule_OnUserCTCPReply},
{"ZNCc::CPerlModule_OnUserCTCP", _wrap_CPerlModule_OnUserCTCP},
{"ZNCc::CPerlModule_OnUserAction", _wrap_CPerlModule_OnUserAction},
{"ZNCc::CPerlModule_OnUserMsg", _wrap_CPerlModule_OnUserMsg},
{"ZNCc::CPerlModule_OnUserNotice", _wrap_CPerlModule_OnUserNotice},
{"ZNCc::CPerlModule_OnUserJoin", _wrap_CPerlModule_OnUserJoin},
{"ZNCc::CPerlModule_OnUserPart", _wrap_CPerlModule_OnUserPart},
{"ZNCc::CPerlModule_OnUserTopic", _wrap_CPerlModule_OnUserTopic},
{"ZNCc::CPerlModule_OnUserTopicRequest", _wrap_CPerlModule_OnUserTopicRequest},
{"ZNCc::CPerlModule_OnCTCPReply", _wrap_CPerlModule_OnCTCPReply},
{"ZNCc::CPerlModule_OnPrivCTCP", _wrap_CPerlModule_OnPrivCTCP},
{"ZNCc::CPerlModule_OnChanCTCP", _wrap_CPerlModule_OnChanCTCP},
{"ZNCc::CPerlModule_OnPrivAction", _wrap_CPerlModule_OnPrivAction},
{"ZNCc::CPerlModule_OnChanAction", _wrap_CPerlModule_OnChanAction},
{"ZNCc::CPerlModule_OnPrivMsg", _wrap_CPerlModule_OnPrivMsg},
{"ZNCc::CPerlModule_OnChanMsg", _wrap_CPerlModule_OnChanMsg},
{"ZNCc::CPerlModule_OnPrivNotice", _wrap_CPerlModule_OnPrivNotice},
{"ZNCc::CPerlModule_OnChanNotice", _wrap_CPerlModule_OnChanNotice},
{"ZNCc::CPerlModule_OnTopic", _wrap_CPerlModule_OnTopic},
{"ZNCc::CPerlModule_OnServerCapAvailable", _wrap_CPerlModule_OnServerCapAvailable},
{"ZNCc::CPerlModule_OnServerCapResult", _wrap_CPerlModule_OnServerCapResult},
{"ZNCc::CPerlModule_OnTimerAutoJoin", _wrap_CPerlModule_OnTimerAutoJoin},
{"ZNCc::CPerlModule_OnEmbeddedWebRequest", _wrap_CPerlModule_OnEmbeddedWebRequest},
{"ZNCc::CPerlModule_OnAddNetwork", _wrap_CPerlModule_OnAddNetwork},
{"ZNCc::CPerlModule_OnDeleteNetwork", _wrap_CPerlModule_OnDeleteNetwork},
{"ZNCc::delete_CPerlModule", _wrap_delete_CPerlModule},
{"ZNCc::AsPerlModule", _wrap_AsPerlModule},
{"ZNCc::new_CPerlTimer", _wrap_new_CPerlTimer},
{"ZNCc::CPerlTimer_RunJob", _wrap_CPerlTimer_RunJob},
{"ZNCc::CPerlTimer_GetPerlObj", _wrap_CPerlTimer_GetPerlObj},
{"ZNCc::delete_CPerlTimer", _wrap_delete_CPerlTimer},
{"ZNCc::CreatePerlTimer", _wrap_CreatePerlTimer},
{"ZNCc::new_CPerlSocket", _wrap_new_CPerlSocket},
{"ZNCc::CPerlSocket_GetPerlObj", _wrap_CPerlSocket_GetPerlObj},
{"ZNCc::delete_CPerlSocket", _wrap_delete_CPerlSocket},
{"ZNCc::CPerlSocket_Connected", _wrap_CPerlSocket_Connected},
{"ZNCc::CPerlSocket_Disconnected", _wrap_CPerlSocket_Disconnected},
{"ZNCc::CPerlSocket_Timeout", _wrap_CPerlSocket_Timeout},
{"ZNCc::CPerlSocket_ConnectionRefused", _wrap_CPerlSocket_ConnectionRefused},
{"ZNCc::CPerlSocket_ReadData", _wrap_CPerlSocket_ReadData},
{"ZNCc::CPerlSocket_ReadLine", _wrap_CPerlSocket_ReadLine},
{"ZNCc::CPerlSocket_GetSockObj", _wrap_CPerlSocket_GetSockObj},
{"ZNCc::CreatePerlSocket", _wrap_CreatePerlSocket},
{"ZNCc::HaveIPv6", _wrap_HaveIPv6},
{"ZNCc::HaveSSL", _wrap_HaveSSL},
{"ZNCc::_GetSOMAXCONN", _wrap__GetSOMAXCONN},
{"ZNCc::GetVersionMajor", _wrap_GetVersionMajor},
{"ZNCc::GetVersionMinor", _wrap_GetVersionMinor},
{"ZNCc::GetVersion", _wrap_GetVersion},
{"ZNCc::GetVersionExtra", _wrap_GetVersionExtra},
{"ZNCc::new_String", _wrap_new_String},
{"ZNCc::String_GetPerlStr", _wrap_String_GetPerlStr},
{"ZNCc::delete_String", _wrap_delete_String},
{"ZNCc::new_StrPair", _wrap_new_StrPair},
{"ZNCc::StrPair_first_set", _wrap_StrPair_first_set},
{"ZNCc::StrPair_first_get", _wrap_StrPair_first_get},
{"ZNCc::StrPair_second_set", _wrap_StrPair_second_set},
{"ZNCc::StrPair_second_get", _wrap_StrPair_second_get},
{"ZNCc::delete_StrPair", _wrap_delete_StrPair},
{"ZNCc::new_VPair", _wrap_new_VPair},
{"ZNCc::VPair_size", _wrap_VPair_size},
{"ZNCc::VPair_empty", _wrap_VPair_empty},
{"ZNCc::VPair_clear", _wrap_VPair_clear},
{"ZNCc::VPair_push", _wrap_VPair_push},
{"ZNCc::VPair_pop", _wrap_VPair_pop},
{"ZNCc::VPair_get", _wrap_VPair_get},
{"ZNCc::VPair_set", _wrap_VPair_set},
{"ZNCc::delete_VPair", _wrap_delete_VPair},
{"ZNCc::new_VWebSubPages", _wrap_new_VWebSubPages},
{"ZNCc::VWebSubPages_size", _wrap_VWebSubPages_size},
{"ZNCc::VWebSubPages_empty", _wrap_VWebSubPages_empty},
{"ZNCc::VWebSubPages_clear", _wrap_VWebSubPages_clear},
{"ZNCc::VWebSubPages_push", _wrap_VWebSubPages_push},
{"ZNCc::VWebSubPages_pop", _wrap_VWebSubPages_pop},
{"ZNCc::VWebSubPages_get", _wrap_VWebSubPages_get},
{"ZNCc::VWebSubPages_set", _wrap_VWebSubPages_set},
{"ZNCc::delete_VWebSubPages", _wrap_delete_VWebSubPages},
{"ZNCc::_VPair_Add2Str", _wrap__VPair_Add2Str},
{"ZNCc::_CreateWebSubPage", _wrap__CreateWebSubPage},
{"ZNCc::_CleanupStash", _wrap__CleanupStash},
{0,0}
};
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C"
#endif

XS(SWIG_init) {
  dXSARGS;
  int i;
  
  SWIG_InitializeModule(0);
  
  /* Install commands */
  for (i = 0; swig_commands[i].name; i++) {
    /* Casts only needed for Perl < 5.10. */
#ifdef __cplusplus
    newXS(const_cast<char*>(swig_commands[i].name), swig_commands[i].wrapper, const_cast<char*>(__FILE__));
#else
    newXS((char*)swig_commands[i].name, swig_commands[i].wrapper, (char*)__FILE__);
#endif
  }
  
  /* Install variables */
  for (i = 0; swig_variables[i].name; i++) {
    SV *sv;
    sv = get_sv(swig_variables[i].name, TRUE | 0x2 | GV_ADDMULTI);
    if (swig_variables[i].type) {
      SWIG_MakePtr(sv,(void *)1, *swig_variables[i].type,0);
    } else {
      sv_setiv(sv,(IV) 0);
    }
    swig_create_magic(sv, swig_variables[i].name, swig_variables[i].set, swig_variables[i].get); 
  }
  
  /* Install constant */
  for (i = 0; swig_constants[i].type; i++) {
    SV *sv;
    sv = get_sv(swig_constants[i].name, TRUE | 0x2 | GV_ADDMULTI);
    switch(swig_constants[i].type) {
    case SWIG_INT:
      sv_setiv(sv, (IV) swig_constants[i].lvalue);
      break;
    case SWIG_FLOAT:
      sv_setnv(sv, (double) swig_constants[i].dvalue);
      break;
    case SWIG_STRING:
      sv_setpv(sv, (const char *) swig_constants[i].pvalue);
      break;
    case SWIG_POINTER:
      SWIG_MakePtr(sv, swig_constants[i].pvalue, *(swig_constants[i].ptype),0);
      break;
    case SWIG_BINARY:
      SWIG_MakePackedObj(sv, swig_constants[i].pvalue, swig_constants[i].lvalue, *(swig_constants[i].ptype));
      break;
    default:
      break;
    }
    SvREADONLY_on(sv);
  }
  
  SWIG_TypeClientData(SWIGTYPE_p_CString, (void*) "ZNC::CString");
  SWIG_TypeClientData(SWIGTYPE_p_std__listT_CString_t, (void*) "ZNC::_stringlist");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_CIRCNetwork_p_t, (void*) "ZNC::VIRCNetworks");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_CChan_p_t, (void*) "ZNC::VChannels");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_CString_t, (void*) "ZNC::VCString");
  SWIG_TypeClientData(SWIGTYPE_p_std__mapT_CString_CString_t, (void*) "ZNC::PerlMCString");
  SWIG_TypeClientData(SWIGTYPE_p_MCString, (void*) "ZNC::MCString");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_CListener_p_t, (void*) "ZNC::VListeners");
  SWIG_TypeClientData(SWIGTYPE_p_std__dequeT_CBufLine_t, (void*) "ZNC::BufLines");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_std__vectorT_CString_t_t, (void*) "ZNC::VVString");
  SWIG_TypeClientData(SWIGTYPE_p_CUtils, (void*) "ZNC::CUtils");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CException_EX_Shutdown", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CException::EX_Shutdown)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CException_EX_Restart", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CException::EX_Restart)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CException, (void*) "ZNC::CException");
  SWIG_TypeClientData(SWIGTYPE_p_CTable, (void*) "ZNC::CTable");
  SWIG_TypeClientData(SWIGTYPE_p_CConfigEntry, (void*) "ZNC::CConfigEntry");
  SWIG_TypeClientData(SWIGTYPE_p_CConfig, (void*) "ZNC::CConfig");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CS_INVALID_SOCK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(-1)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CSCharBuffer, (void*) "ZNC::CSCharBuffer");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSSockAddr_RAF_ANY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSSockAddr::RAF_ANY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSSockAddr_RAF_INET", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSSockAddr::RAF_INET)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CSSockAddr, (void*) "ZNC::CSSockAddr");
  SWIG_TypeClientData(SWIGTYPE_p_CGetAddrInfo, (void*) "ZNC::CGetAddrInfo");
  SWIG_TypeClientData(SWIGTYPE_p_CCron, (void*) "ZNC::CCron");
  SWIG_TypeClientData(SWIGTYPE_p_CSMonitorFD, (void*) "ZNC::CSMonitorFD");
  SWIG_TypeClientData(SWIGTYPE_p_CSockCommon, (void*) "ZNC::CSockCommon");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_OUTBOUND", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::OUTBOUND)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_LISTENER", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::LISTENER)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_INBOUND", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::INBOUND)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_READ_EOF", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::READ_EOF)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_READ_ERR", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::READ_ERR)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_READ_EAGAIN", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::READ_EAGAIN)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_READ_CONNREFUSED", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::READ_CONNREFUSED)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_READ_TIMEDOUT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::READ_TIMEDOUT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SEL_OK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SEL_OK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SEL_TIMEOUT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SEL_TIMEOUT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SEL_EAGAIN", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SEL_EAGAIN)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SEL_ERR", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SEL_ERR)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SSL23", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SSL23)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SSL2", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SSL2)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_SSL3", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::SSL3)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_TLS1", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::TLS1)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_START", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_START)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_DNS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_DNS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_BINDVHOST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_BINDVHOST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_DESTDNS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_DESTDNS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_CONNECT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_CONNECT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_CONNECTSSL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_CONNECTSSL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CST_OK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CST_OK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CLT_DONT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CLT_DONT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CLT_NOW", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CLT_NOW)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CLT_AFTERWRITE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CLT_AFTERWRITE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_CLT_DEREFERENCE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::CLT_DEREFERENCE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_TMO_READ", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::TMO_READ)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_TMO_WRITE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::TMO_WRITE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_TMO_ACCEPT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::TMO_ACCEPT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_TMO_ALL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::TMO_ALL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_DNS_VHOST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::DNS_VHOST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Csock_DNS_DEST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Csock::DNS_DEST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Csock, (void*) "ZNC::Csock");
  SWIG_TypeClientData(SWIGTYPE_p_CSConnection, (void*) "ZNC::CSConnection");
  SWIG_TypeClientData(SWIGTYPE_p_CSSSLConnection, (void*) "ZNC::CSSSLConnection");
  SWIG_TypeClientData(SWIGTYPE_p_CSListener, (void*) "ZNC::CSListener");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_SUCCESS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::SUCCESS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_SELECT_ERROR", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::SELECT_ERROR)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_SELECT_TIMEOUT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::SELECT_TIMEOUT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_SELECT_TRYAGAIN", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::SELECT_TRYAGAIN)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_ECT_Read", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::ECT_Read)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CSocketManager_ECT_Write", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CSocketManager::ECT_Write)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CSocketManager, (void*) "ZNC::CSocketManager");
  SWIG_TypeClientData(SWIGTYPE_p_TSocketManagerT_CZNCSock_t, (void*) "ZNC::ZNCSocketManager");
  SWIG_TypeClientData(SWIGTYPE_p_CZNCSock, (void*) "ZNC::CZNCSock");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ADDR_IPV4ONLY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(ADDR_IPV4ONLY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ADDR_IPV6ONLY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(ADDR_IPV6ONLY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ADDR_ALL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(ADDR_ALL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CSockManager, (void*) "ZNC::CSockManager");
  SWIG_TypeClientData(SWIGTYPE_p_CSocket, (void*) "ZNC::CSocket");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_REGULAR", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_REGULAR)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_DIRECTORY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_DIRECTORY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_CHARACTER", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_CHARACTER)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_BLOCK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_BLOCK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_FIFO", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_FIFO)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_LINK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_LINK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FT_SOCK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FT_SOCK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_Name", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_Name)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_Size", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_Size)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_ATime", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_ATime)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_MTime", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_MTime)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_CTime", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_CTime)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CFile_FA_UID", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CFile::FA_UID)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CFile, (void*) "ZNC::CFile");
  SWIG_TypeClientData(SWIGTYPE_p_CDir, (void*) "ZNC::CDir");
  SWIG_TypeClientData(SWIGTYPE_p_CTimer, (void*) "ZNC::CTimer");
  SWIG_TypeClientData(SWIGTYPE_p_CFPTimer, (void*) "ZNC::CFPTimer");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModInfo_GlobalModule", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModInfo::GlobalModule)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModInfo_UserModule", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModInfo::UserModule)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModInfo_NetworkModule", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModInfo::NetworkModule)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CModInfo, (void*) "ZNC::CModInfo");
  SWIG_TypeClientData(SWIGTYPE_p_CModCommand, (void*) "ZNC::CModCommand");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModule_CONTINUE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModule::CONTINUE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModule_HALT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModule::HALT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModule_HALTMODS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModule::HALTMODS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModule_HALTCORE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModule::HALTCORE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CModule_UNLOAD", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CModule::UNLOAD)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CModule, (void*) "ZNC::CModule");
  SWIG_TypeClientData(SWIGTYPE_p_CModules, (void*) "ZNC::CModules");
  SWIG_TypeClientData(SWIGTYPE_p_CNick, (void*) "ZNC::CNick");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_Voice", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::Voice)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_HalfOp", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::HalfOp)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_Op", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::Op)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_Admin", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::Admin)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_Owner", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::Owner)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Private", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Private)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Secret", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Secret)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Moderated", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Moderated)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_InviteOnly", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_InviteOnly)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_NoMessages", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_NoMessages)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_OpTopic", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_OpTopic)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Limit", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Limit)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Key", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Key)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Op", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Op)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Voice", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Voice)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Ban", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Ban)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CChan_M_Except", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(CChan::M_Except)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CChan, (void*) "ZNC::CChan");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CUser_HASH_NONE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CUser::HASH_NONE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CUser_HASH_MD5", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CUser::HASH_MD5)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CUser_HASH_SHA256", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CUser::HASH_SHA256)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CUser_HASH_DEFAULT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CUser::HASH_DEFAULT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CUser, (void*) "ZNC::CUser");
  SWIG_TypeClientData(SWIGTYPE_p_CIRCNetwork, (void*) "ZNC::CIRCNetwork");
  SWIG_TypeClientData(SWIGTYPE_p_CAuthBase, (void*) "ZNC::CAuthBase");
  SWIG_TypeClientData(SWIGTYPE_p_CClientAuth, (void*) "ZNC::CClientAuth");
  SWIG_TypeClientData(SWIGTYPE_p_CClient, (void*) "ZNC::CClient");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CIRCSock_ListArg", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CIRCSock::ListArg)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CIRCSock_HasArg", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CIRCSock::HasArg)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CIRCSock_ArgWhenSet", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CIRCSock::ArgWhenSet)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CIRCSock_NoArg", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CIRCSock::NoArg)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CIRCSock, (void*) "ZNC::CIRCSock");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CListener_ACCEPT_IRC", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CListener::ACCEPT_IRC)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CListener_ACCEPT_HTTP", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CListener::ACCEPT_HTTP)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CListener_ACCEPT_ALL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CListener::ACCEPT_ALL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CListener, (void*) "ZNC::CListener");
  SWIG_TypeClientData(SWIGTYPE_p_CRealListener, (void*) "ZNC::CRealListener");
  SWIG_TypeClientData(SWIGTYPE_p_CIncomingConnection, (void*) "ZNC::CIncomingConnection");
  SWIG_TypeClientData(SWIGTYPE_p_CHTTPSock, (void*) "ZNC::CHTTPSock");
  SWIG_TypeClientData(SWIGTYPE_p_CTemplateTagHandler, (void*) "ZNC::CTemplateTagHandler");
  SWIG_TypeClientData(SWIGTYPE_p_CTemplateOptions, (void*) "ZNC::CTemplateOptions");
  SWIG_TypeClientData(SWIGTYPE_p_CTemplateLoopContext, (void*) "ZNC::CTemplateLoopContext");
  SWIG_TypeClientData(SWIGTYPE_p_CTemplate, (void*) "ZNC::CTemplate");
  SWIG_TypeClientData(SWIGTYPE_p_CZNCTagHandler, (void*) "ZNC::CZNCTagHandler");
  SWIG_TypeClientData(SWIGTYPE_p_CWebSession, (void*) "ZNC::CWebSession");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CWebSubPage_F_ADMIN", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CWebSubPage::F_ADMIN)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CWebSubPage, (void*) "ZNC::CWebSubPage");
  SWIG_TypeClientData(SWIGTYPE_p_CWebSessionMap, (void*) "ZNC::CWebSessionMap");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CWebSock_PAGE_NOTFOUND", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CWebSock::PAGE_NOTFOUND)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CWebSock_PAGE_PRINT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CWebSock::PAGE_PRINT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CWebSock_PAGE_DEFERRED", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CWebSock::PAGE_DEFERRED)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CWebSock_PAGE_DONE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CWebSock::PAGE_DONE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CWebSock, (void*) "ZNC::CWebSock");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CZNC_ECONFIG_NOTHING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CZNC::ECONFIG_NOTHING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CZNC_ECONFIG_NEED_REHASH", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CZNC::ECONFIG_NEED_REHASH)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "CZNC_ECONFIG_NEED_WRITE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(CZNC::ECONFIG_NEED_WRITE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CZNC, (void*) "ZNC::CZNC");
  SWIG_TypeClientData(SWIGTYPE_p_CServer, (void*) "ZNC::CServer");
  SWIG_TypeClientData(SWIGTYPE_p_CDebug, (void*) "ZNC::CDebug");
  SWIG_TypeClientData(SWIGTYPE_p_CDebugStream, (void*) "ZNC::CDebugStream");
  SWIG_TypeClientData(SWIGTYPE_p_CExecSock, (void*) "ZNC::CExecSock");
  SWIG_TypeClientData(SWIGTYPE_p_CBufLine, (void*) "ZNC::CBufLine");
  SWIG_TypeClientData(SWIGTYPE_p_CBuffer, (void*) "ZNC::CBuffer");
  SWIG_TypeClientData(SWIGTYPE_p_CPerlModule, (void*) "ZNC::CPerlModule");
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Perl_NotFound", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Perl_NotFound)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Perl_Loaded", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Perl_Loaded)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/home/somebody/app/swig_3.0.0/share/swig/3.0.0/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "Perl_LoadError", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Perl_LoadError)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_CPerlTimer, (void*) "ZNC::CPerlTimer");
  SWIG_TypeClientData(SWIGTYPE_p_CPerlSocket, (void*) "ZNC::CPerlSocket");
  SWIG_TypeClientData(SWIGTYPE_p_String, (void*) "ZNC::String");
  SWIG_TypeClientData(SWIGTYPE_p_std__pairT_CString_CString_t, (void*) "ZNC::StrPair");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_std__pairT_CString_CString_t_t, (void*) "ZNC::VPair");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_CSmartPtrT_CWebSubPage_t_t, (void*) "ZNC::VWebSubPages");
  ST(0) = &PL_sv_yes;
  XSRETURN(1);
}

